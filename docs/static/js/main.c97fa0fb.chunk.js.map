{"version":3,"sources":["actions/index.js","GeodaProxy.js","utils/dataFunction.js","utils/mapFunction.js","utils/getJson.js","utils/getParseCSV.js","utils/mergeData.js","utils/colIndex.js","utils/colLookup.js","utils/findDates.js","utils/getDataForBins.js","utils/getDataForCharts.js","utils/getDataForLisa.js","utils/getCurrentWuuid.js","utils/getLisaValues.js","utils/getVarId.js","utils/getGeoidIndex.js","utils/loadGeojsonToGeoda.js","utils/getCartogramValues.js","config/index.js","components/map.js","styled_components/index.js","components/slider.js","components/legend.js","components/dataPanel.js","components/bottomPanel.js","components/tooltip.js","components/variablePanel.js","components/mainLineChart.js","components/tooltipPopper.js","App.js","constants/defaults.js","reducers/index.js","index.js"],"names":["storeData","data","name","type","payload","storeGeojson","setCurrentData","setColumnNames","setDate","date","setVariableParams","params","setMapParams","setAnchorEl","anchorEl","setPanelState","window","Module","isInt","n","Number","GeodaProxy","this","geojson_maps","map_uid","file_target","uint8_t_arr","Uint8Array","result","uint8_t_ptr","_malloc","length","HEAPU8","set","ccall","_free","map_type","get_map_type","cc","get_centroids","xx","get_x","yy","get_y","centroids","i","size","push","get","get_num_obs","col_name","get_numeric_col","order","include_lower_order","precision","rook_weights","queen_weights","is_arc","is_mile","min_distance_threshold","k","power","is_inverse","knn_weights","dist_thres","dist_weights","kernel","adaptive_bandwidth","use_kernel_diagonals","kernel_weights","kernel_bandwidth_weights","weight_uid","local_moran","values","local_moran1","toVecDouble","local_g","local_gstar","local_geary","local_joincount","idx","nbrs","get_neighbors","parseVecInt","vi","j","vvi","sub","vd","input","vs","VectorString","push_back","VectorDouble","isNaN","Infinity","sel_fields","bound_var","min_bound","method","col_names","toVecString","clusters_vec","redcap","parseVecVecInt","tabu_length","cool_rate","n_iter","maxp","break_name","sel_field","breaks_vec","custom_breaks1","custom_breaks","breaks","parseVecDouble","orig_breaks","bins","id_array","txt","toFixed","undefined","unshift","NEGATIVE_INFINITY","POSITIVE_INFINITY","v","min_val","max_val","cart","cartogram","x","y","r","get_radius","min_x","max_x","min_y","max_y","scale_x","scale_y","dataFn","numeratorData","numeratorProperty","index","range","denominatorData","denominatorProperty","denominatorIndex","denominatorRange","scale","mapFn","val","colors","maptype","includes","url","gda_proxy","a","fetch","then","response","responseFromJson","clone","loadGeojsonToGeoda","json","geoidIndex","getGeoidIndex","features","tempData","getJson","joinCol","accumulate","ok","text","Promise","reject","status","d3","rtn","indexStart","findDates","Object","keys","vals","tempArr","getParseCSV","mergeData","featureCollection","featureCollectionJoinCol","joinData","joinDataNames","joinDataCol","dataDict","colNumCheck","parseInt","properties","isInteger","cols","merged","merge","colIndex","table","indexOf","colLookup","columns","dataset","property","Date","parse","slice","getDataForBins","tableData","nType","numerProp","numerIndex","numerRange","denomTable","dType","denomProp","denomIndex","denomRange","t0","performance","now","tempIndex","tempDenomIndex","console","log","getDataForCharts","startIndex","dates","tempObj","sum","count","dailyNew","getDataForLisa","tempDict","GEOID","getCurrentWuuid","selectedDataset","w","CreateQueenWeights","get_uid","getLisaValues","geoids","all_zeros","clusters","sig","lisa","map_uuid","w_uuid","significances","getVarId","currentData","dataParams","numerator","nIndex","nRange","denominator","dProperty","dIndex","dRange","geoidOrder","indexOrder","arrayBuffer","ReadGeojsonMap","split","getCartogramValues","cartogramData","value","colorScales","fixedScales","Math","pow","dataPresets","geojson","csv","joinCols","tableNames","tooltipInfo","Choropleth","NaturalBreaksFixed","NaturalBreaks","BoxMap","LocalClustering","LocalMoran","NotSig","HighHigh","LowLow","HighLow","LowHigh","PovChldPrc","IncRt","MedianHouseholdIncome","FdInsPrc","UnEmplyPrc","UnInPrc","PrmPhysRt","PrevHospRt","RsiSgrBlckRt","SvrHsngPrbRt","Over65YearsPrc","AdObPrc","AdDibPrc","SmkPrc","ExcDrkPrc","DrOverdMrtRt","LfExpRt","SlfHlthPrc","SeverityIndex","PredictedDeaths","PredictedDeathsInterval","healthfactor","healthcontext","healthlife","Hypersegregated","href","target","rel","BlackBelt","TestingCapacity","USCongress","IcoSphereGeometry","iterations","defaultMapStyle","fromJS","MAP_STYLE","initialViewState","latitude","longitude","zoom","pitch","bearing","DATA_URL","CONTINENTS","process","BLACKBELT","SEG_CITIES","CONGRESS_DISTRICTS","CONGRESS_CENTROIDS","RESERVATIONS","HoverDiv","styled","div","viewGlobe","button","props","isActive","GlobeView","id","controller","resolution","view","MapView","repeat","Map","useState","hoverInfo","setHoverInfo","highlightGeog","setHighlightGeog","globalMap","mapStyle","currLisaData","setCurrLisaData","viewState","setViewState","setCartogramData","currVarId","setCurrVarId","storedData","useSelector","state","storedGeojson","storedLisaData","storedCartogramData","mapParams","dispatch","useDispatch","useEffect","arr","vizType","Layers","GeoJsonLayer","pickable","stroked","filled","wireframe","getFillColor","visible","mapType","extruded","opacity","f","hasOwnProperty","nProperty","colorScale","GetFillColor","getElevation","GetHeight","updateTriggers","onHover","info","onClick","object","getLineColor","lineWidthScale","getLineWidth","lineWidthMinPixels","overlay","PolygonLayer","getPolygon","d","ScatterplotLayer","getPosition","position","getRadius","radius","transitions","style","left","top","width","height","layers","views","reuseMaps","preventStyleDiffing","mapboxApiAccessToken","right","bottom","zIndex","positionOptions","enableHighAccuracy","trackUserLocation","onGeolocate","coords","transitionInterpolator","FlyToInterpolator","transitionDuration","handleGeolocate","marginBottom","onViewportChange","pointerEvents","NAME","state_name","cases","toLocaleString","deaths","StyledDropDown","FormControl","component","SwitchContainer","Grid","SliderContainer","PlayPauseButton","Button","LineSlider","Slider","RangeSlider","DateSlider","startDateIndex","timerId","setTimerId","customRange","setCustomRange","rangeSelectVal","setRangeSelectVal","valuetext","visibility","container","spacing","item","xs","rate","interval","setInterval","o","clearInterval","handlePlayPause","viewBox","transform","lg","valueLabelDisplay","onChange","event","newValue","getAriaValueText","valueLabelFormat","aria-labelledby","min","step","max","rIndex","rRange","paddingLeft","InputLabel","htmlFor","Select","MenuItem","LegendContainer","LegendTitle","h3","BinLabels","binLength","firstBinZero","BinBars","Legend","title","currentVariable","map","color","className","backgroundColor","splice","cleanBins","label","Switch","checked","binMode","DataPanelContainer","DataPanel","sidebarData","panelState","parsePredictedDate","list","population","beds","chr_health_factors","chr_health_context","chr_life","predictions","version","getChartHeight","document","querySelector","offsetHeight","BottomDrawer","OpenCloseButton","BottomPanel","bottomMargin","setBottomMargin","addEventListener","chart","TooltipContainer","Tooltip","onMouseEnter","currentTarget","onMouseLeave","VariablePanelContainer","StyledButtonGroup","ButtonGroup","TwoUp","VariablePanel","columnNames","PresetVariables","CountyVariables","StateVariables","handleVizTypeButton","variables","ListSubheader","disabled","variable","tempParams","FormLabel","RadioGroup","aria-label","nBins","FormControlLabel","control","Radio","data-val","resource","src","ChartContainer","ChartTitle","monthNames","millionFormatter","thousandFormatter","dateFormatter","tempDate","getMonth","CustomTick","labelFormatter","getStartDate","getEndDate","CustomTooltip","active","background","padding","borderRadius","boxShadow","textShadow","fontWeight","dataKey","MainLineChart","chartData","logChart","setLogChart","margin","tick","fill","fontSize","fontFamily","yAxisId","domain","allowDataOverflow","ticks","marginTop","angle","orientation","content","x1","x2","fillOpacity","isAnimationActive","stroke","dot","prev","inputProps","Popover","open","Boolean","Popper","placement","disablePortal","modifiers","flip","enabled","preventOverflow","boundariesElement","maxWidth","App","set_gda_proxy","getColumns","names","loadData","csvs","csvPromises","all","waitForWASM","setTimeout","GetCentroids","getCentroids","setDates","getDates","tempId","storeCartogramData","fixedScale","nb","INITIAL_STATE","geodaProxy","storedCSV","currDate","currDateIndex","currentMethod","currentOverlay","currentResource","activeGeoid","storedRange","currentGeoid","reducer","action","geoid","obj","geojsonObj","lisaObj","cartoObj","centroidsObj","proxy","datesObj","currentDataFn","fn","colObj","binsObj","use3D","dateObj","paramObj","storedIndex","mapParamObj","panelsObj","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","WebFont","load","google","families","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c97fa0fb.chunk.js","sourcesContent":["let timer = null;\r\n\r\nexport const setGeoid = (geoid) => {\r\n    return {\r\n        type: 'SET_GEOID',\r\n        payload: {\r\n            geoid\r\n        }\r\n    }\r\n}\r\n\r\nexport const storeData = (data, name) => {\r\n    return {\r\n        type: 'SET_STORED_DATA',\r\n        payload: {\r\n            data,\r\n            name\r\n        }   \r\n    }\r\n}\r\n\r\nexport const storeGeojson = (data, name) => {\r\n    return {\r\n        type: 'SET_STORED_GEOJSON',\r\n        payload: {\r\n            data,\r\n            name\r\n        }   \r\n    }\r\n}\r\n\r\nexport const storeLisaValues = (data, name) => {\r\n    return {\r\n        type: 'SET_STORED_LISA_DATA',\r\n        payload: {\r\n            data,\r\n            name\r\n        }   \r\n    }\r\n}\r\n\r\nexport const storeCartogramData = (data, name) => {\r\n    return {\r\n        type: 'SET_STORED_CARTOGRAM_DATA',\r\n        payload: {\r\n            data,\r\n            name\r\n        }   \r\n    }\r\n}\r\n\r\nexport const setCurrentData = (data) => {\r\n    return {\r\n        type: 'SET_CURRENT_DATA',\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport const setGeodaProxy = (proxy) => {\r\n    return {\r\n        type: 'SET_GEODA_PROXY',\r\n        payload: {\r\n            proxy\r\n        }\r\n    }\r\n}\r\n\r\nexport const setCentroids = (data, name) => {\r\n    return {\r\n        type: 'SET_CENTROIDS',\r\n        payload: {\r\n            data,\r\n            name\r\n        }\r\n    }\r\n}\r\n\r\nexport const setDates = (data, name) => {\r\n    return {\r\n        type: 'SET_DATES',\r\n        payload: {\r\n            data,\r\n            name\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const setDataFunction = (fn) => {\r\n    return {\r\n        type: 'SET_DATA_FUNCTION',\r\n        payload: {\r\n            fn\r\n        }\r\n    }\r\n}\r\n\r\nexport const setColumnNames = (data, name) => {\r\n    return {\r\n        type: 'SET_COLUMN_NAMES',\r\n        payload: {\r\n            data,\r\n            name\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const setDate = (date) => {\r\n    return {\r\n        type: 'SET_CURR_DATE',\r\n        payload: {\r\n            date\r\n        }\r\n    }\r\n}\r\n\r\nexport const setDateIndex = (index) => {\r\n    return {\r\n        type: 'SET_DATE_INDEX',\r\n        payload: {\r\n            index\r\n        }\r\n    }\r\n}\r\n\r\nexport const setStartDateIndex = (index) => {\r\n    return {\r\n        type: 'SET_START_DATE_INDEX',\r\n        payload: {\r\n            index\r\n        }\r\n    }\r\n}\r\n\r\nexport const setBins = (bins, breaks) => {\r\n    return {\r\n        type: 'SET_BINS',\r\n        payload: {\r\n            bins,\r\n            breaks\r\n        }\r\n    }\r\n}\r\n\r\nexport const set3D = () => {\r\n    return {\r\n        type: 'SET_3D'\r\n    }\r\n}\r\n\r\nexport const setDataSidebar = ( data ) => {\r\n    return {\r\n        type: 'SET_DATA_SIDEBAR',\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport const incrementDate = ( index ) => {\r\n    return {\r\n        type: 'INCREMENT_DATE',\r\n        payload: {\r\n            index\r\n        }\r\n    }\r\n}\r\n\r\nexport const setVariableParams = ( params ) => {\r\n    return {\r\n        type: 'SET_VARIABLE_PARAMS',\r\n        payload: {\r\n            params\r\n        }\r\n    }\r\n}\r\n\r\nexport const setMapParams = ( params ) => {\r\n    return {\r\n        type: 'SET_MAP_PARAMS',\r\n        payload: {\r\n            params\r\n        }\r\n    }\r\n}\r\n\r\nexport const setChartData = ( data ) => {\r\n    return {\r\n        type: 'SET_CHART_DATA',\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport const setVariableName = ( name ) => {\r\n    return {\r\n        type: 'SET_VARIABLE_NAME',\r\n        payload: {\r\n            name\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const setAnchorEl = ( anchorEl ) => {\r\n    return {\r\n        type: 'SET_ANCHOR_EL',\r\n        payload: {\r\n            anchorEl\r\n        }\r\n    }\r\n}\r\n\r\nexport const setPanelState = ( params ) => {\r\n    return {\r\n        type: 'SET_PANELS',\r\n        payload: {\r\n            params\r\n        }\r\n    }\r\n}","var Module = window.Module;\r\n\r\nfunction isInt(n) {\r\n  return Number(n) === n && n % 1 === 0;\r\n}\r\n\r\nclass GeodaProxy {\r\n  // file_target is evt.target\r\n  constructor() {\r\n    this.geojson_maps = {};\r\n  }\r\n\r\n  ReadGeojsonMap(map_uid, file_target) {\r\n    //evt.target.result is an ArrayBuffer. In js, \r\n    const uint8_t_arr = new Uint8Array(file_target.result);\r\n    //First we need to allocate the wasm memory. \r\n    const uint8_t_ptr = window.Module._malloc(uint8_t_arr.length);\r\n    //Now that we have a block of memory we can copy the file data into that block\r\n    window.Module.HEAPU8.set(uint8_t_arr, uint8_t_ptr);\r\n    // pass the address of the wasm memory we just allocated to our function\r\n    //window.Module.new_geojsonmap(map_uid, uint8_t_ptr, uint8_t_arr.length);\r\n    window.Module.ccall(\"new_geojsonmap1\", null, [\"string\", \"number\", \"number\"], [map_uid, uint8_t_ptr, uint8_t_arr.length]);\r\n\r\n    //Lastly, according to the docs, we should call ._free here.\r\n    window.Module._free(uint8_t_ptr);\r\n    // store the map and map type\r\n    let map_type = window.Module.get_map_type(map_uid);\r\n    this.geojson_maps[map_uid] = map_type;\r\n    return map_uid;\r\n  }\r\n\r\n  Has(map_uid) {\r\n    return map_uid in this.geojson_maps;\r\n  }\r\n\r\n  List() {\r\n    return this.geojson_maps;\r\n  }\r\n\r\n  GetCentroids(map_uid) {\r\n    let cc = window.Module.get_centroids(map_uid);\r\n    let xx = cc.get_x();\r\n    let yy = cc.get_y();\r\n    var centroids = [];\r\n    for (let i = 0; i < xx.size(); ++i) {\r\n      centroids.push([xx.get(i), yy.get(i)]);\r\n    }\r\n    return centroids;\r\n  }\r\n\r\n  GetNumObs(map_uid) {\r\n    let n = window.Module.get_num_obs(map_uid);\r\n    return n;\r\n  }\r\n\r\n  GetMapType(map_uid) {\r\n    return this.geojson_maps[map_uid];\r\n  }\r\n\r\n  GetNumericCol(map_uid, col_name) {\r\n    // return VectorDouble\r\n    return window.Module.get_numeric_col(map_uid, col_name)\r\n  }\r\n\r\n  CreateRookWeights(map_uid, order, include_lower_order, precision) {\r\n    let w_uid = window.Module.rook_weights(map_uid, order, include_lower_order, precision);\r\n    return w_uid;\r\n  }\r\n\r\n  CreateQueenWeights(map_uid, order, include_lower_order, precision) {\r\n    let w_uid = window.Module.queen_weights(map_uid, order, include_lower_order, precision);\r\n    return w_uid;\r\n  }\r\n\r\n  GetMinDistThreshold(map_uid, is_arc, is_mile) {\r\n    let val = window.Module.min_distance_threshold(map_uid, is_arc, is_mile);\r\n    return val;\r\n  }\r\n\r\n  CreateKnnWeights(map_uid, k, power, is_inverse, is_arc, is_mile) {\r\n    let w = window.Module.knn_weights(map_uid, k, power, is_inverse, is_arc, is_mile);\r\n    return w;\r\n  }\r\n\r\n  CreateDistWeights(map_uid, dist_thres, power, is_inverse, is_arc, is_mile) {\r\n    let w = window.Module.dist_weights(map_uid, dist_thres, power, is_inverse, is_arc, is_mile);\r\n    return w;\r\n  }\r\n\r\n  CreateKernelWeights(map_uid, k, kernel, adaptive_bandwidth, use_kernel_diagonals, is_arc, is_mile) {\r\n    let w = window.Module.kernel_weights(map_uid, k, kernel, adaptive_bandwidth, use_kernel_diagonals, is_arc, is_mile);\r\n    return w;\r\n  }\r\n\r\n  CreateKernelBandwidthWeights(map_uid, dist_thres, kernel, use_kernel_diagonals, is_arc, is_mile) {\r\n    let w = window.Module.kernel_bandwidth_weights(map_uid, dist_thres, kernel, use_kernel_diagonals, is_arc, is_mile);\r\n    return w;\r\n  }\r\n\r\n  local_moran(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_moran(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  local_moran1(map_uid, weight_uid, values) {\r\n    return window.Module.local_moran1(map_uid, weight_uid, this.toVecDouble(values));\r\n  }\r\n\r\n  local_g(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_g(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  local_gstar(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_gstar(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  local_geary(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_geary(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  local_joincount(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_joincount(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  GetNeighbors(map_uid, weight_uid, idx) {\r\n    let nbrs = window.Module.get_neighbors(map_uid, weight_uid, idx);\r\n    return this.parseVecInt(nbrs);\r\n  }\r\n\r\n  parseVecInt(vi) {\r\n    let result = [];\r\n    for (let j = 0; j < vi.size(); ++j) {\r\n      result.push(vi.get(j));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  parseVecVecInt(vvi) {\r\n    let result = [];\r\n    for (let i = 0; i < vvi.size(); ++i) {\r\n      let sub = [];\r\n      let vi = vvi.get(i);\r\n      for (let j = 0; j < vi.size(); ++j) {\r\n        sub.push(vi.get(j));\r\n      }\r\n      result.push(sub);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  parseVecDouble(vd) {\r\n    let result = []\r\n    for (let i = 0; i < vd.size(); ++i) {\r\n      result.push(vd.get(i));\r\n    }\r\n    return result;\r\n  }\r\n\r\n\r\n  toVecString(input) {\r\n    let vs = new window.Module.VectorString();\r\n    for (let i = 0; i < input.length; ++i) {\r\n      vs.push_back(input[i]);\r\n    }\r\n    return vs;\r\n  }\r\n\r\n  toVecDouble(input) {\r\n    let vs = new window.Module.VectorDouble();\r\n    for (let i = 0; i < input.length; ++i) {\r\n      if (isNaN(input[i]) || input[i] == Infinity)\r\n        vs.push_back(0);\r\n      else\r\n        vs.push_back(input[i]);\r\n    }\r\n    return vs;\r\n  }\r\n\r\n  redcap(map_uid, weight_uid, k, sel_fields, bound_var, min_bound, method) {\r\n    let col_names = this.toVecString(sel_fields);\r\n    let clusters_vec = window.Module.redcap(map_uid, weight_uid, k, col_names, bound_var, min_bound, method);\r\n    let clusters = this.parseVecVecInt(clusters_vec);\r\n    return clusters;\r\n  }\r\n\r\n  maxp(map_uid, weight_uid, k, sel_fields, bound_var, min_bound, method, tabu_length, cool_rate, n_iter) {\r\n    let col_names = this.toVecString(sel_fields);\r\n    let clusters_vec = window.Module.maxp(map_uid, weight_uid, col_names, bound_var, min_bound, tabu_length, cool_rate, method, k, n_iter);\r\n    let clusters = this.parseVecVecInt(clusters_vec);\r\n    return clusters;\r\n  }\r\n\r\n  custom_breaks(map_uid, break_name, k, sel_field, values) {\r\n    var breaks_vec;\r\n    if (sel_field == null) {\r\n      breaks_vec = window.Module.custom_breaks1(map_uid, k, break_name, this.toVecDouble(values));\r\n    } else {\r\n      breaks_vec = window.Module.custom_breaks(map_uid, k, sel_field, break_name);\r\n    }\r\n    let breaks = this.parseVecDouble(breaks_vec);\r\n    var orig_breaks = breaks;\r\n\r\n    let bins = [];\r\n    let id_array = [];\r\n    for (let i = 0; i < breaks.length; ++i) {\r\n      id_array.push([]);\r\n      let txt = isInt(breaks[i]) ? breaks[i] : breaks[i].toFixed(2);\r\n      bins.push(\"\" + txt);\r\n    }\r\n    id_array.push([]);\r\n    let txt = breaks[breaks.length - 1];\r\n    if (txt != undefined) {\r\n      txt = isInt(txt) ? txt : txt.toFixed(2);\r\n      bins.push(\">\" + txt);\r\n    }\r\n\r\n    breaks.unshift(Number.NEGATIVE_INFINITY);\r\n    breaks.push(Number.POSITIVE_INFINITY);\r\n\r\n    for (let i = 0; i < values.length; ++i) {\r\n      let v = values[i];\r\n      for (let j = 0; j < breaks.length - 1; ++j) {\r\n        let min_val = breaks[j];\r\n        let max_val = breaks[j + 1];\r\n        if (v >= min_val && v < max_val) {\r\n          id_array[j].push(i);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < bins.length; ++i) {\r\n      //bins[i] += \" (\" + id_array[i].length + ')';\r\n    }\r\n\r\n    return {\r\n      'k': k,\r\n      'bins': bins,\r\n      'breaks': orig_breaks,\r\n      'id_array': id_array\r\n    }\r\n  }\r\n\r\n  cartogram(map_uid, values) {\r\n    let cart = window.Module.cartogram(map_uid, this.toVecDouble(values));\r\n    let x = cart.get_x();\r\n    let y = cart.get_y();\r\n    let r = cart.get_radius();\r\n    // rescale x, y [-100,0], [0, 45]\r\n    let min_x = x.get(0);\r\n    let max_x = x.get(0);\r\n    let min_y = y.get(0);\r\n    let max_y = y.get(0);\r\n    for (let i = 0; i < x.size(); ++i) {\r\n      if (min_x > x.get(i)) min_x = x.get(i);\r\n      if (max_x < x.get(i)) max_x = x.get(i);\r\n      if (min_y > y.get(i)) min_y = y.get(i);\r\n      if (max_y < y.get(i)) max_y = y.get(i);\r\n    }\r\n    let scale_x = 100.0 / (max_x - min_x);\r\n    let scale_y = 45.0 / (max_y - min_y);\r\n\r\n\r\n    var result = [];\r\n    for (let i = 0; i < x.size(); ++i) {\r\n      let xx = (x.get(i) - min_x) * scale_x;\r\n      let yy = (y.get(i) - min_y) * scale_y;\r\n      result.push({\r\n        'properties': {\r\n          'id': i\r\n        },\r\n        'position': [x.get(i) / 10000.0, y.get(i) / 10000.0],\r\n        'radius': r.get(i)\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default GeodaProxy","// branchless variant\r\n// const dataFn = (numeratorData, numeratorProperty, index, range, denominatorData, denominatorProperty, denominatorIndex, denominatorRange, scale)  => {\r\n\r\n//     return (\r\n//       (\r\n//         (\r\n//           (\r\n//             (numeratorData[index]||numeratorData[numeratorProperty])\r\n//             -\r\n//             ((range!==null)&&(numeratorData[index-range]))\r\n//           )\r\n          \r\n//           /\r\n//           (range+(range===null))\r\n//         )\r\n//       /\r\n//         (\r\n//           (\r\n//             (\r\n//               (denominatorData[denominatorIndex]||denominatorData[denominatorProperty])\r\n//               -\r\n//               ((denominatorRange!==null)&&(denominatorData[denominatorIndex-denominatorRange]))\r\n//             )\r\n//             /\r\n//             (denominatorRange+(denominatorRange===null))\r\n//           )\r\n//           ||\r\n//             (denominatorData[denominatorProperty])\r\n//           || \r\n//           1\r\n//         )\r\n//       )\r\n//       *\r\n//       scale\r\n//     )\r\n// }\r\n\r\n// export default dataFn;\r\n\r\nconst dataFn = (numeratorData, numeratorProperty, index, range, denominatorData, denominatorProperty, denominatorIndex, denominatorRange, scale)  => {\r\n  if (numeratorData === undefined) {\r\n    return 0;\r\n  } else if (denominatorProperty===null&&range===null){ // whole count or number -- no range, no normalization\r\n    return (numeratorData[numeratorProperty]||numeratorData[index])*scale\r\n  } else if (denominatorProperty===null&&range!==null){ // range number, daily or weekly count -- no normalization\r\n    return (numeratorData[index]-numeratorData[index-range])/range*scale\r\n  } else if (denominatorProperty!==null&&range===null){ // whole count or number normalized -- no range\r\n    return (numeratorData[numeratorProperty]||numeratorData[index])/(denominatorData[denominatorProperty]||denominatorData[denominatorIndex])*scale\r\n  } else if (denominatorProperty!==null&&range!==null&&denominatorRange===null){ // range number, daily or weekly count, normalized to a single value\r\n    return ((numeratorData[index]-numeratorData[index-range])/range)/(denominatorData[denominatorProperty]||denominatorData[denominatorIndex])*scale\r\n  } else if (denominatorProperty!==null&&range!==null&&denominatorRange!==null){ // range number, daily or weekly count, normalized to a range number, daily or weekly count\r\n    return ((numeratorData[index]-numeratorData[index-range])/range)/((denominatorData[denominatorIndex]-denominatorData[denominatorIndex-denominatorRange])/denominatorRange)*scale\r\n  } else {      \r\n    return 0;\r\n  }\r\n}\r\n\r\nexport default dataFn;","const mapFn = (val, bins, colors, maptype) => {\r\n  if (maptype === \"natural_breaks\") {\r\n    if (val == 0) return colors[0];\r\n    for (let i=1; i<bins.length; i++) {\r\n      if (val < bins[i]) {\r\n        return colors[i]\r\n      }\r\n    }\r\n    return colors[0];\r\n  } else if (maptype.includes(\"hinge\")) {\r\n    for (let i=1; i<bins.length; i++) {\r\n      if (val < bins[i]) {\r\n        return colors[i-1]\r\n      }\r\n    }\r\n    return colors[0];\r\n  }\r\n}\r\n\r\nexport default mapFn","import { loadGeojsonToGeoda, getGeoidIndex } from '../utils';\r\nimport { sortBy } from 'lodash';\r\n\r\nasync function getJson(url, gda_proxy){\r\n    const tempData = await fetch(url)\r\n      .then(response => {\r\n        const responseFromJson = response.clone();        \r\n        loadGeojsonToGeoda(responseFromJson, url, gda_proxy);\r\n        return response.json();\r\n      }).then(data => {\r\n        // data.features = sortBy(data.features, [f => f.properties.GEOID])\r\n        return {\r\n          data: data,\r\n          geoidIndex: getGeoidIndex(data.features)\r\n        }\r\n      });        \r\n    return tempData;\r\n}\r\nexport default getJson;","import * as d3 from 'd3-dsv';\r\nimport { findDates } from '../utils';\r\n\r\nasync function getParseCSV(url, joinCol, accumulate){\r\n    const tempData = await fetch(url)\r\n      .then(response => {\r\n        return response.ok ? response.text() : Promise.reject(response.status);\r\n      }).then(text => {\r\n        let data = d3.csvParse(text, d3.autoType)\r\n        let rtn = {};\r\n        let n = data.length;\r\n\r\n        if (accumulate) {\r\n          let indexStart = findDates(Object.keys(data[0]))[1]\r\n          while (n>0){\r\n            n--;\r\n            let vals = Object.values(data[n])\r\n            let tempArr = [];\r\n            let i = indexStart;\r\n            let j = 0;\r\n            while (i<vals.length) {\r\n              if (i===indexStart) {\r\n                tempArr.push(vals[i])\r\n              } else {\r\n                tempArr.push(vals[i]+tempArr[j])\r\n                j++;\r\n              }\r\n              i++;\r\n            }\r\n            for (let i = 0; i < indexStart; i++) {\r\n              tempArr.unshift(vals[i])\r\n            }\r\n            rtn[data[n][joinCol]] = tempArr\r\n          }\r\n        } else {\r\n          while (n>0){\r\n            n--;\r\n            rtn[data[n][joinCol]] = Object.values(data[n])\r\n          }\r\n        }\r\n        return [rtn, Object.keys(data[0])]\r\n      });\r\n    return tempData;\r\n}\r\n\r\nexport default getParseCSV","import { merge } from 'lodash';\r\n\r\nconst mergeData = (featureCollection, featureCollectionJoinCol, joinData, joinDataNames, joinDataCol) => {\r\n    // declare parent dictionaries\r\n    let features = {}\r\n    let dataDict = {}\r\n\r\n    let baseColumnLength = Object.keys(featureCollection.features[0]).length;\r\n\r\n    // declare and prep feature collection object\r\n    let i = featureCollection.features.length;\r\n    let colNumCheck = parseInt(featureCollection.features[0].properties[featureCollectionJoinCol])\r\n    if (Number.isInteger(colNumCheck)) {\r\n      while (i>0) {\r\n        i--;\r\n        features[parseInt(featureCollection.features[i].properties[featureCollectionJoinCol])] = featureCollection.features[i];\r\n        dataDict[parseInt(featureCollection.features[i].properties[featureCollectionJoinCol])] = {};\r\n      }\r\n    } else {\r\n      while (i>0) {\r\n        i--;\r\n        features[featureCollection.features[i].properties[featureCollectionJoinCol]] = featureCollection.features[i];\r\n        dataDict[featureCollection.features[i].properties[featureCollectionJoinCol]] = {};\r\n      }\r\n    }\r\n  \r\n    // // declare data objects\r\n    // for (let n=0; n < joinDataNames.length; n++) {\r\n    //   dataDict[`${joinDataNames[n]}`] = {}\r\n    // }\r\n  \r\n    // loop through data and add to dictionaries\r\n    let n = joinData.length;\r\n    while (n>0) {\r\n      n--;\r\n      let cols = Object.keys(joinData[n][0]);\r\n      i = cols.length;\r\n      while (i>0) {\r\n        i--;\r\n        try {\r\n          dataDict[cols[i]][joinDataNames[n]] = joinData[n][0][cols[i]]\r\n        } catch {}\r\n      }\r\n    }\r\n    \r\n    // // use lodash to merge data\r\n    let merged = merge(features, dataDict)\r\n    // for (let n=1; n < joinDataNames.length; n++){\r\n    //   merged = merge(merged, dataDict[joinDataNames[n]])\r\n    // }\r\n    \r\n    // clean data\r\n    let rtn = [];\r\n    let keys = Object.keys(merged)\r\n    \r\n    for (let i = 0; i < keys.length; i++) {\r\n      // if (Object.keys(merged[keys[i]]).length == (joinDataNames.length+baseColumnLength)) rtn.push(merged[keys[i]])\r\n      rtn.push(merged[keys[i]])\r\n    }\r\n\r\n    return rtn;\r\n}\r\n\r\nexport default mergeData;","const colIndex = (data, table, date) => {\r\n    return data[table].indexOf(date);\r\n}\r\n\r\nexport default colIndex","const colLookup = (columns, dataset, table, property) => {\r\n    try {\r\n        return columns[dataset][table].indexOf(property); \r\n    } catch {\r\n        return null;\r\n    }\r\n}\r\nexport default colLookup;","const findDates = (data) => {\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (Date.parse(data[i])) return [data.slice(i,),i]\r\n    }\r\n    return;\r\n}\r\n\r\nexport default findDates","import { compose } from 'redux';\r\nimport dataFn from './dataFunction';\r\n\r\n// this function loops through the current data set and provides data for GeodaJS to create custom breaks \r\nconst getDataForBins = (tableData, table, nType, numerProp, numerIndex, numerRange, denomTable, dType, denomProp, denomIndex, denomRange, scale) => {\r\n    let t0 = performance.now() // logging performance\r\n\r\n    // declare empty array for return variables\r\n    let rtn = [];\r\n\r\n    // length of data table to loop through\r\n    let n = tableData.length;\r\n\r\n    // this checks if the bins generated should be dynamic (generating for each date) or fixed (to the most recent date)\r\n    if (numerIndex === null && numerProp === null) {\r\n        // if fixed, get the most recent date\r\n        let tempIndex = tableData[0][table].length-1;\r\n        // if the denominator is time series data (eg. deaths / cases this week), make the indices the same (most recent)\r\n        let tempDenomIndex = dType === 'time-series' ? tableData[0][denomTable].length-1 : denomIndex;\r\n\r\n        // loop through, do appropriate calculation. add returned value to rtn array\r\n        while (n>0) {\r\n            n--;\r\n            rtn.unshift(dataFn(tableData[n][table], numerProp, tempIndex, numerRange, tableData[n][denomTable], denomProp, tempDenomIndex, denomRange, scale))\r\n        }\r\n    } else {\r\n       while (n>0) {\r\n            n--;\r\n            rtn.unshift(dataFn(tableData[n][table], numerProp, numerIndex, numerRange, tableData[n][denomTable], denomProp, denomIndex, denomRange, scale))\r\n        }\r\n    }\r\n\r\n    console.log(performance.now() - t0);\r\n\r\n    return rtn;   \r\n}\r\nexport default getDataForBins","import dataFn from './dataFunction';\r\n\r\nconst getDataForCharts = (data, table, startIndex, dates) => {\r\n    let t0 = performance.now()\r\n    let features = Object.keys(data);\r\n    let n = startIndex;\r\n    let rtn = []\r\n    let j = -1;\r\n\r\n    while (n<data[features[0]][table].length) {\r\n        let tempObj = {};\r\n        let sum = 0;\r\n        let i = 0;\r\n\r\n        while (i<features.length) {\r\n            if (data[features[i]][table]!== undefined) sum += data[features[i]][table][n]\r\n            // tempObj[`n${i}`] = data[features[i]][table][n]\r\n            i++;\r\n        }\r\n        tempObj.count = sum\r\n        tempObj.date = dates[n-startIndex]\r\n        if (j===-1) {\r\n            tempObj.dailyNew = sum\r\n        } else {\r\n            tempObj.dailyNew = sum - rtn[j].count\r\n        }\r\n        rtn.push(tempObj);\r\n        n++;\r\n        j++;\r\n    }\r\n    \r\n    console.log(performance.now() - t0);\r\n    return rtn;\r\n\r\n}\r\n\r\nexport default getDataForCharts","import dataFn from './dataFunction';\r\n\r\n// this function loops through the current data set and provides data for GeodaJS to create custom breaks \r\nconst getDataForLisa = (tableData, table, nType, numerProp, numerIndex, numerRange, denomTable, dType, denomProp, denomIndex, denomRange, scale, order) => {\r\n    let t0 = performance.now() // logging performance\r\n\r\n    // declare empty array for return variables\r\n    let tempDict = {};\r\n\r\n    // length of data table to loop through\r\n    let n = tableData.length;\r\n\r\n    // this checks if the bins generated should be dynamic (generating for each date) or fixed (to the most recent date)\r\n    if (numerIndex === null && numerProp === null) {\r\n        // if fixed, get the most recent date\r\n        let tempIndex = tableData[0][table].length-1;\r\n        \r\n        // if the denominator is time series data (eg. deaths / cases this week), make the indices the same (most recent)\r\n        let tempDenomIndex = dType === 'time-series' ? tableData[0][denomTable].length-1 : denomIndex;\r\n\r\n        // loop through, do appropriate calculation. add returned value to rtn array\r\n        while (n>0) {\r\n            n--;\r\n            tempDict[tableData[n].properties.GEOID] = dataFn(tableData[n][table], numerProp, tempIndex, numerRange, tableData[n][denomTable], denomProp, tempDenomIndex, denomRange, scale)\r\n        }\r\n    } else {\r\n       while (n>0) {\r\n            n--;\r\n            tempDict[tableData[n].properties.GEOID] = dataFn(tableData[n][table], numerProp, numerIndex, numerRange, tableData[n][denomTable], denomProp, denomIndex, denomRange, scale)\r\n        }\r\n    }\r\n    \r\n    let rtn = [];\r\n\r\n    n = 0;\r\n    let keys = Object.keys(order)\r\n    while (n<keys.length) {\r\n        rtn.push(tempDict[order[keys[n]]]);\r\n        n++;\r\n    }\r\n\r\n    console.log(performance.now() - t0);\r\n\r\n    return rtn;\r\n    \r\n}\r\nexport default getDataForLisa","const getCurrentWuuid = (gda_proxy, selectedDataset) => {\r\n    var w = gda_proxy.CreateQueenWeights(selectedDataset, 1, 0, 0);\r\n\r\n    return {\r\n      'map_uuid': selectedDataset,\r\n      'w': w,\r\n      'w_uuid': w.get_uid()\r\n    };\r\n}\r\n\r\nexport default getCurrentWuuid","import getCurrentWuuid from './getCurrentWuuid.js';\r\n\r\nconst getLisaValues = (gda_proxy, dataset, data, geoids) => {\r\n  let w = getCurrentWuuid(gda_proxy, dataset);\r\n  let all_zeros = true;\r\n  for (let i=0; i<data.length; ++i) { \r\n    if (data[i] != 0)\r\n      all_zeros = false;\r\n  }\r\n  let clusters = [];\r\n  let sig = [];\r\n\r\n  if (all_zeros) {\r\n    for (let i=0; i<data.length; ++i) { \r\n      clusters.push(0);\r\n      sig.push(0);\r\n    }\r\n  } else {\r\n    var lisa = gda_proxy.local_moran1(w.map_uuid, w.w_uuid, data);\r\n    clusters = gda_proxy.parseVecDouble(lisa.clusters());\r\n    sig = gda_proxy.parseVecDouble(lisa.significances());\r\n  }\r\n  \r\n  return clusters;\r\n}\r\n\r\nexport default getLisaValues;","const getVarId = (currentData, dataParams) => {\r\n    return `${currentData}-${dataParams.numerator}-${dataParams.nIndex}-${dataParams.nRange}-${dataParams.denominator}-${dataParams.dProperty}-${dataParams.dIndex}-${dataParams.dRange}-${dataParams.scale}`\r\n}\r\n\r\nexport default getVarId;","const getGeoidIndex = (features) => {\r\n    let geoidOrder = {};\r\n    let indexOrder = {};\r\n    let i = 0\r\n    while (i<features.length) {\r\n        geoidOrder[features[i].properties.GEOID] = i\r\n        indexOrder[i] = features[i].properties.GEOID\r\n        i++;\r\n    }\r\n\r\n    return {geoidOrder, indexOrder};\r\n}\r\nexport default getGeoidIndex","const loadGeojsonToGeoda = async (data, url, gda_proxy) => {\r\n  const arrayBuffer = await data.arrayBuffer();\r\n\r\n  gda_proxy.ReadGeojsonMap(url.split('/').slice(-1,)[0], {\r\n      result: arrayBuffer,\r\n  });\r\n}\r\n\r\nexport default loadGeojsonToGeoda;","const getCartogramValues = (gda_proxy, dataset, data ) => {\r\n    let cartogramData = gda_proxy.cartogram(dataset, data)\r\n    let tempObj = {}\r\n    for (let i=0; i<cartogramData.length; i++){\r\n        cartogramData[i].value = data[i]\r\n        tempObj[i] = cartogramData[i]\r\n    }\r\n    return tempObj;\r\n}\r\n\r\nexport default getCartogramValues;","export const colorScales = {\r\n    'natural_breaks': [\r\n        [240,240,240],\r\n        [255,255,204],\r\n        [255,237,160],\r\n        [254,217,118],\r\n        [254,178,76],\r\n        [253,141,60],\r\n        [252,78,42],\r\n        [227,26,28],\r\n        [177,0,38],\r\n    ],\r\n    'lisa': [\r\n        [255,255,255],\r\n        [255,0,0],\r\n        [0,0,255],\r\n        [167, 173, 249],\r\n        [244, 173, 168],\r\n        // [70, 70, 70],\r\n        // [153, 153, 153]\r\n    ],\r\n    'hinge15_breaks': [\r\n        [1, 102, 94],\r\n        [90, 180, 172],\r\n        [199, 234, 229],\r\n        [246, 232, 195],\r\n        [216, 179, 101],\r\n        [140, 81, 10],\r\n    ],    \r\n    'uninsured':[\r\n        [240,240,240],\r\n        [247,252,253],\r\n        [224,236,244],\r\n        [191,211,230],\r\n        [158,188,218],\r\n        [140,150,198],\r\n        [140,107,177],\r\n        [136,65,157],\r\n        [129,15,124],\r\n        // [77,0,75],\r\n      ],\r\n    'over65':[\r\n        [240,240,240],\r\n        [247,252,240],\r\n        [224,243,219],\r\n        [204,235,197],\r\n        [168,221,181],\r\n        [123,204,196],\r\n        [78,179,211],\r\n        [43,140,190],\r\n        [8,104,172],\r\n        // [8,64,129],\r\n    ],\r\n    'lifeExp':[\r\n        [240,240,240],\r\n        [247,252,240],\r\n        [224,243,219],\r\n        [204,235,197],\r\n        [168,221,181],\r\n        [123,204,196],\r\n        [78,179,211],\r\n        [43,140,190],\r\n        [8,104,172],\r\n        // [8,64,129],\r\n    ],\r\n    'forecasting': [\r\n        [240, 240, 240],\r\n        [254,232,200],\r\n        [253,187,132],\r\n        [227,74,51],\r\n    ],\r\n    'testings' : [\r\n        [240,240,240],\r\n        [13,8,135],\r\n        [92,1,166],\r\n        [156,23,158],\r\n        [203,70,121],\r\n        [237,121,83],\r\n        [253,180,47],\r\n        [240,249,33],\r\n      ],\r\n      'testingCap':[\r\n        [240,240,240],\r\n        [247,251,255],\r\n        [222,235,247],\r\n        [198,219,239],\r\n        [158,202,225],\r\n        [107,174,214],\r\n        [66,146,198],\r\n        [33,113,181],\r\n        [8,81,156],\r\n        [8,48,107],\r\n      ],\r\n}\r\n\r\nexport const fixedScales = {\r\n    'testing': {\r\n        bins: ['No Data','<3%','5%','10%','15%','20%','>25%'],\r\n        breaks:[0,3,5,10,15,20,25,Math.pow(10, 12)]\r\n    },\r\n    'testingCap': {\r\n        bins: ['No Data','<50','100','150','200','250','300','350','>400'],\r\n        breaks:[0,50,100,150,200,250,300,350,400,Math.pow(10, 12)]\r\n    },\r\n    'lisa':{\r\n        bins: [\"Not significant\", \"High-High\", \"Low-Low\", \"Low-High\", \"High-Low\"] //\"Undefined\", \"Isolated\"\r\n    }\r\n}\r\n\r\nexport const dataPresets = {\r\n    'county_usfacts.geojson': {\r\n        geojson: 'county_usfacts.geojson', \r\n        csv: ['covid_confirmed_usafacts','covid_deaths_usafacts', 'berkeley_predictions', 'chr_health_context', 'chr_life', 'chr_health_factors'], \r\n        joinCols: ['GEOID', 'FIPS'], \r\n        tableNames: ['cases','deaths', 'predictions', 'chr_health_context', 'chr_life', 'chr_health_factors'],\r\n        accumulate: []\r\n    },\r\n    'county_1p3a.geojson': {\r\n        geojson: 'county_1p3a.geojson', \r\n        csv: ['covid_confirmed_1p3a','covid_deaths_1p3a', 'berkeley_predictions', 'chr_health_context', 'chr_life', 'chr_health_factors'], \r\n        joinCols: ['GEOID', 'FIPS'], \r\n        tableNames: ['cases','deaths', 'predictions', 'chr_health_context', 'chr_life', 'chr_health_factors'],\r\n        accumulate: ['covid_confirmed_1p3a','covid_deaths_1p3a']\r\n    },\r\n    'county_nyt.geojson': {\r\n        geojson: 'county_nyt.geojson', \r\n        csv: ['covid_confirmed_nyt', 'covid_deaths_nyt', 'berkeley_predictions', 'chr_health_context', 'chr_life', 'chr_health_factors'], \r\n        joinCols: ['GEOID', 'FIPS'], \r\n        tableNames: ['cases', 'deaths', 'predictions', 'chr_health_context', 'chr_life', 'chr_health_factors'],\r\n        accumulate: []\r\n    },\r\n    'state_1p3a.geojson': {\r\n        geojson: 'state_1p3a.geojson', \r\n        csv: ['covid_confirmed_1p3a_state','covid_deaths_1p3a_state', 'chr_health_context_state', 'chr_life_state', 'chr_health_factors_state', 'covid_testing_1p3a_state', 'covid_wk_pos_1p3a_state', 'covid_tcap_1p3a_state', 'covid_ccpt_1p3a_state'], \r\n        joinCols: ['GEOID', 'FIPS'], \r\n        tableNames: ['cases', 'deaths', 'chr_health_context', 'chr_life', 'chr_health_factors', 'testing', 'testing_wk_pos', 'testing_tcap', 'testing_ccpt'],\r\n        accumulate: ['covid_confirmed_1p3a_state','covid_deaths_1p3a_state']\r\n    } \r\n}\r\n\r\nexport const tooltipInfo = {\r\n  Choropleth: <p>A thematic map used to represent data through various shading patterns on predetermined geographic areas (counties, state).</p>,\r\n  NaturalBreaksFixed: <p>A nonlinear algorithm used to group observations such that the within-group homogeneity is maximized for the latest date, bins fixed over time</p>,\r\n  NaturalBreaks: <p>A nonlinear algorithm used to group observations such that the within-group homogeneity is maximized for every day, bins change over time</p>,\r\n  BoxMap: <p>Mapping counterpart of the idea behind a box plot</p>,\r\n  LocalClustering: <p>A map showing statisically significant spatial cluster and outlier locations, color coded by type.</p>,\r\n  LocalMoran: <p>Local Moran used to identify local clusters and outliers</p>,\r\n  NotSig:\t<p>Area was not statistically signficant as a spatial cluster core or outlier using given parameters.</p>,\r\n  HighHigh: <p>Hot Spot Cluster: area with high values, neighbored by areas with high values</p>,\r\n  LowLow: <p>Cold Spot Cluster: area with low values, neighbored by areas with low values</p>,\r\n  HighLow: <p>Hot Outlier: area with high values, neighbored by areas with low values</p>,\r\n  LowHigh: <p>Low-High\tCold Outlier: area with low values, neighbored by areas with high values</p>,\r\n  PovChldPrc: <p>Percentage of children under age 18 living in poverty</p>,\r\n  IncRt: <p>Ratio of household income at the 80th percentile to income at the 20th percentile</p>,\r\n  MedianHouseholdIncome: <p>The income where half of households in a county earn more and half of households earn less</p>,\r\n  FdInsPrc: <p>Percentage of population who lack adequate access to food</p>,\r\n  UnEmplyPrc: <p>Percentage of population age 16 and older unemployed but seeking work</p>,\r\n  UnInPrc: <p>Percentage of people under age 65 without insurance</p>,\r\n  PrmPhysRt: <p>Ratio of population to primary care physicians</p>,\r\n  PrevHospRt: <p>Rate of hospital stays for ambulatory-care sensitive conditions per 100,000 Medicare enrollees</p>,\r\n  RsiSgrBlckRt: <p>Index of dissimilarity where higher values indicate greater residential segregation between Black and White county residents</p>,\r\n  SvrHsngPrbRt: <p>Percentage of households with at least 1 of 4 housing problems: overcrowding, high housing costs, lack of kitchen facilities, or lack of plumbing facilities</p>,\r\n  Over65YearsPrc: <p>Percentage of people ages 65 and older</p>,\r\n  AdObPrc: <p>Percentage of the adult population (age 20 and older) that reports a body mass index (BMI) greater than or equal to 30 kg/m2</p>,\r\n  AdDibPrc: <p>Percentage of adults aged 20 and above with diagnosed diabetes</p>,\r\n  SmkPrc: <p>Percentage of adults who are current smokers</p>,\r\n  ExcDrkPrc: <p>Percentage of adults reporting binge or heavy drinking</p>,\r\n  DrOverdMrtRt: <p>Number of drug poisoning deaths per 100,000 population</p>,\r\n  LfExpRt: <p>Average number of years a person can expect to live</p>,\r\n  SlfHlthPrc: <p>Percentage of adults reporting fair or poor health</p>,\r\n  SeverityIndex: <p>Indicates the severity of the local covid-19 outbreak, based on cumulative and predicted deaths</p>,\r\n  PredictedDeaths: <p>Predicted number of deaths for a county</p>,\r\n  PredictedDeathsInterval: <p>Margin of error for predicted death counts for a county </p>,\r\n  healthfactor:<p>Health factors represent those things we can modify to improve community conditions and the length and quality of life for residents</p>,\r\n  healthcontext: <p>Community Health Context reflects the existing health behaviors and demographics of individuals in the community that are influenced by the opportunities to live long and well</p>,\r\n  healthlife:<p>Length and Quality of Life reflects the physical and mental well-being of residents within a community through measures representing how long and how well residents live</p>,\r\n  Hypersegregated: <p>American metropolitan areas where black residents experience hypersegregation, see <a href=\"https://www.princeton.edu/news/2015/05/18/hypersegregated-cities-face-tough-road-change\" target=\"_blank\" rel=\"noopener noreferrer\">here</a></p>,\r\n  BlackBelt: <p>Southern US counties that were at least 40% Black or African American in the 2000 Census, see <a href=\"https://en.wikipedia.org/wiki/Black_Belt_in_the_American_South\" target=\"_blank\" rel=\"noopener noreferrer\">here</a></p>,\r\n  TestingCapacity: <p>New screening (e.g., antigen) and diagnostic (e.g., PCR) testing per capita rates by date. The suggested threshold is >150 daily tests per 100k people.</p>,\r\n  USCongress: <p>Find your representative <a href=\"https://www.govtrack.us/\" target=\"_blank\" rel=\"noopener noreferrer\">here</a></p>,\r\n};","import React, { useState, useEffect } from 'react';\r\nimport DeckGL from '@deck.gl/react';\r\nimport {MapView, _GlobeView as GlobeView, FlyToInterpolator} from '@deck.gl/core';\r\nimport ReactMapGL, {NavigationControl, GeolocateControl } from 'react-map-gl';\r\nimport { GeoJsonLayer, PolygonLayer, ScatterplotLayer, SolidPolygonLayer } from '@deck.gl/layers';\r\nimport {SimpleMeshLayer} from '@deck.gl/mesh-layers';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setDataSidebar, setMapParams } from '../actions';\r\nimport { mapFn, dataFn, getVarId } from '../utils';\r\nimport { colorScales } from '../config';\r\nimport styled from 'styled-components';\r\nimport { Polygon } from 'recharts';\r\nimport {IcoSphereGeometry} from '@luma.gl/engine';\r\nimport {fromJS} from 'immutable';\r\nimport MAP_STYLE from '../config/style.json';\r\n\r\nconst cartoGeom = new IcoSphereGeometry({\r\n  iterations: 1\r\n});\r\n\r\nconst MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoibGl4dW45MTAiLCJhIjoiY2locXMxcWFqMDAwenQ0bTFhaTZmbnRwaiJ9.VRNeNnyb96Eo-CorkJmIqg';\r\n\r\nconst defaultMapStyle = fromJS(MAP_STYLE);\r\n\r\nconst initialViewState = {\r\n    latitude: 35.850033,\r\n    longitude: -105.6500523,\r\n    zoom: 3.5,\r\n    pitch:0,\r\n    bearing:0\r\n};\r\n\r\nconst DATA_URL = {\r\n    CONTINENTS: `${process.env.PUBLIC_URL}/geojson/world50m.json`,\r\n    BLACKBELT:`${process.env.PUBLIC_URL}/geojson/blackbelt_highlight.geojson`,\r\n    SEG_CITIES:`${process.env.PUBLIC_URL}/geojson/seg_cities.geojson`,\r\n    CONGRESS_DISTRICTS:`${process.env.PUBLIC_URL}/geojson/districts.geojson`,\r\n    CONGRESS_CENTROIDS:`${process.env.PUBLIC_URL}/geojson/district_centroids.geojson`,\r\n    RESERVATIONS:`${process.env.PUBLIC_URL}/geojson/reservations.geojson`\r\n};\r\n\r\nconst HoverDiv = styled.div`\r\n    background:#2b2b2b;\r\n    padding:20px;\r\n    color:white;\r\n    box-shadow: 0px 0px 5px rgba(0,0,0,0.7);\r\n    border-radius:0.5vh 0.5vh 0 0;\r\n    h3 {\r\n        margin:2px 0;\r\n    }\r\n`;\r\n\r\nconst NavInlineButton = styled.button`\r\n    width:29px;\r\n    height:29px;\r\n    padding:5px;\r\n    margin-bottom:10px;\r\n    display:block;\r\n    background-color: ${props => props.isActive ? 'yellow' : '#f5f5f5'};\r\n    -moz-box-shadow: 0 0 2px rgba(0,0,0,.1);\r\n    -webkit-box-shadow: 0 0 2px rgba(0,0,0,.1);\r\n    box-shadow: 0 0 0 2px rgba(0,0,0,.1);\r\n    border-radius: 4px;\r\n    outline:none;\r\n    border:none;\r\n    transition:250ms all;\r\n`\r\n\r\nconst viewGlobe = new GlobeView({id: 'globe', controller: false, resolution:1});\r\nconst view = new MapView({repeat: true});\r\n\r\n\r\nconst Map = () => { \r\n    \r\n    const [hoverInfo, setHoverInfo] = useState(false);\r\n    const [highlightGeog, setHighlightGeog] = useState(false);\r\n    const [globalMap, setGlobalMap] = useState(false);\r\n    const [mapStyle, setMapStyle] = useState(defaultMapStyle);\r\n    const [currLisaData, setCurrLisaData] = useState({})\r\n    const [viewState, setViewState] = useState(initialViewState)\r\n    const [cartogramData, setCartogramData] = useState([]);\r\n    const [currVarId, setCurrVarId] = useState(null);\r\n\r\n    const storedData = useSelector(state => state.storedData);\r\n    const storedGeojson = useSelector(state => state.storedGeojson);\r\n    const currentData = useSelector(state => state.currentData);\r\n    const storedLisaData = useSelector(state => state.storedLisaData);\r\n    const storedCartogramData = useSelector(state => state.storedCartogramData);\r\n\r\n    const dataParams = useSelector(state => state.dataParams);\r\n    const mapParams = useSelector(state => state.mapParams);\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let arr = [];\r\n        if (storedData[currentData] && mapParams.vizType === 'cartogram') {\r\n            for (let i=0; i<storedData[currentData].length; i++) {\r\n                arr.push({id:i})\r\n            }\r\n        }\r\n        setCartogramData(arr)\r\n    }, [storedData, mapParams.vizType])\r\n\r\n    useEffect(() => {\r\n        setCurrVarId(getVarId(currentData, dataParams))\r\n    }, [dataParams, mapParams])\r\n\r\n\r\n    useEffect(() => {\r\n        switch(mapParams.vizType) {\r\n            case '2D': \r\n                setViewState(view => ({\r\n                    ...view,\r\n                    latitude: 35.850033,\r\n                    longitude: -105.6500523,\r\n                    zoom: 3.5,\r\n                    bearing:0,\r\n                    pitch:0\r\n                }));\r\n                break\r\n            case '3D':\r\n                setViewState(view => ({\r\n                    ...view,\r\n                    latitude: 35.850033,\r\n                    longitude: -105.6500523,\r\n                    zoom: 3.5,\r\n                    bearing:-30,\r\n                    pitch:30\r\n                }));\r\n                break\r\n            case 'cartogram':\r\n                setViewState(view => ({\r\n                    ...view,\r\n                    latitude: 11.673,\r\n                    longitude: -31.061,\r\n                    zoom: 4.2,\r\n                    bearing:0,\r\n                    pitch:0\r\n                }));\r\n                break\r\n            default:\r\n                //\r\n        }\r\n    }, [mapParams.vizType])\r\n\r\n    useEffect(() => {\r\n        let tempData = storedLisaData[getVarId(currentData, dataParams)]\r\n        if (tempData !== undefined) setCurrLisaData(tempData);\r\n    }, [storedLisaData, dataParams, mapParams])\r\n\r\n    const GetFillColor = (f, bins, mapType) => {\r\n        if (!bins.hasOwnProperty(\"bins\")) {\r\n            return [0,0,0]\r\n        } else if (mapType === 'lisa') {\r\n            return colorScales.lisa[currLisaData[storedGeojson[currentData]['geoidOrder'][f.properties.GEOID]]]\r\n        } else {\r\n            return mapFn(dataFn(f[dataParams.numerator], dataParams.nProperty, dataParams.nIndex, dataParams.nRange, f[dataParams.denominator], dataParams.dProperty, dataParams.dIndex, dataParams.dRange, dataParams.scale), bins.breaks, mapParams.colorScale, mapParams.mapType) \r\n        }\r\n    }\r\n    \r\n    const GetHeight = (f, bins) => bins.hasOwnProperty(\"bins\") ? dataFn(f[dataParams.numerator], dataParams.nProperty, dataParams.nIndex, dataParams.nRange, f[dataParams.denominator], dataParams.dProperty, dataParams.dIndex, dataParams.dRange, dataParams.scale)*1000 : 0\r\n    \r\n    const handle3dButton = (using3d) => {\r\n        if (using3d) {\r\n            dispatch(setMapParams({vizType: '2D'}))\r\n            setViewState(view => ({\r\n                ...view,\r\n                bearing:0,\r\n                pitch:0,\r\n                zoom: 3.5,\r\n                transitionInterpolator: new FlyToInterpolator(),\r\n                transitionDuration: 250,\r\n            }))\r\n        } else {\r\n            dispatch(setMapParams({vizType: '3D'}))\r\n            setViewState(view => ({\r\n                ...view,\r\n                bearing:-30,\r\n                pitch:45,\r\n                zoom: 3.5,\r\n                transitionInterpolator: new FlyToInterpolator(),\r\n                transitionDuration: 250,\r\n            }))\r\n        }\r\n    }\r\n    \r\n    const handleGeolocate = (viewState) => {\r\n        console.log(viewState)\r\n        setViewState(view => ({\r\n            ...view,\r\n            latitude: viewState.coords.latitude,\r\n            longitude: viewState.coords.longitude,\r\n            zoom: 8,\r\n            transitionInterpolator: new FlyToInterpolator(),\r\n            transitionDuration: 250,\r\n        }))\r\n    }\r\n\r\n    const getCartogramPosition = (data) => data.position;\r\n    const getCartogramScale = (data) => [data.radius, data.radius, data.radius*10];\r\n    const getCartogramFillColor = (val, bins, mapType) => {\r\n        if (!bins.hasOwnProperty(\"bins\")) {\r\n            return [0,0,0]\r\n        // } else if (mapType === 'lisa') {\r\n        //     return colorScales.lisa[currLisaData[storedGeojson[currentData]['geoidOrder'][f.properties.GEOID]]]\r\n        } else {\r\n            return mapFn(val, bins.breaks, mapParams.colorScale, mapParams.mapType) \r\n        }\r\n    }\r\n    const getCartogramTranslation = (data) => [0, 0, data.radius*30];\r\n    // const getCartogramColor = () => mapFn(, bins.breaks, mapParams.colorScale, mapParams.mapType)\r\n    const Layers = [\r\n        new GeoJsonLayer({\r\n            id: 'base continents',\r\n            data: DATA_URL.CONTINENTS,\r\n            pickable: false,\r\n            stroked: false,\r\n            filled: true,\r\n            wireframe: false,\r\n            getFillColor: [30,30,30]\r\n        }),\r\n        new GeoJsonLayer({\r\n            id: 'choropleth',\r\n            data: {\r\n                \"type\": \"FeatureCollection\",\r\n                \"name\": currentData,\r\n                \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\r\n                \"features\": storedData[currentData] ? storedData[currentData] : [],\r\n            },\r\n            visible: mapParams.mapType !== 'cartogram',\r\n            pickable: true,\r\n            stroked: false,\r\n            filled: true,\r\n            wireframe: mapParams.vizType === '3D',\r\n            extruded: mapParams.vizType === '3D',\r\n            opacity: mapParams.vizType === '3D' ? 1 : 0.5,\r\n            getFillColor: f => GetFillColor(f, mapParams.bins, mapParams.mapType),\r\n            getElevation: f => GetHeight(f, mapParams.bins, mapParams.mapType),\r\n            updateTriggers: {\r\n                data: currentData,\r\n                getFillColor: [dataParams, mapParams],\r\n                getElevation: [dataParams, mapParams],\r\n            },\r\n            onHover: info => {\r\n                try {\r\n                    setHoverInfo(info)\r\n                } catch {\r\n                    setHoverInfo(null)\r\n                }\r\n            },\r\n            onClick: info => {\r\n                try {\r\n                    dispatch(setDataSidebar(info.object));\r\n                    setHighlightGeog(info.object.properties.GEOID);\r\n                } catch {}\r\n\r\n            }\r\n        }),\r\n        new GeoJsonLayer({\r\n            id: 'highlightLayer',\r\n            data: {\r\n                \"type\": \"FeatureCollection\",\r\n                \"name\": currentData,\r\n                \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\r\n                \"features\": storedData[currentData] ? storedData[currentData] : [],\r\n            },\r\n            pickable: false,\r\n            stroked: true,\r\n            filled:false,\r\n            getLineColor: f => (highlightGeog === f.properties.GEOID ? [255,255,255] : [255,255,255,0]), \r\n            lineWidthScale: 10,\r\n            getLineWidth: 1,\r\n            lineWidthMinPixels: 2,\r\n            updateTriggers: {\r\n                data: currentData,\r\n                getLineColor: highlightGeog,\r\n            },\r\n        }),\r\n        new GeoJsonLayer({\r\n            id: 'blackbelt',\r\n            data: DATA_URL.BLACKBELT,\r\n            pickable: false,\r\n            stroked: false,\r\n            filled:true,\r\n            getLineColor: [0,0,0],\r\n            opacity:0.2,\r\n            visible: mapParams.overlay === \"blackbelt\",\r\n            updateTriggers: {\r\n                visible: mapParams\r\n            },\r\n        }),\r\n        new GeoJsonLayer({\r\n            id: 'segregated cities',\r\n            data: DATA_URL.SEG_CITIES,\r\n            pickable: false,\r\n            stroked: false,\r\n            filled:true,\r\n            getLineColor: [0,0,0],\r\n            opacity:0.2,\r\n            visible: mapParams.overlay === \"segregated_cities\",\r\n            updateTriggers: {\r\n                visible: mapParams\r\n            },\r\n        }),\r\n        new GeoJsonLayer({\r\n            id: 'native american reservations',\r\n            data: DATA_URL.RESERVATIONS,\r\n            pickable: false,\r\n            stroked: false,\r\n            filled:true,\r\n            getLineColor: [0,0,0],\r\n            opacity:0.2,\r\n            visible: mapParams.overlay === \"native_american_reservations\",\r\n            updateTriggers: {\r\n                visible: mapParams\r\n            },\r\n        }),\r\n        new GeoJsonLayer({\r\n            id: 'congressional distrcits',\r\n            data: DATA_URL.CONGRESS_DISTRICTS,\r\n            pickable: false,\r\n            stroked: true,\r\n            filled:false,\r\n            getLineColor: [0,0,0],\r\n            lineWidthMinPixels:1,\r\n            visible: mapParams.overlay === \"congressional_districts\",\r\n            updateTriggers: {\r\n                visible: mapParams\r\n            },\r\n        }),\r\n        new PolygonLayer({\r\n            id: 'background',\r\n            data: [\r\n                // prettier-ignore\r\n                [[-180, 90], [0, 90], [180, 90], [180, -90], [0, -90], [-180, -90]]\r\n            ],\r\n            opacity: 1,\r\n            getPolygon: d => d,\r\n            stroked: false,\r\n            filled: true,\r\n            visible: mapParams.vizType === 'cartogram',\r\n            getFillColor: [10,10,10],\r\n            updateTriggers: {\r\n                visible: mapParams.vizType\r\n            }\r\n        }),\r\n        new ScatterplotLayer({\r\n            id: 'cartogram layer',\r\n            data: cartogramData,\r\n            visible: mapParams.vizType === 'cartogram',\r\n            getPosition: f => storedCartogramData[currVarId][f.id].position,\r\n            getFillColor: f => getCartogramFillColor(storedCartogramData[currVarId][f.id].value, mapParams.bins, mapParams.mapType),\r\n            getRadius: f => storedCartogramData[currVarId][f.id].radius*10,\r\n            transitions: {\r\n                getPosition: 150,\r\n                getFillColor: 150,\r\n                getRadius: 150\r\n            },   \r\n            updateTriggers: {\r\n                getPosition: [storedCartogramData, mapParams, dataParams, currVarId],\r\n                getFillColor: [storedCartogramData, mapParams, dataParams, currVarId],\r\n                getRadius: [storedCartogramData, mapParams, dataParams, currVarId],\r\n                visible: [storedCartogramData, mapParams, dataParams, currVarId]\r\n            }\r\n          }),\r\n        // new SimpleMeshLayer({\r\n        //     id: 'cartogram layer',\r\n        //     data: cartogramData,\r\n        //     // texture: 'texture.png',\r\n        //     sizeScale:10,\r\n        //     visible: mapParams.vizType === 'cartogram',\r\n        //     mesh: cartoGeom,\r\n        //     getPosition:f => getCartogramPosition(storedCartogramData[currVarId][f.id]),\r\n        //     getColor: f => getCartogramFillColor(storedCartogramData[currVarId][f.id].value, mapParams.bins, mapParams.mapType),\r\n        //     getScale: f => getCartogramScale(storedCartogramData[currVarId][f.id]),\r\n        //     // getTranslation: f => getCartogramTranslation(storedCartogramData[currVarId][f.id]),\r\n        //     transitions: {\r\n        //         getPosition: 150,\r\n        //         getColor: 150,\r\n        //         getScale: 150,\r\n        //         getTranslation: 150\r\n        //     },   \r\n        //     updateTriggers: {\r\n        //         getPosition: [mapParams, dataParams, currVarId],\r\n        //         getColor: [mapParams, dataParams, currVarId],\r\n        //         getScale: [mapParams, dataParams, currVarId],\r\n        //         getTranslation: [mapParams, dataParams, currVarId]\r\n        //     }\r\n        //   })\r\n    ]\r\n    return (\r\n        <div id=\"mapContainer\" style={{position:'fixed',left:0,top:0,width:'100%',height:'100%'}}>\r\n            <DeckGL\r\n                initialViewState={viewState}\r\n                controller={true}\r\n                layers={Layers}\r\n                views={globalMap ? viewGlobe : view} //enable this for globe view\r\n            >\r\n                <ReactMapGL\r\n                    reuseMaps\r\n                    mapStyle={mapStyle} //{globalMap || mapParams.vizType === 'cartogram' ? 'mapbox://styles/lixun910/ckhtcdx4b0xyc19qzlt4b5c0d' : 'mapbox://styles/lixun910/ckhkoo8ix29s119ruodgwfxec'}\r\n                    preventStyleDiffing={true}\r\n                    mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\r\n                    >\r\n                        \r\n                        \r\n                    <div style={{position: 'absolute', right: 10, bottom: 30, zIndex: 10}}>\r\n                        {/* <NavInlineButton\r\n                            onClick={() => setGlobalMap(prev => !prev)}\r\n                            isActive={globalMap}\r\n                        >\r\n                            <svg  x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" >\r\n                                <g transform=\"translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)\">\r\n                                    <g>\r\n                                        <path d=\"M50-21c-39.2,0-71,31.9-71,71c0,39.2,31.9,71,71,71c39.2,0,71-31.9,71-71C121,10.8,89.2-21,50-21z M50-10.9\r\n                                            c1.7,0,3.7,0.9,6.1,3.5c2.4,2.7,4.9,7,7.1,12.5c2.1,5.4,3.8,12.1,5.1,19.4H31.7c1.2-7.4,3-14,5.1-19.4c2.1-5.6,4.7-9.9,7.1-12.5\r\n                                            C46.3-10,48.3-10.9,50-10.9z M32-8.2c-1.7,2.9-3.3,6.1-4.7,9.7c-2.6,6.7-4.6,14.5-5.9,23.1H-5.3C1.8,9,15.4-3.1,32-8.2z M68-8.2\r\n                                            C84.6-3.1,98.2,9,105.3,24.6H78.6C77.2,16,75.2,8.2,72.7,1.5C71.3-2.1,69.7-5.3,68-8.2z M-8.9,34.8h29.1c-0.4,4.9-0.7,10-0.7,15.2\r\n                                            c0,5.2,0.2,10.3,0.7,15.2H-8.9c-1.3-4.9-2-10-2-15.2C-10.9,44.7-10.2,39.6-8.9,34.8z M30.5,34.8h39c0.5,4.9,0.8,9.9,0.8,15.2\r\n                                            c0,5.3-0.3,10.3-0.8,15.2h-39c-0.5-4.9-0.8-9.9-0.8-15.2C29.7,44.7,30,39.7,30.5,34.8z M79.8,34.8h29.1c1.3,4.9,2,10,2,15.2\r\n                                            c0,5.3-0.7,10.4-2,15.2H79.8c0.4-4.9,0.7-10,0.7-15.2C80.4,44.8,80.2,39.7,79.8,34.8z M-5.3,75.4h26.8c1.3,8.6,3.3,16.4,5.9,23.1\r\n                                            c1.4,3.6,2.9,6.8,4.7,9.7C15.4,103.1,1.8,91-5.3,75.4z M31.7,75.4h36.5c-1.2,7.4-3,14-5.1,19.5c-2.1,5.6-4.7,9.9-7.1,12.5\r\n                                            c-2.4,2.7-4.4,3.5-6.1,3.5s-3.7-0.9-6.1-3.5c-2.4-2.7-4.9-7-7.1-12.5C34.7,89.4,33,82.8,31.7,75.4z M78.6,75.4h26.8\r\n                                            C98.2,91,84.6,103.1,68,108.2c1.7-2.9,3.3-6.1,4.7-9.7C75.2,91.8,77.2,84,78.6,75.4z\"/>\r\n                                    </g>\r\n                                </g>\r\n                            </svg>\r\n                        </NavInlineButton> */}\r\n                        {/* <NavInlineButton\r\n                            onClick={() => handle3dButton(mapParams.use3d)}\r\n                            isActive={mapParams.use3d}\r\n                        >\r\n                            <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\r\n                                <g transform=\"translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)\">\r\n                                    <path d=\"M109,23.7c0-1-0.2-1.9-0.7-2.8c-0.1-0.2-0.3-0.4-0.5-0.7c-0.4-0.6-0.8-1.1-1.3-1.5l0,0L54.1-20.5c-2.3-1.7-5.5-1.7-7.9,0\r\n                                        L-6.2,18.8l0,0c-0.5,0.4-1,0.9-1.3,1.5C-7.7,20.5-7.8,20.7-8,21c-0.6,0.8-0.9,1.8-1,2.8v52.5c0,0,0,0,0,0.5c0.2,1.7,1,3.3,2.2,4.5\r\n                                        v0.3l52.5,39.3l0.9,0.5l0.7,0.4c1.5,0.6,3.2,0.6,4.7,0l0.7-0.4l0.9-0.5l52.5-39.3v-0.3c1.3-1.2,2.1-2.8,2.2-4.5c0,0,0,0,0-0.5\r\n                                        L109,23.7z M4.1,36.8l39.3,29.5v36.1L4.1,72.9V36.8z M56.6,66.3l39.3-29.5v36.1l-39.3,29.5V66.3z M50-7.4l41.5,31.1L50,54.9\r\n                                        L8.5,23.7L50-7.4z\"/>\r\n                                </g>\r\n                            </svg>\r\n                        </NavInlineButton> */}\r\n                        <GeolocateControl\r\n                            positionOptions={{enableHighAccuracy: false}}\r\n                            trackUserLocation={false}\r\n                            onGeolocate={viewState  => handleGeolocate(viewState)}\r\n                            style={{marginBottom: 10}}\r\n                        />\r\n                        <NavigationControl\r\n                            onViewportChange={viewState  => setViewState(viewState)} \r\n                        />\r\n                    </div>\r\n                    <div></div>\r\n                </ReactMapGL >\r\n                {hoverInfo.object && (\r\n                <HoverDiv style={{position: 'absolute', zIndex: 1, pointerEvents: 'none', left: hoverInfo.x, top: hoverInfo.y}}>\r\n                    {hoverInfo.object.properties && <h3>{`${hoverInfo.object.properties.NAME}`} {hoverInfo.object.properties.state_name!==undefined && `, ${hoverInfo.object.properties.state_name}`}</h3>}\r\n                    {hoverInfo.object.cases && (\r\n                        <div>\r\n                            Cases: {hoverInfo.object.cases.slice(-1,)[0].toLocaleString('en')}<br/>\r\n                            Deaths: {hoverInfo.object.deaths.slice(-1,)[0].toLocaleString('en')}<br/>\r\n                            New Cases: {(hoverInfo.object.cases.slice(-1,)[0]-hoverInfo.object.cases.slice(-2,-1)[0]).toLocaleString('en')}<br/>\r\n                            New Deaths: {(hoverInfo.object.deaths.slice(-1,)[0]-hoverInfo.object.deaths.slice(-2,-1)[0]).toLocaleString('en')}<br/>\r\n                        </div>\r\n                        )\r\n                    }\r\n                    {/* {hoverInfo.object.testing && (\r\n                        <div>\r\n                            Total Testing: {hoverInfo.object.cases.slice(-1,)[0].toLocaleString('en')}<br/>\r\n                            7 Day Positivity Rate: {hoverInfo.object.deaths.slice(-1,)[0].toLocaleString('en')}<br/>\r\n                            7 Day Confirmed Cases per Testing: {(hoverInfo.object.cases.slice(-1,)[0]-hoverInfo.object.cases.slice(-2,-1)[0]).toLocaleString('en')}<br/>\r\n                            Testing Criteria: {(hoverInfo.object.deaths.slice(-1,)[0]-hoverInfo.object.deaths.slice(-2,-1)[0]).toLocaleString('en')}<br/>\r\n                        </div>\r\n                        )\r\n                    } */}\r\n                </HoverDiv>\r\n                )}\r\n            </DeckGL>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default Map","import styled from 'styled-components';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport const StyledDropDown = styled(FormControl)`\r\n  padding:0 0 ${props => props.component === 'radios' ? '20' : '40'}px 0!important;\r\n  color:white;\r\n  padding:0;\r\n  margin: 0 10px 40px 0;\r\n  .MuiInputBase-root {\r\n    font-family: 'Lato', sans-serif;\r\n  }\r\n  .MuiFormLabel-root {\r\n    color: white;\r\n    font-family: 'Lato', sans-serif;\r\n  }\r\n  .Mui-focused {\r\n    color: white !important;\r\n  }\r\n  .MuiInput-underline:before {\r\n    border-bottom:1px solid rgba(255,255, 255, 0.42);\r\n  }\r\n  .MuiInput-underline:after {\r\n    border-bottom: 2px solid white\r\n  }\r\n  .MuiInputBase-root {\r\n    color: white;\r\n    .MuiSvgIcon-root {\r\n      color: rgba(255,255,255,0.54);\r\n    },\r\n    .MuiPopover-paper {\r\n      color:white;\r\n    }\r\n  }\r\n  .MuiFormGroup-root {\r\n    .MuiFormControlLabel-root{\r\n      color:white;\r\n      span {\r\n        font-family: 'Lato', sans-serif;\r\n      }\r\n      .MuiRadio-root {\r\n        color: rgba(255,255,255,0.54);\r\n      }\r\n    }\r\n  }\r\n  .MuiRadio-root {\r\n    color:white;\r\n  }\r\n  .MuiRadio-colorSecondary.Mui-checked {\r\n    color:white;\r\n  }\r\n`\r\n\r\nexport const SwitchContainer = styled(Grid)`\r\n  padding-top:4px !important;\r\n  p { \r\n    display: inline;\r\n    color:white;\r\n    transform:translateY(5px);\r\n  }\r\n  span.MuiSwitch-track {\r\n      background-color:#ddd;\r\n  }\r\n  .MuiSwitch-colorSecondary.Mui-checked {\r\n      color:#A1E1E3;\r\n  }\r\n  .MuiSwitch-colorSecondary.Mui-checked + .MuiSwitch-track {\r\n      background-color: #A1E1E3;\r\n  }\r\n  .MuiSwitch-colorSecondary:hover {\r\n      background-color:#A1E1E355;\r\n  }\r\n`","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport styled from 'styled-components';\r\nimport { setDate, setVariableParams, incrementDate } from '../actions';\r\nimport { StyledDropDown } from '../styled_components';\r\n// import { getParseCSV, getJson, mergeData, colIndex, getDataForBins } from './utils';\r\n\r\nconst SliderContainer = styled.div`\r\n    color: white;\r\n    box-sizing:border-box;\r\n    padding:0 20px;\r\n    width:100%;\r\n`\r\n\r\nconst DateButton = styled(Button)`\r\n    color:rgb(200,200,200) !important;\r\n    background: none;\r\n    transition: 250ms all;\r\n    border:none !important;\r\n    font-size: 75% !important;\r\n    transition:250ms all;\r\n    &:hover {\r\n        color:white;\r\n        border:none !important;\r\n    }\r\n    &.active {\r\n        cursor: initial;\r\n        font-size: 75%;\r\n        color:black !important;\r\n        background: white !important;\r\n        transition: 250ms all;\r\n        border:none !important;\r\n    }\r\n    .MuiButtonGroup-vertical {\r\n        border:none !important;\r\n    }\r\n    .MuiButton-label {\r\n        justify-content: left !important;\r\n        text-transform:none;\r\n        font-family:'Lato', sans-serif;\r\n        font-weight:bold;\r\n    }\r\n`\r\nconst PlayPauseButton = styled(Button)`\r\n    background:none;\r\n    padding:0;\r\n    margin:0;\r\n    svg {\r\n        width: 75%;\r\n        g {\r\n            fill: white;\r\n        }\r\n    }\r\n    &.MuiButton-text {\r\n        padding:6px 0;\r\n    }\r\n`\r\n\r\nconst LineSlider = styled(Slider)`\r\n    box-sizing:border-box;\r\n    padding-right:8px;\r\n    transform:translateY(34px);\r\n    span.MuiSlider-rail {\r\n        color:white;\r\n        height:1px;\r\n    }\r\n    span.MuiSlider-track {\r\n        color:white;\r\n    }\r\n    span.MuiSlider-thumb {\r\n        color:white;\r\n        .MuiSlider-valueLabel {\r\n            transform:translateY(-10px);\r\n            pointer-events:none;\r\n            span {\r\n                background: none;\r\n            }\r\n        }\r\n    }\r\n    // .MuiSlider-valueLabel span{\r\n    //     transform:translateX(-100%);        \r\n    // }\r\n    span.MuiSlider-thumb.MuiSlider-active {\r\n        box-shadow: 0px 0px 10px rgba(200,200,200,0.5);\r\n    }\r\n`\r\n\r\nconst RangeSlider = styled(Slider)`\r\n    box-sizing:border-box;\r\n    padding-right:8px;\r\n    transform:translateY(34px);\r\n    span.MuiSlider-rail {\r\n        color:white;\r\n        height:1px;\r\n    }\r\n    span.MuiSlider-track {\r\n        color:white;\r\n    }\r\n    span.MuiSlider-thumb {\r\n        color:white;\r\n        .MuiSlider-valueLabel {\r\n            transform:translateY(-10px);\r\n            pointer-events:none;\r\n            span {\r\n                background: none;\r\n            }\r\n        }\r\n    }\r\n    span.MuiSlider-thumb.MuiSlider-active: {\r\n        box-shadow: 0px 0px 10px rgba(200,200,200,0.5);\r\n    }\r\n`\r\n\r\nconst DateSlider = () => {\r\n    const dispatch = useDispatch();  \r\n    \r\n    const currentData = useSelector(state => state.currentData);\r\n    const dates = useSelector(state => state.dates);\r\n    const dataParams = useSelector(state => state.dataParams);\r\n    const startDateIndex = useSelector(state => state.startDateIndex);\r\n    \r\n    const [timerId, setTimerId] = useState(null);\r\n    const [customRange, setCustomRange] = useState(false);\r\n    const [rangeSelectVal, setRangeSelectVal] = useState(7);\r\n    \r\n    const handleChange = (event, newValue) => {\r\n        console.log(newValue)\r\n        if (dataParams.nType === \"time-series\" && dataParams.dType === \"time-series\") {\r\n            dispatch(setVariableParams({nIndex: newValue, dIndex: newValue}))\r\n        } else if (dataParams.nType === \"time-series\") {\r\n            dispatch(setVariableParams({nIndex: newValue}))\r\n        } else if (dataParams.dType === \"time-series\") {\r\n            dispatch(setVariableParams({dIndex: newValue}))\r\n        } \r\n        dispatch(setDate(dates[currentData][newValue]));\r\n    };\r\n\r\n    const handleRangeChange = (event, newValue) => {   \r\n        console.log(newValue)\r\n        if (dataParams.dRange) {\r\n            dispatch(setVariableParams(\r\n                {\r\n                    nIndex: newValue[1], \r\n                    nRange: newValue[1]-newValue[0],\r\n                    rIndex: newValue[1], \r\n                    rRange: newValue[1]-newValue[0]\r\n                }\r\n            ))\r\n        } else {\r\n            dispatch(setVariableParams(\r\n                {\r\n                    nIndex: newValue[1], \r\n                    nRange: newValue[1]-newValue[0]\r\n                }\r\n            ))\r\n        }\r\n    }\r\n\r\n    const handlePlayPause = (timerId, rate, interval) => {\r\n        if (timerId === null) {\r\n            setTimerId(setInterval(o => dispatch(incrementDate(rate)), interval))\r\n        } else {\r\n            clearInterval(timerId);\r\n            setTimerId(null)\r\n        }\r\n    }\r\n\r\n    const handleRangeButton = (event) => {\r\n        let val = event.target.value;\r\n\r\n        if (val === 'custom') { // if swapping over to a custom range, which will use a 2-part slider to scrub the range\r\n            setCustomRange(true)\r\n            if (dataParams.nType === \"time-series\" && dataParams.dType === \"time-series\") {\r\n                dispatch(setVariableParams({nRange: 14, dRange: 14}))\r\n            } else if (dataParams.nType === \"time-series\") {\r\n                dispatch(setVariableParams({nRange: 14}))\r\n            } else if (dataParams.dType === \"time-series\") {\r\n                dispatch(setVariableParams({dRange: 14}))\r\n            } \r\n        } else { // use the new value -- null for cumulative, 1 for daily, 7 for weekly\r\n            setCustomRange(false)\r\n            if (dataParams.nType === \"time-series\" && dataParams.dType === \"time-series\") {\r\n                dispatch(setVariableParams({nRange: val, dRange: val}))\r\n            } else if (dataParams.nType === \"time-series\") {\r\n                dispatch(setVariableParams({nRange: val}))\r\n            } else if (dataParams.dType === \"time-series\") {\r\n                dispatch(setVariableParams({dRange: val}))\r\n            }    \r\n        }\r\n        \r\n        setRangeSelectVal(val);\r\n    }\r\n\r\n    const valuetext = (value) => `${dates[currentData][value-startDateIndex]}`;\r\n\r\n    if (dates[currentData] !== undefined) {\r\n        return (\r\n            <SliderContainer style={{visibility: (dataParams.nType === 'time-series' ? 'visible' : 'hidden')}}>\r\n                <Grid container spacing={2}>\r\n                    {/* <Grid item xs={12}>\r\n                        <h4 style={{textAlign:\"center\", color:\"white\"}}>{dates[currentData][dataParams.nIndex]||dates[currentData].slice(-1,)[0]}</h4>\r\n                    </Grid> */}\r\n                    <Grid item xs={1}>\r\n                        <PlayPauseButton id=\"playPause\" onClick={() => handlePlayPause(timerId, 1, 100)}>\r\n                            {timerId === null ? \r\n                                <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\r\n                                    <g transform=\"translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)\">\r\n                                        <g>\r\n                                            <path d=\"M74.4,58.7L40.7,92.2c-7.1,7.2-18.7,4.4-18.7-6.3V14c0-10.7,11.6-13.5,18.7-6.3l33.6,33.5\r\n                                                C79.1,46,79.1,53.8,74.4,58.7z M69.1,53.4c1.9-1.9,1.9-5,0-6.7L35.5,13c-2.1-2.1-6-3.2-6,1.1V86c0,4.3,3.9,3.2,6,1.1L69.1,53.4z\"\r\n                                                />\r\n                                        </g>\r\n                                    </g>\r\n                                </svg>\r\n                                : \r\n                                <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\r\n                                    <g transform=\"translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)\">\r\n                                        <g>\r\n                                            <path d=\"M22.4,0.6c3.4,0,6.8,0,10.3,0c6.5,0,11.8,5.3,11.8,11.8c0,25,0,50.1,0,75.2c0,6.5-5.3,11.8-11.8,11.8\r\n                                                c-3.4,0-6.8,0-10.3,0c-6.5,0-11.8-5.3-11.8-11.8c0-25.1,0-50.2,0-75.2C10.6,5.9,15.9,0.6,22.4,0.6z M22.4,6.5c3.4,0,6.8,0,10.3,0\r\n                                                c3.2,0,5.9,2.6,5.9,5.9c0,25,0,50.1,0,75.2c0,3.2-2.7,5.9-5.9,5.9c-3.4,0-6.8,0-10.3,0c-3.2,0-5.9-2.7-5.9-5.9\r\n                                                c0-25.1,0-50.2,0-75.2C16.5,9.1,19.2,6.5,22.4,6.5z M67.3,6.5c3.4,0,6.8,0,10.2,0s6,2.6,6,5.9c0,25,0,50.1,0,75.2\r\n                                                c0,3.2-2.7,5.9-6,5.9s-6.7,0-10.2,0c-3.3,0-5.9-2.7-5.9-5.9c0-25.1,0-50.2,0-75.2C61.4,9.1,64,6.5,67.3,6.5z M67.3,0.6\r\n                                                c3.4,0,6.8,0,10.2,0c6.5,0,11.8,5.3,11.8,11.8c0,25,0,50.1,0,75.2c0,6.5-5.3,11.8-11.8,11.8c-3.3,0-6.7,0-10.2,0\r\n                                                c-6.5,0-11.8-5.3-11.8-11.8c0-25.1,0-50.2,0-75.2C55.5,5.9,60.8,0.6,67.3,0.6z\"/>\r\n                                        </g>\r\n                                    </g>\r\n                                </svg>\r\n\r\n                            }\r\n                        </PlayPauseButton>\r\n                    </Grid>\r\n                    <Grid item xs={11} lg={9}>\r\n                        {!customRange && <LineSlider \r\n                            value={dataParams.nIndex} \r\n                            valueLabelDisplay=\"on\"\r\n                            onChange={handleChange} \r\n                            getAriaValueText={valuetext}\r\n                            valueLabelFormat={valuetext}\r\n                            aria-labelledby=\"aria-valuetext\"\r\n                            min={startDateIndex}\r\n                            step={1}\r\n                            max={startDateIndex+dates[currentData].length-1}\r\n                        />}\r\n                        {customRange && <RangeSlider \r\n                            value={[dataParams.nIndex-dataParams.nRange, dataParams.nIndex]} \r\n                            valueLabelDisplay=\"on\"\r\n                            onChange={handleRangeChange} \r\n                            getAriaValueText={valuetext}\r\n                            valueLabelFormat={valuetext}\r\n                            aria-labelledby=\"aria-valuetext\"\r\n                            min={startDateIndex}\r\n                            step={1}\r\n                            max={startDateIndex+dates[currentData].length-1}\r\n                        />}\r\n                    </Grid>\r\n                    <Grid item xs={12} lg={2} style={{paddingLeft:'17px'}}>\r\n                        <StyledDropDown>\r\n                            <InputLabel htmlFor=\"date-select\">Date Range</InputLabel>\r\n                            <Select  \r\n                                id=\"date-select\"\r\n                                value={rangeSelectVal}\r\n                                onChange={handleRangeButton}\r\n                            >\r\n                                <MenuItem value={null} key={'cumulative'}>Cumulative</MenuItem>\r\n                                <MenuItem value={1} key={'daily'}>New Daily</MenuItem>\r\n                                <MenuItem value={7} key={'weekly'}>Weekly Average</MenuItem>\r\n                                <MenuItem value={'custom'} key={'customRange'}>Custom Range</MenuItem>\r\n                            </Select>\r\n                        </StyledDropDown>\r\n                    </Grid>\r\n                </Grid>\r\n            </SliderContainer>\r\n        );\r\n    } else {\r\n        return <SliderContainer />\r\n    }\r\n}\r\n\r\nexport default DateSlider","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { SwitchContainer } from '../styled_components';\r\nimport { setMapParams } from '../actions';\r\n\r\nconst LegendContainer = styled.div`\r\n    width:100%;\r\n    padding:20px;\r\n    margin:0;\r\n    box-sizing: border-box;\r\n`\r\n\r\nconst LegendTitle = styled.h3`\r\n    text-align: left;\r\n    font-family:'Playfair Display', serif;\r\n    padding:0 0 10px 0;\r\n    font-weight:normal;\r\n    margin:0;\r\n    color:white;\r\n`\r\n\r\nconst BinLabels = styled.div`\r\n    width:100%;\r\n    display: flex;\r\n    margin-top:0px;\r\n    box-sizing: border-box;\r\n    padding: 0 ${props => props.binLength > 6 ? 100/props.binLength/2-1 : 0}%;\r\n    .bin { \r\n        height:10px;\r\n        display: inline;\r\n        border:0;\r\n        margin:0;\r\n        flex:2;\r\n        color:white;\r\n        font-size:10px;\r\n        text-align: center;\r\n    }\r\n    .bin:nth-of-type(1) {\r\n        transform: ${props => props.firstBinZero ? 'translateX(-45%)' : 'none'};\r\n    }\r\n`\r\nconst BinBars = styled.div`\r\n    width:100%;\r\n    display: flex;\r\n    margin-top:10px;\r\n    box-sizing: border-box;\r\n    .bin { \r\n        height:10px;\r\n        display: inline;\r\n        flex:1;\r\n        border:0;\r\n        margin:0;\r\n    }\r\n    .bin:nth-of-type(1) {\r\n        transform: ${props => props.firstBinZero ? 'scaleX(0.35)' : 'none'};\r\n    }\r\n`\r\n\r\n\r\nconst Legend =  () => {\r\n    const dispatch = useDispatch();\r\n    \r\n    const mapParams = useSelector(state => state.mapParams)\r\n    const dataParams = useSelector(state => state.dataParams)\r\n    const title = useSelector(state => state.currentVariable)\r\n\r\n    const cleanBins = (bins) => {\r\n        if (bins === undefined) {\r\n            return;\r\n        } else if (bins.slice(-1,)[0] !==`>${bins.slice(-2,-1)[0]}`) {\r\n            return bins\r\n        }\r\n        bins.splice(0, 1, `<${bins[0]}`)\r\n        bins.splice(-2, 1)\r\n        return bins\r\n    }\r\n\r\n    const handleSwitch = () => {\r\n        if (mapParams.binMode === 'dynamic') {\r\n            dispatch(setMapParams({binMode:''}))\r\n        } else {\r\n            dispatch(setMapParams({binMode:'dynamic'}))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <LegendContainer>\r\n            <Grid container spacing={2} id='legend-bins-container'>\r\n                <Grid item xs={12} lg={4}>\r\n                    <LegendTitle>\r\n                        {title}\r\n                    </LegendTitle>\r\n                </Grid>\r\n                <Grid item xs={12} lg={6}>\r\n                    <BinBars firstBinZero={`${mapParams.colorScale[0]}` === `240,240,240`}>\r\n                        {\r\n                            mapParams.colorScale !== undefined && \r\n                            mapParams.colorScale.map(color => <div className=\"bin color\" key={`${color[0]}${color[1]}`}style={{backgroundColor:`rgb(${color[0]},${color[1]},${color[2]})`}}></div>)\r\n                        }\r\n                    </BinBars>\r\n                    <BinLabels firstBinZero={`${mapParams.colorScale[0]}` === `240,240,240`} binLength={mapParams.bins.bins.length}>\r\n                        {`${mapParams.colorScale[0]}` === `240,240,240` && <div className=\"bin firstBin\">0</div>}\r\n\r\n                        {\r\n                            mapParams.bins.bins !== undefined && \r\n                            cleanBins(mapParams.bins.bins).map(label => <div className=\"bin label\" key={label}>{label}</div>)\r\n                        }\r\n                    </BinLabels>\r\n                </Grid>\r\n                <SwitchContainer item xs={12} lg={2}>\r\n                    <Switch\r\n                        checked={mapParams.binMode === 'dynamic'}\r\n                        onChange={handleSwitch}\r\n                        name=\"bin chart switch\"\r\n                    />\r\n                    <p>{mapParams.binMode === 'dynamic' ? 'Daily Bins' : 'Fixed Bins'}</p>\r\n                </SwitchContainer>\r\n            </Grid>\r\n        </LegendContainer>\r\n    )\r\n}\r\n\r\nexport default Legend","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { setPanelState } from '../actions';\r\nimport {dataFn, colLookup} from '../utils';\r\n\r\nconst DataPanelContainer = styled.div`\r\n  position:fixed;\r\n  right:0;\r\n  top:0;\r\n  height:100vh;\r\n  min-width:200px;\r\n  background-color: #2b2b2b;\r\n  box-shadow: -2px 0px 5px rgba(0,0,0,0.7);\r\n  padding:20px;\r\n  box-sizing: border-box;\r\n  transition:250ms all;\r\n  font: 'Lato', sans-serif;\r\n  color: white;\r\n  font-size:100%;\r\n  padding:0;\r\n  z-index:5;\r\n  div.container {\r\n    width:100%;\r\n    height:100vh;\r\n    overflow-y:scroll;\r\n    padding:5px 0 0 30px;\r\n    box-sizing:border-box;\r\n    div {\r\n      padding-right:20px;\r\n      box-sizing:border-box;\r\n    }\r\n  }\r\n  button#showHideRight {\r\n    position:absolute;    \r\n    right:95%;\r\n    top:20px;\r\n    width:40px;\r\n    height:40px;\r\n    padding:0;\r\n    margin:0;\r\n    background-color: #2b2b2b;\r\n    box-shadow: 0px 0px 6px rgba(0,0,0,1);\r\n    outline:none;\r\n    border:none;\r\n    cursor: pointer;\r\n    transition:500ms all;\r\n    svg {\r\n      padding:0;\r\n      margin:0;\r\n      fill:white;\r\n      transform:rotate(180deg);\r\n      transition:500ms all;\r\n    }\r\n    :after {\r\n      opacity:0;\r\n      font-weight:bold;\r\n      color:white;\r\n      position: relative;\r\n      top:-30px;\r\n      transition:500ms all;\r\n      content: 'Info';\r\n      right:40px;\r\n      z-index:4;\r\n    }\r\n  }\r\n  button#showHideRight.hidden {\r\n    right:100%;\r\n    svg {\r\n      transform:rotate(0deg);\r\n    }\r\n    :after {\r\n      opacity:1;\r\n    }\r\n  }\r\n`\r\n\r\nconst DataPanel = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const sidebarData = useSelector(state => state.sidebarData);\r\n  const currentData = useSelector(state => state.currentData);\r\n  const panelState = useSelector(state => state.panelState);\r\n  const cols = useSelector(state => state.cols);\r\n\r\n  const parsePredictedDate = (list) => `${list.slice(-2,)[0]}/${list.slice(-1,)[0]}`\r\n\r\n  const handleOpenClose = () => {\r\n    if (panelState.info) {\r\n      dispatch(setPanelState({info:false}))\r\n    } else {\r\n      dispatch(setPanelState({info:true}))\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <DataPanelContainer style={{transform: (panelState.info ? '' : 'translateX(100%)')}} id=\"data-panel\">\r\n      <div className=\"container\">\r\n        {sidebarData.properties && <h2>{sidebarData.properties.NAME}, {sidebarData.properties.state_name}</h2>}\r\n        {sidebarData.properties && \r\n          <div>\r\n            <p>Population: {sidebarData.properties.population.toLocaleString('en')}</p>\r\n          </div>\r\n        }\r\n        {(sidebarData.cases && sidebarData.deaths) && \r\n          <div>\r\n            <p>\r\n              Total Cases: {sidebarData.cases.slice(-1,)[0].toLocaleString('en')}<br/>\r\n              Total Deaths: {sidebarData.deaths.slice(-1,)[0].toLocaleString('en')}<br/>\r\n              Cases per 100k Population: {dataFn(sidebarData.cases, null, sidebarData.cases.length-1, null, sidebarData.properties, 'population', null, null, 100000).toFixed(2).toLocaleString('en')}<br/>\r\n              Deaths per 100k Population: {dataFn(sidebarData.deaths, null, sidebarData.deaths.length-1, null, sidebarData.properties, 'population', null, null, 100000).toFixed(2).toLocaleString('en')}<br/>\r\n              New Cases per 100k Population: {dataFn(sidebarData.cases, null, sidebarData.cases.length-1, 1, sidebarData.properties, 'population', null, null, 100000).toFixed(2).toLocaleString('en')}<br/>\r\n              New Deaths per 100k Population: {dataFn(sidebarData.deaths, null, sidebarData.deaths.length-1, 1, sidebarData.properties, 'population', null, null, 100000).toFixed(2).toLocaleString('en')}<br/>\r\n              Licensed Hospital Beds: {sidebarData.properties.beds.toLocaleString('en')}<br/>\r\n              Cases per Bed: {dataFn(sidebarData.cases, null, sidebarData.cases.length-1, null, sidebarData.properties, 'beds', null, null, 1).toFixed(2).toLocaleString('en')}<br/>\r\n            </p>\r\n          </div>\r\n        }\r\n        {sidebarData.chr_health_factors &&\r\n          <div>\r\n            <h2>Community Health Factors</h2>\r\n            <p>\r\n              Children in poverty %: {sidebarData.chr_health_factors[colLookup(cols, currentData, 'chr_health_factors', 'PovChldPrc')]}<br/>\r\n              Income inequality: {sidebarData.chr_health_factors[colLookup(cols, currentData, 'chr_health_factors', 'IncRt')]}<br/>\r\n              Median household income: {sidebarData.chr_health_factors[colLookup(cols, currentData, 'chr_health_factors', 'MedianHouseholdIncome')].toLocaleString('en')}<br/>\r\n              Food insecurity %: {sidebarData.chr_health_factors[colLookup(cols, currentData, 'chr_health_factors', 'FdInsPrc')]}<br/>\r\n              Unemployment %: {sidebarData.chr_health_factors[colLookup(cols, currentData, 'chr_health_factors', 'UnEmplyPrc')]}<br/>\r\n              Uninsured %: {sidebarData.chr_health_factors[colLookup(cols, currentData, 'chr_health_factors', 'UnInPrc')]}<br/>\r\n              Primary care physicians: {sidebarData.chr_health_factors[colLookup(cols, currentData, 'chr_health_factors', 'PrmPhysRt')]}<br/>\r\n              Preventable hospital stays: {sidebarData.chr_health_factors[colLookup(cols, currentData, 'chr_health_factors', 'PrevHospRt')].toLocaleString('en')}<br/>\r\n              Residential segregation-black/white: {sidebarData.chr_health_factors[colLookup(cols, currentData, 'chr_health_factors', 'RsiSgrBlckRt')]}<br/>\r\n              Severe housing problems %: {sidebarData.chr_health_factors[colLookup(cols, currentData, 'chr_health_factors', 'SvrHsngPrbRt')]}<br/>\r\n            </p>\r\n          </div>\r\n        }\r\n        {sidebarData.chr_health_context &&\r\n          <div>\r\n            <h2>Community Health Context</h2>\r\n            <p>\r\n              % 65 and older: {sidebarData.chr_health_context[colLookup(cols, currentData, 'chr_health_context', 'Over65YearsPrc')]} <br/>\r\n              Adult obesity %: {sidebarData.chr_health_context[colLookup(cols, currentData, 'chr_health_context', 'AdObPrc')]} <br/>\r\n              Diabetes prevalence %: {sidebarData.chr_health_context[colLookup(cols, currentData, 'chr_health_context', 'AdDibPrc')]} <br/>\r\n              Adult smoking %: {sidebarData.chr_health_context[colLookup(cols, currentData, 'chr_health_context', 'SmkPrc')]} <br/>\r\n              Excessive drinking %: {sidebarData.chr_health_context[colLookup(cols, currentData, 'chr_health_context', 'ExcDrkPrc')]} <br/>\r\n              Drug overdose deaths: {sidebarData.chr_health_context[colLookup(cols, currentData, 'chr_health_context', 'DrOverdMrtRt')]||'0'} <br/>\r\n            </p>\r\n          </div>\r\n        }\r\n        {sidebarData.chr_life && \r\n          <div>\r\n            <h2>Length and Quality of Life</h2>\r\n            <p>\r\n              Life expectancy: {sidebarData.chr_life[colLookup(cols, currentData, 'chr_life', 'LfExpRt')]} <br/>\r\n              Self-rated health %: {sidebarData.chr_life[colLookup(cols, currentData, 'chr_life', 'SlfHlthPrc')]} <br/>\r\n            </p>\r\n          </div>\r\n        }\r\n        {sidebarData.predictions && \r\n          <div>\r\n            <h2>Predictions</h2>\r\n            <p>\r\n              5-Day Severity Index: {['','High','Medium','Low'][sidebarData.predictions[1]]} <br />\r\n              Predicted Deaths by {parsePredictedDate(cols[currentData].predictions[2].split('_'))}: {sidebarData.predictions[2]} <br/>\r\n              Predicted Deaths by {parsePredictedDate(cols[currentData].predictions[4].split('_'))}: {sidebarData.predictions[4]} <br/>\r\n              Predicted Deaths by {parsePredictedDate(cols[currentData].predictions[6].split('_'))}: {sidebarData.predictions[6]} <br/>\r\n              Predicted Deaths by {parsePredictedDate(cols[currentData].predictions[8].split('_'))}: {sidebarData.predictions[8]} <br/>\r\n              Predicted Deaths by {parsePredictedDate(cols[currentData].predictions[10].split('_'))}: {sidebarData.predictions[10]} <br/>\r\n              Predicted Deaths by {parsePredictedDate(cols[currentData].predictions[12].split('_'))}: {sidebarData.predictions[12]} <br/>\r\n              Predicted Deaths by {parsePredictedDate(cols[currentData].predictions[14].split('_'))}: {sidebarData.predictions[14]} <br/>\r\n            </p>\r\n          </div>\r\n        }\r\n        \r\n        {sidebarData !== {} && <button onClick={handleOpenClose} id=\"showHideRight\" className={panelState.info ? 'active' : 'hidden'}>\r\n          <svg version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\r\n            <g transform=\"translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)\">\r\n              <path d=\"M38,33.8L23.9,47.9c-1.2,1.2-1.2,3.1,0,4.2L38,66.2l4.2-4.2l-9-9H71v17c0,0.6-0.4,1-1,1H59v6h11\r\n                c3.9,0,7-3.1,7-7V30c0-3.9-3.1-7-7-7H59v6h11c0.6,0,1,0.4,1,1v17H33.2l9-9L38,33.8z\"/>\r\n            </g>\r\n          </svg>\r\n\r\n        </button>}\r\n      </div>\r\n    </DataPanelContainer>\r\n  );\r\n}\r\n\r\nexport default DataPanel;","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { Legend, DateSlider, MainLineChart } from '../components';\r\nimport { setPanelState } from '../actions';\r\n\r\nconst getChartHeight = () => { try { return document.querySelector('#main-chart-container').offsetHeight} catch { return 0} }\r\n\r\nconst BottomDrawer = styled.div`\r\n    position: fixed;\r\n    bottom:-${props => props.bottom}px;\r\n    left:50%;\r\n    background:#2b2b2b;\r\n    transform:translateX(-50%);\r\n    width:90vw;\r\n    box-sizing: border-box;\r\n    padding:0;\r\n    margin:0;\r\n    max-width: 1024px;\r\n    box-shadow: 0px 0px 5px rgba(0,0,0,0.7);\r\n    border-radius:0.5vh 0.5vh 0 0;\r\n    transition:250ms all;\r\n    hr {\r\n        opacity:0.5;\r\n    }\r\n`\r\nconst OpenCloseButton = styled.button`\r\n    background: none;\r\n    position:absolute;\r\n    right:5px;\r\n    bottom:${props => props.bottom}px;\r\n    width:40px;\r\n    height:40px;\r\n    padding:0;\r\n    transform:${props => props.bottom===5?'rotate(270deg)':'rotate(90deg)'};\r\n    border:none;\r\n    outline:none;\r\n    transition:250ms all;\r\n    svg {\r\n        fill:white;\r\n        width:\r\n    }\r\n    &.hidden {\r\n        bottom:;\r\n        transform:;\r\n    }\r\n`\r\n\r\nconst BottomPanel = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const panelState = useSelector(state => state.panelState);\r\n    const [bottomMargin, setBottomMargin] = useState(0);\r\n\r\n    const handleBottomOpen = () => {\r\n        if (panelState.chart) {\r\n            setBottomMargin(getChartHeight())\r\n            dispatch(setPanelState({chart:false}))\r\n        } else {\r\n            setBottomMargin(getChartHeight())\r\n            dispatch(setPanelState({chart:true}))\r\n\r\n        }\r\n    }\r\n\r\n    const handleResize = () => setBottomMargin(getChartHeight())\r\n\r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResize);\r\n    \r\n    return (\r\n        <BottomDrawer bottom={panelState.chart ? 0 : bottomMargin }>\r\n            <Legend />\r\n            <DateSlider />\r\n            <hr />\r\n            <MainLineChart />\r\n            <OpenCloseButton onClick={handleBottomOpen} bottom={panelState.chart ? 5 : bottomMargin}>\r\n                <svg version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\r\n                    <g transform=\"translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)\">\r\n                        <path d=\"M38,33.8L23.9,47.9c-1.2,1.2-1.2,3.1,0,4.2L38,66.2l4.2-4.2l-9-9H71v17c0,0.6-0.4,1-1,1H59v6h11\r\n                        c3.9,0,7-3.1,7-7V30c0-3.9-3.1-7-7-7H59v6h11c0.6,0,1,0.4,1,1v17H33.2l9-9L38,33.8z\"/>\r\n                    </g>\r\n                </svg>\r\n            </OpenCloseButton>\r\n        </BottomDrawer>\r\n    )\r\n\r\n}\r\n\r\nexport default BottomPanel","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { setAnchorEl } from '../actions';\r\n\r\nconst TooltipContainer = styled.button`\r\n    width:12.5px;\r\n    height:12.5px;\r\n    background:url('${process.env.PUBLIC_URL}/assets/img/info.png');\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    outline:none;\r\n    border:none;\r\n    padding:0;\r\n    margin:4px;\r\n`\r\n\r\nconst Tooltip = (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleMouseOver = (event) => {\r\n        dispatch(setAnchorEl(event.currentTarget))\r\n    }\r\n\r\n    const handleMouseLeave = () => {\r\n        // dispatch(setAnchorEl(null))\r\n    }\r\n\r\n    return (\r\n        <TooltipContainer id={props.id} onMouseEnter={handleMouseOver} onMouseLeave={handleMouseLeave} />\r\n    )\r\n}\r\n\r\nexport default Tooltip","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { colLookup } from '../utils';\r\nimport Tooltip from './tooltip';\r\nimport { fixedScales, colorScales } from '../config';\r\nimport { StyledDropDown } from '../styled_components';\r\nimport { setVariableParams, setVariableName, setMapParams, setCurrentData, setPanelState } from '../actions';\r\n\r\nconst VariablePanelContainer = styled.div`\r\n  position:fixed;\r\n  left:0;\r\n  top:0;\r\n  height:auto;\r\n  min-height:100vh;\r\n  min-width:200px;\r\n  background-color: #2b2b2b;\r\n  box-shadow: 2px 0px 5px rgba(0,0,0,0.7);\r\n  padding:20px;\r\n  box-sizing: border-box;\r\n  transition:250ms all;\r\n  font: 'Lato', sans-serif;\r\n  color:white;\r\n  z-index:50;\r\n  p.note {\r\n    position: absolute;\r\n    bottom:100px;\r\n    width:calc(100% - 40px);\r\n    font-family: 'Lato', sans-serif;\r\n    font-weight:300;\r\n    font-size:90%;\r\n    a {\r\n      color:#FFCE00;\r\n      text-decoration: none;\r\n    }\r\n  }\r\n  div.poweredByGeoda {\r\n    position: absolute;\r\n    bottom: 40px;\r\n    color:white;\r\n    width:100%;\r\n    text-align:center;\r\n    transform:translateX(-20px);\r\n    a {\r\n      color:white;\r\n      margin:0 auto;\r\n      text-decoration: none;\r\n      letter-spacing: 2px;\r\n      font-size:75%;\r\n      img {\r\n        width:23px;\r\n        height:27px;\r\n        transform: translate(-50%,40%);\r\n      }\r\n    }\r\n  }\r\n  button#showHideLeft {\r\n    position:absolute;\r\n    left:95%;\r\n    top:20px;\r\n    width:40px;\r\n    height:40px;\r\n    padding:0;\r\n    margin:0;\r\n    background-color: #2b2b2b;\r\n    box-shadow: 0px 0px 6px rgba(0,0,0,1);\r\n    outline:none;\r\n    border:none;\r\n    cursor: pointer;\r\n    transition:500ms all;\r\n    svg { \r\n      padding:0;\r\n      margin:0;\r\n      fill:white;\r\n      transform:rotate(0deg);\r\n      transition:500ms all;\r\n    }\r\n    :after {\r\n      opacity:0;\r\n      font-weight:bold;\r\n      content: 'Variables';\r\n      color:white;\r\n      position: relative;\r\n      right:-50px;\r\n      top:-30px;\r\n      transition:500ms all;\r\n      z-index:4;\r\n    }\r\n  }\r\n  button#showHideLeft.hidden {\r\n    left:100%;\r\n    svg {\r\n      transform:rotate(180deg);\r\n    }\r\n    :after {\r\n      opacity:1;\r\n    }\r\n  }\r\n`\r\nconst StyledButtonGroup = styled(ButtonGroup)`\r\n  color:white;\r\n  padding-bottom:20px;\r\n  .MuiButtonGroup-grouped {\r\n    color:white;\r\n    border-color:#ffffff77;\r\n    &:hover {\r\n      border-color:white;\r\n    }\r\n    &.active {\r\n      background:white;\r\n      color:#2e2e2e;\r\n    }\r\n  }\r\n`\r\n\r\nconst TwoUp = styled.div`\r\n  width:100%;\r\n  .MuiFormControl-root {\r\n    width:45%;\r\n    min-width:60px;\r\n    margin-right:5px;\r\n  }\r\n`\r\n\r\nconst VariablePanel = (props) => {\r\n  const dispatch = useDispatch();    \r\n  const columnNames = useSelector(state => state.cols);\r\n  const currentData = useSelector(state => state.currentData);\r\n  const currentVariable = useSelector(state => state.currentVariable);\r\n  const mapParams = useSelector(state => state.mapParams);\r\n  const panelState = useSelector(state => state.panelState);\r\n\r\n  const PresetVariables = {\r\n    \"HEADER:cases\":{},\r\n    \"Confirmed Count\": {\r\n        numerator: 'cases',\r\n        nType: 'time-series',\r\n        nProperty: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1\r\n    },\r\n    \"Confirmed Count per 100K Population\": {\r\n        numerator: 'cases',\r\n        nType: 'time-series',\r\n        nProperty: null,\r\n        denominator: 'properties',\r\n        dType: 'characteristic',\r\n        dProperty: 'population',\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:100000\r\n    },\r\n    \"Confirmed Count per Licensed Bed\": {\r\n        numerator: 'cases',\r\n        nType: 'time-series',\r\n        nProperty: null,\r\n        denominator: 'properties',\r\n        dType: 'characteristic',\r\n        dProperty: 'beds',\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1\r\n    },\r\n    \"HEADER:deaths\":{},\r\n    \"Death Count\":{\r\n      numerator: 'deaths',\r\n      nType: 'time-series',\r\n      nProperty: null,\r\n      denominator: 'properties',\r\n      dType: 'none',\r\n      dProperty: null,\r\n      dRange:null,\r\n      dIndex:null,\r\n      scale:1\r\n        \r\n    }, \r\n    \"Death Count per 100K Population\":{\r\n      numerator: 'deaths',\r\n      nType: 'time-series',\r\n      nProperty: null,\r\n      denominator: 'properties',\r\n      dType: 'characteristic',\r\n      dProperty: 'population',\r\n      dRange:null,\r\n      dIndex:null,\r\n      scale:100000\r\n\r\n    },\r\n    \"Death Count / Confirmed Count\":{\r\n      numerator: 'deaths',\r\n      nType: 'time-series',\r\n      nProperty: null,\r\n      denominator: 'cases',\r\n      dType: 'time-series',\r\n      dProperty: null,\r\n      scale:1\r\n\r\n    },\r\n    \"HEADER:community health\":{},\r\n    \"Uninsured % (Community Health Factor)\":{\r\n      numerator: 'chr_health_factors',\r\n      nType: 'characteristic',\r\n      nProperty: colLookup(columnNames, currentData, 'chr_health_factors', 'UnInPrc'),\r\n      nRange: null,\r\n      denominator: 'properties',\r\n      dType: 'none',\r\n      dProperty: null,\r\n      dRange:null,\r\n      dIndex:null,\r\n      scale:1,\r\n      colorScale: colorScales['uninsured']\r\n\r\n    },\r\n    \"Over 65 Years % (Community Health Context)\":{\r\n      numerator: 'chr_health_context',\r\n      nType: 'characteristic',\r\n      nProperty: colLookup(columnNames, currentData, 'chr_health_context', 'Over65YearsPrc'),\r\n      nRange: null,\r\n      denominator: 'properties',\r\n      dType: 'none',\r\n      dProperty: null,\r\n      dRange:null,\r\n      dIndex:null,\r\n      scale:1,\r\n      colorScale: colorScales['over65']\r\n    },\r\n    \"Life expectancy (Length and Quality of Life)\":{\r\n      numerator: 'chr_life',\r\n      nType: 'characteristic',\r\n      nProperty: colLookup(columnNames, currentData, 'chr_life', 'LfExpRt'),\r\n      nRange: null,\r\n      denominator: 'properties',\r\n      dType: 'none',\r\n      dProperty: null,\r\n      dRange:null,\r\n      dIndex:null,\r\n      scale:1,\r\n      colorScale: colorScales['lifeExp']\r\n    }\r\n  }\r\n\r\n  const CountyVariables = {\r\n    \"HEADER:forecasting\":{},\r\n    \"Forecasting (5-Day Severity Index)\": {\r\n      numerator: 'predictions',\r\n      nType: 'characteristic',\r\n      nProperty: colLookup(columnNames, currentData, 'predictions', 'severity_index'),\r\n      nRange: null,\r\n      denominator: 'properties',\r\n      dType: 'none',\r\n      dProperty: null,\r\n      dRange:null,\r\n      dIndex:null,\r\n      scale:1,\r\n    }\r\n  }\r\n\r\n  const StateVariables = {\r\n    \"HEADER:testing\":{},\r\n    \"7 Day Testing Positivity Rate %\": {\r\n      numerator: 'testing_wk_pos',\r\n      nType: 'time-series',\r\n      nProperty: null,\r\n      nRange: null,\r\n      denominator: 'properties',\r\n      dType: 'none',\r\n      dProperty: null,\r\n      dRange:null,\r\n      dIndex:null,\r\n      scale:1,\r\n    },\r\n    \"7 Day Testing Capacity\": {\r\n      numerator: 'testing_tcap',\r\n      nType: 'time-series',\r\n      nProperty: null,\r\n      nRange: null,\r\n      denominator: 'properties',\r\n      dType: 'none',\r\n      dProperty: null,\r\n      dRange:null,\r\n      dIndex:null,\r\n      scale:1,\r\n    }, \r\n    \"7 Day Confirmed Cases per Testing %\":{\r\n      numerator: 'testing_ccpt',\r\n      nType: 'time-series',\r\n      nProperty: null,\r\n      nRange: null,\r\n      denominator: 'properties',\r\n      dType: 'none',\r\n      dProperty: null,\r\n      dRange:null,\r\n      dIndex:null,\r\n      scale:1,\r\n    }\r\n  }\r\n\r\n  const handleVariable = (event) => {\r\n    let variable = event.target.value;\r\n    dispatch(setVariableName(variable))\r\n\r\n    let tempParams = \r\n      PresetVariables.hasOwnProperty(variable) ? \r\n        PresetVariables[variable] : \r\n      CountyVariables.hasOwnProperty(variable) ?\r\n        CountyVariables[variable] :\r\n      StateVariables.hasOwnProperty(variable) ?\r\n        StateVariables[variable] :\r\n      null;\r\n\r\n    dispatch(setVariableParams({...tempParams}))\r\n    if (mapParams.mapType === \"natural_breaks\") {\r\n      if (tempParams.hasOwnProperty('colorScale')) {\r\n        dispatch(setMapParams({colorScale: tempParams.colorScale}))\r\n      } else {\r\n        dispatch(setMapParams({colorScale: colorScales['natural_breaks']}))\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDataSource = (event) => {\r\n    dispatch(setCurrentData(event.target.value)) ;  \r\n  };\r\n\r\n  const handleMapType = (event, newValue) => {\r\n    let nBins = newValue === 'hinge15_breaks' ? 6 : 8\r\n    if (newValue === 'lisa') {\r\n      dispatch(\r\n        setMapParams(\r\n          {\r\n            mapType: newValue,\r\n            nBins: 4,\r\n            bins: fixedScales[newValue],\r\n            colorScale: colorScales[newValue]\r\n          }\r\n        )\r\n      )\r\n    } else {\r\n      dispatch(\r\n        setMapParams(\r\n          {\r\n            nBins,\r\n            mapType: newValue\r\n          }\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleMapOverlay = (event) =>{\r\n    dispatch(\r\n      setMapParams(\r\n        {\r\n          overlay: event.target.value\r\n        }\r\n      )\r\n    )\r\n  }\r\n\r\n  const handleMapResource = (event) =>{\r\n    dispatch(\r\n      setMapParams(\r\n        {\r\n          resource: event.target.value\r\n        }\r\n      )\r\n    )\r\n  }\r\n\r\n  const handleOpenClose = () => {\r\n    if (panelState.variables) {\r\n      dispatch(setPanelState({variables:false}))\r\n    } else {\r\n      dispatch(setPanelState({variables:true}))\r\n    }\r\n  }\r\n\r\n  const handleVizTypeButton = (vizType) => {\r\n    if (mapParams.vizType !== vizType) {\r\n      dispatch(setMapParams({vizType}))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <VariablePanelContainer style={{transform: (panelState.variables ? '' : 'translateX(-100%)')}}>\r\n      <h2>Data Sources &amp;<br/> Map Variables</h2>\r\n      <StyledDropDown>\r\n        <InputLabel htmlFor=\"data-select\">Data Source</InputLabel>\r\n        <Select  \r\n          id=\"data-select\"\r\n          value={currentData}\r\n          onChange={handleDataSource}\r\n        >\r\n          \r\n        <ListSubheader>county data</ListSubheader>\r\n          <MenuItem value={'county_usfacts.geojson'} key={'county_usfacts.geojson'}>USA Facts</MenuItem>\r\n          <MenuItem value={'county_nyt.geojson'} key={'county_nyt.geojson'}>New York Times</MenuItem>\r\n          <MenuItem value={'county_1p3a.geojson'} key={'county_1p3a.geojson'}>1point3acres</MenuItem>\r\n        <ListSubheader>state data</ListSubheader>\r\n          <MenuItem value={'state_1p3a.geojson'} key={'state_1p3a.geojson'}>1point3acres</MenuItem>\r\n          <MenuItem value={'state_nyt.geojson'} key={'state_nyt.geojson'} disabled>New York Times</MenuItem>\r\n        </Select>\r\n      </StyledDropDown>\r\n      <br />\r\n      <StyledDropDown>\r\n        <InputLabel htmlFor=\"numerator-select\">Select Variable</InputLabel>\r\n        <Select \r\n          value={currentVariable} \r\n          id=\"numerator-select\"\r\n          onChange={handleVariable}\r\n        >\r\n          {\r\n            Object.keys(PresetVariables).map((variable) => {\r\n              if (variable.split(':')[0]===\"HEADER\") {\r\n                return <ListSubheader>{variable.split(':')[1]}</ListSubheader>\r\n              } else {\r\n                return <MenuItem value={variable} key={variable}>{variable}</MenuItem> \r\n              }\r\n            })\r\n          }\r\n          \r\n          {\r\n            currentData.includes(\"county\") && Object.keys(CountyVariables).map((variable) => {\r\n              if (variable.split(':')[0]===\"HEADER\") {\r\n                return <ListSubheader>{variable.split(':')[1]}</ListSubheader>\r\n              } else {\r\n                return <MenuItem value={variable} key={variable}>{variable}</MenuItem> \r\n              }\r\n            })\r\n          }\r\n          \r\n          {\r\n            currentData.includes(\"state\") && Object.keys(StateVariables).map((variable) => {\r\n              if (variable.split(':')[0]===\"HEADER\") {\r\n                return <ListSubheader>{variable.split(':')[1]}</ListSubheader>\r\n              } else {\r\n                return <MenuItem value={variable} key={variable}>{variable}</MenuItem> \r\n              }\r\n            })\r\n          }\r\n        </Select>\r\n      </StyledDropDown>\r\n      <br/>\r\n      <StyledDropDown component=\"radios\">\r\n        <FormLabel component=\"legend\">Map Type</FormLabel>\r\n        <RadioGroup \r\n          aria-label=\"maptype\" \r\n          name=\"maptype1\" \r\n          onChange={handleMapType} \r\n          value={mapParams.mapType}\r\n          >\r\n          <FormControlLabel \r\n            value=\"natural_breaks\" \r\n            key=\"natural_breaks\" \r\n            control={<Radio />} \r\n            label=\"Natural Breaks\" \r\n          />\r\n          <FormControlLabel \r\n            value=\"hinge15_breaks\" \r\n            key=\"hinge15_breaks\" \r\n            control={<Radio />} \r\n            label=\"Box Map\" \r\n          />\r\n          <FormControlLabel \r\n            value=\"lisa\" \r\n            key=\"lisa\" \r\n            control={<Radio />} \r\n            label=\"Local Moran\" \r\n          />\r\n        </RadioGroup>\r\n      </StyledDropDown>\r\n      <p>Visualization Type</p>\r\n      <StyledButtonGroup color=\"primary\" aria-label=\"text button group\">\r\n        <Button className={mapParams.vizType === '2D' ? 'active' : ''} data-val=\"2D\" onClick={() => handleVizTypeButton('2D')}>2D</Button>\r\n        <Button className={mapParams.vizType === '3D' ? 'active' : ''} data-val=\"3D\" onClick={() => handleVizTypeButton('3D')}>3D</Button>\r\n        <Button className={mapParams.vizType === 'cartogram' ? 'active' : ''} data-val=\"cartogram\" onClick={() => handleVizTypeButton('cartogram')}>Cartogram</Button>\r\n      </StyledButtonGroup>\r\n      <br/>\r\n      <TwoUp>\r\n        <StyledDropDown>\r\n          <InputLabel htmlFor=\"overlay-select\">Overlay</InputLabel>\r\n          <Select  \r\n            id=\"overlay-select\"\r\n            value={mapParams.overlay}\r\n            onChange={handleMapOverlay}\r\n          >\r\n            <MenuItem value=\"\" key={'None'}>None</MenuItem> \r\n            <MenuItem value={'native_american_reservations'} key={'native_american_reservations'}>Native American Reservations</MenuItem>\r\n            <MenuItem value={'segregated_cities'} key={'segregated_cities'}>Hypersegregated Cities<Tooltip id=\"Hypersegregated\"/></MenuItem>\r\n            <MenuItem value={'blackbelt'} key={'blackbelt'}>Black Belt Counties<Tooltip id=\"BlackBelt\" /></MenuItem>\r\n            <MenuItem value={'congressional_districts'} key={'congressional_districts'}>US Congressional Districts <Tooltip id=\"USCongress\" /></MenuItem>\r\n          </Select>\r\n        </StyledDropDown>\r\n        <StyledDropDown>\r\n          <InputLabel htmlFor=\"resource-select\">Resource</InputLabel>\r\n          <Select  \r\n            id=\"resource-select\"\r\n            value={mapParams.resource}\r\n            onChange={handleMapResource}\r\n          >\r\n            <MenuItem value=\"\" key='None'>None</MenuItem> \r\n            <MenuItem value={'clinics_hospitals'} key={'variable1'}>Clinics and Hospitals</MenuItem>\r\n            <MenuItem value={'clinics'} key={'variable2'}>Clinics</MenuItem>\r\n            <MenuItem value={'hospitals'} key={'variable3'}>Hospitals</MenuItem>\r\n          </Select>\r\n        </StyledDropDown>\r\n      </TwoUp>\r\n      <p className=\"note\">\r\n        Data is updated with freshest available data at 3pm CST daily, at minimum. \r\n        In case of data discrepancy, local health departments are considered most accurate as per CDC recommendations. \r\n        More information on <a href=\"data.html\">data</a>, <a href=\"methods.html\">methods</a>, \r\n        and <a href=\"FAQ.html\">FAQ</a> at main site.\r\n      </p>\r\n      <div className=\"poweredByGeoda\">\r\n            <a href=\"https://geodacenter.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <img src={`${process.env.PUBLIC_URL}/assets/img/geoda-logo.png`} />\r\n              POWERED BY GEODA\r\n            </a>\r\n        </div>\r\n      <button onClick={handleOpenClose} id=\"showHideLeft\" className={panelState.variables ? 'active' : 'hidden'}>\r\n        <svg version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\r\n          <g transform=\"translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)\">\r\n            <path d=\"M38,33.8L23.9,47.9c-1.2,1.2-1.2,3.1,0,4.2L38,66.2l4.2-4.2l-9-9H71v17c0,0.6-0.4,1-1,1H59v6h11\r\n              c3.9,0,7-3.1,7-7V30c0-3.9-3.1-7-7-7H59v6h11c0.6,0,1,0.4,1,1v17H33.2l9-9L38,33.8z\"/>\r\n          </g>\r\n        </svg>\r\n\r\n      </button>\r\n\r\n    </VariablePanelContainer>\r\n  );\r\n}\r\n\r\nexport default VariablePanel;","import React, {useState} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, ReferenceArea, ReferenceLine, Tooltip, Label, ResponsiveContainer\r\n} from 'recharts';\r\nimport { useSelector } from 'react-redux';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { SwitchContainer } from '../styled_components';\r\nimport styled from 'styled-components';\r\n\r\nconst ChartContainer = styled(Grid)`\r\n    padding:10px 11.5% 20px 20px;\r\n`\r\n\r\nconst ChartTitle = styled.h3`\r\n    text-align: left;\r\n    font-family:'Playfair Display', serif;\r\n    padding:0;\r\n    font-weight:normal;\r\n    margin:0;\r\n    color:white;\r\n`\r\nconst monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\nconst millionFormatter = val => { return `${val/1000000}M` };\r\nconst thousandFormatter = val => { return `${val/1000}K` };\r\nconst dateFormatter = val => { \r\n    let tempDate = new Date(val).getMonth();\r\n    return `${monthNames[tempDate]}`\r\n};\r\n\r\nconst CustomTick = props => {\r\n    return <text {...props}>{props.labelFormatter(props.payload.value)}</text>\r\n};\r\n\r\nconst getStartDate = (range, index, data) => {\r\n    if (range === null) {\r\n        try {\r\n            return data.slice(0,1)[0].date\r\n        } catch {\r\n            return null\r\n        }\r\n    } else {\r\n        try {\r\n            return data[index-range].date\r\n        } catch {\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\nconst getEndDate = (index, data) => {\r\n    try {\r\n        return data[index].date;\r\n    } catch {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst CustomTooltip = props => {\r\n    if (props.active) {\r\n        let data = props.payload\r\n        return (\r\n            <div \r\n                style={{\r\n                    background:'#1a1a1a',\r\n                    padding:'1px 10px',\r\n                    borderRadius:'4px',\r\n                    boxShadow: '0px 5px 5px -3px rgba(0,0,0,0.2), 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12)'\r\n            \r\n            }}> \r\n            <p style={{color:'white', padding:0,}}>{data[0].payload.date}</p>\r\n                {data.map(data => \r\n                    <p style={{color: data.color, textShadow: '2px 2px 4px #2e2e2e', fontWeight:600}}>{data.name}: {Number.isInteger(data.payload[data.dataKey]) ? \r\n                        data.payload[data.dataKey].toLocaleString('en') \r\n                        : data.payload[data.dataKey]}\r\n                    </p>\r\n                    \r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n    return null;\r\n};\r\n\r\nconst MainLineChart = () => {\r\n    \r\n    const chartData = useSelector(state => state.chartData);\r\n    const dataParams = useSelector(state => state.dataParams);\r\n    const [logChart, setLogChart] = useState(false)\r\n    \r\n\r\n    const handleSwitch = () => {\r\n        setLogChart(prev => !prev);\r\n    }\r\n\r\n    return (\r\n        <ChartContainer container spacing={2} id=\"main-chart-container\">\r\n            <Grid item xs={12}>\r\n                <ChartTitle>Total Cases and Daily Cases</ChartTitle>\r\n            </Grid>\r\n            <Grid item xs={12} style={{height:'20vh'}}>\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                    <LineChart\r\n                        data={chartData}\r\n                        margin={{\r\n                            top: 20, right: 10, left: 22, bottom: 20,\r\n                        }}\r\n                    >\r\n                        {/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\r\n                        <XAxis \r\n                            dataKey=\"date\"\r\n                            // ticks={['2/1/2020','3/1/2020','4/1/2020','5/1/2020','6/1/2020']}\r\n                            tick={\r\n                                <CustomTick\r\n                                style={{\r\n                                    fill: \"#FFFFFF99\",\r\n                                    fontSize: \"10px\",\r\n                                    fontFamily: \"Lato\",\r\n                                    fontWeight: 600,\r\n                                    transform:'translateY(10px)'\r\n                                }}\r\n                                labelFormatter={dateFormatter}\r\n                                />\r\n                            }\r\n                        />\r\n                        {/* <YAxis type=\"number\" /> */}\r\n                        <YAxis yAxisId=\"left\" type=\"number\" dataKey=\"count\"  scale={logChart ? \"log\" : \"linear\"} domain={[0.01, 'dataMax']} allowDataOverflow \r\n                            ticks={[2000000,4000000,6000000,8000000,10000000]} \r\n                            tick={\r\n                                <CustomTick\r\n                                style={{\r\n                                    fill: \"#D8D8D8\",\r\n                                    fontSize: \"10px\",\r\n                                    fontFamily: \"Lato\",\r\n                                    fontWeight: 600\r\n                                }}\r\n                                labelFormatter={millionFormatter}\r\n                                />\r\n                            }\r\n                            >\r\n                            <Label value=\"Total Cases\" position='insideLeft' style={{marginTop:10, fill:'#D8D8D8', fontFamily: 'Lato', fontWeight: 600}} angle={-90}  />\r\n                        </YAxis>\r\n                        <YAxis yAxisId=\"right\" orientation=\"right\" dataKey=\"dailyNew\" scale={logChart ? \"log\" : \"linear\"} domain={[0.01, 'dataMax']} allowDataOverflow \r\n                            ticks={[20000,40000,60000,80000,100000, 120000, 140000]} \r\n                            tick={\r\n                                <CustomTick\r\n                                    style={{\r\n                                        fill: \"#FFCE00\",\r\n                                        fontSize: \"10px\",\r\n                                        fontFamily: \"Lato\",\r\n                                        fontWeight: 600,\r\n                                    }}\r\n                                    labelFormatter={thousandFormatter}\r\n                                />\r\n                            }\r\n                            >\r\n                            <Label value=\"Daily Cases\" position='insideTopRight' style={{marginTop:10, fill:'#FFCE00', fontFamily: 'Lato', fontWeight: 600}} angle={-90}  />\r\n                        </YAxis>\r\n                        <Tooltip\r\n                            content={CustomTooltip}\r\n                        />\r\n                        <ReferenceArea \r\n                            yAxisId=\"left\"\r\n                            x1={getStartDate(dataParams.nRange, dataParams.nIndex, chartData)}\r\n                            x2={getEndDate(dataParams.nIndex, chartData)} \r\n                            fill=\"white\" \r\n                            fillOpacity={0.15}\r\n                            isAnimationActive={false}\r\n                        />\r\n                        <Line type=\"monotone\" yAxisId=\"left\" dataKey=\"count\" name=\"Total Count\" stroke=\"#D8D8D8\" dot={false} />\r\n                        <Line type=\"monotone\" yAxisId=\"right\" dataKey=\"dailyNew\" name=\"Daily Count\" stroke=\"#FFCE00\" dot={false} />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n            </Grid>\r\n            <SwitchContainer item xs={12} style={{position:'absolute', right:0, bottom:40}}>\r\n                <Switch\r\n                    checked={logChart}\r\n                    onChange={handleSwitch}\r\n                    name=\"log chart switch\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                />\r\n                <p>{logChart ? 'Log Scale' : 'Linear Scale'}</p>\r\n            </SwitchContainer>\r\n        </ChartContainer>\r\n    );\r\n}\r\n\r\nexport default MainLineChart\r\n\r\n// dataParams.nIndex-(dataParams.nRange||dataParams.nIndex)","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport { tooltipInfo } from '../config';\r\nimport { setAnchorEl } from '../actions';\r\n\r\nconst Popover = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const anchorEl = useSelector(state => state.anchorEl);\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popper' : undefined;\r\n    \r\n    const handleMouseOver = (event) => {\r\n        dispatch(setAnchorEl(anchorEl))\r\n    }\r\n\r\n    const handleMouseLeave = () => {\r\n        dispatch(setAnchorEl(null))\r\n    }\r\n    \r\n    return (\r\n        <Popper \r\n            id={id} \r\n            open={open} \r\n            anchorEl={anchorEl}\r\n            placement=\"left\"\r\n            disablePortal={false}\r\n            modifiers={{\r\n                flip: {\r\n                enabled: true,\r\n                },\r\n                preventOverflow: {\r\n                enabled: true,\r\n                boundariesElement: 'scrollParent',\r\n                }\r\n            }}\r\n            style={{ \r\n                zIndex:10000,\r\n                maxWidth:'200px',\r\n                background:'none',\r\n                padding:0,\r\n                margin:0,\r\n                pointerEvents: 'none'\r\n            }}\r\n            onMouseEnter={handleMouseOver} \r\n            onMouseLeave={handleMouseLeave}\r\n            >\r\n            <div style={{\r\n                background:'black',\r\n                padding:'1px 10px',\r\n                margin:0,\r\n                borderRadius: '4px',\r\n                color:'white',\r\n                transform:'translateX(65%)',\r\n                boxShadow: '0px 5px 5px -3px rgba(0,0,0,0.2), 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12)',\r\n                pointerEvents: 'all'\r\n                }}\r\n                >\r\n                {anchorEl && tooltipInfo[anchorEl.id]}\r\n            </div>\r\n        </Popper>\r\n    )\r\n}\r\n\r\nexport default Popover","import React, { useEffect, useState } from 'react';\r\nimport { setCentroids, storeData, setCurrentData, setDates, setColumnNames, setDate, setDateIndex, setMapParams, setVariableParams, setStartDateIndex, setChartData, storeGeojson, storeLisaValues, storeCartogramData } from './actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport GeodaProxy from './GeodaProxy.js';\r\nimport { getParseCSV, getJson, mergeData, colIndex, findDates, getDataForBins, getDataForCharts, dataFn, getLisaValues, getVarId, getGeoids, getDataForLisa, getCartogramValues } from './utils';\r\nimport { Map, VariablePanel, BottomPanel, DataPanel, Popover } from './components';\r\nimport { colorScales, fixedScales, dataPresets } from './config';\r\n\r\nfunction App() {\r\n  const storedData = useSelector(state => state.storedData);\r\n  const storedGeojson = useSelector(state => state.storedGeojson);\r\n  const storedLisaData = useSelector(state => state.storedLisaData);\r\n  const storedCartogramData = useSelector(state => state.storedCartogramData);\r\n  const currentData = useSelector(state => state.currentData);\r\n  const columnNames = useSelector(state => state.cols);\r\n  const dates = useSelector(state => state.dates);\r\n  const mapParams = useSelector(state => state.mapParams);\r\n  const dataParams = useSelector(state => state.dataParams);\r\n  const startDateIndex = useSelector(state => state.startDateIndex);\r\n\r\n  const [gda_proxy, set_gda_proxy] = useState(null); \r\n  \r\n  const dispatch = useDispatch();  \r\n  \r\n  const getCentroids = (geojson, gda_proxy) =>  dispatch(setCentroids(gda_proxy.GetCentroids(geojson), geojson))\r\n  \r\n  const getDates = (data, table, geojson) =>  {\r\n    let dates = findDates(data[table])\r\n    dispatch(setDates(dates[0], geojson))\r\n    dispatch(setDate(dates[0].slice(-1,)[0]))\r\n    dispatch(setVariableParams({nIndex: colIndex(data, table, dates[0].slice(-1,)[0])}))\r\n    dispatch(setStartDateIndex(dates[1]))\r\n  }\r\n\r\n  const getColumns = (data, names) => {\r\n    let rtn = {};\r\n    for (let i=0; i < data.length; i++) {\r\n      rtn[names[i]] = data[i][1]\r\n    }\r\n  return rtn;\r\n  }\r\n\r\n  async function loadData(geojson, csvs, joinCols, names, accumulate, gda_proxy) {\r\n    const csvPromises = csvs.map(csv => getParseCSV(`${process.env.PUBLIC_URL}/csv/${csv}.csv`, joinCols[1], accumulate.includes(csv)).then(result => {return result}))\r\n    Promise.all([\r\n      getJson(`${process.env.PUBLIC_URL}/geojson/${geojson}`, gda_proxy),\r\n      ...csvPromises\r\n    ]).then(values => {\r\n      dispatch(storeGeojson(values[0]['geoidIndex'], geojson));\r\n      let tempData = mergeData(values[0]['data'], joinCols[0], values.slice(1,), names, joinCols[1]);\r\n      dispatch(storeData(tempData, geojson));\r\n      dispatch(setCurrentData(geojson));\r\n      dispatch(setColumnNames(getColumns(values.slice(1,), names), geojson));\r\n    })    \r\n  }\r\n\r\n  // After runtime is initialized, this loads in gda_proxy to the state\r\n  useEffect(() => {\r\n    const waitForWASM = () => {\r\n      setTimeout(() => {\r\n        if (window.Module === undefined) {\r\n          waitForWASM()\r\n        } else {\r\n          if (gda_proxy === null) {\r\n            set_gda_proxy(new GeodaProxy());\r\n          }\r\n        }\r\n      }, 100)\r\n    }\r\n\r\n    waitForWASM()\r\n  },[window.Module])\r\n\r\n  // on initial load and after gda_proxy has been initialized, this loads in the default data sets (USA Facts)\r\n  useEffect(() => {\r\n    if ((gda_proxy !== null) && (currentData === '')) {\r\n      loadData(\r\n        'county_usfacts.geojson', \r\n        ['covid_confirmed_usafacts','covid_deaths_usafacts', 'berkeley_predictions', 'chr_health_context', 'chr_life', 'chr_health_factors'], \r\n        ['GEOID', 'FIPS'], \r\n        ['cases','deaths', 'predictions', 'chr_health_context', 'chr_life', 'chr_health_factors'],\r\n        [],\r\n        gda_proxy\r\n      )\r\n    }\r\n  },[gda_proxy])\r\n\r\n  useEffect(() => {\r\n    if ((gda_proxy !== null) && (currentData !== '')) {\r\n      if (storedData[currentData] === undefined) {\r\n        loadData(\r\n          dataPresets[currentData].geojson, \r\n          dataPresets[currentData].csv, \r\n          dataPresets[currentData].joinCols,\r\n          dataPresets[currentData].tableNames,  \r\n          dataPresets[currentData].accumulate,\r\n          gda_proxy\r\n        )\r\n      }\r\n    }\r\n  },[currentData])\r\n\r\n\r\n  // whenever the current data changes, this \r\n  useEffect(() => {\r\n    if (currentData != '') {\r\n      if (!dates.hasOwnProperty(currentData)){\r\n        getCentroids(currentData, gda_proxy)\r\n        getDates(columnNames[currentData], 'cases', currentData)\r\n      }\r\n    } \r\n  },[columnNames])\r\n\r\n  useEffect(() => {\r\n    if (storedData[currentData]){\r\n      dispatch(\r\n        setChartData(\r\n          getDataForCharts(\r\n            storedData[currentData],\r\n            'cases',\r\n            startDateIndex,\r\n            dates[currentData]\r\n          )\r\n        )\r\n      )\r\n    }\r\n  }, [startDateIndex])\r\n\r\n  // get lisa values on change, if map type set to lisa\r\n  useEffect(() => {\r\n    console.log('map or data params')\r\n    if (gda_proxy !== null && mapParams.mapType === \"lisa\"){\r\n      let tempId = getVarId(currentData, dataParams)\r\n      if (!(storedLisaData.hasOwnProperty(tempId))) {\r\n        dispatch(\r\n          storeLisaValues(\r\n            getLisaValues(\r\n              gda_proxy, \r\n              currentData, \r\n              getDataForLisa(\r\n                storedData[currentData], \r\n                dataParams.numerator, \r\n                dataParams.nType,\r\n                dataParams.nProperty, \r\n                dataParams.nIndex, \r\n                dataParams.nRange, \r\n                dataParams.denominator, \r\n                dataParams.dType,\r\n                dataParams.dProperty, \r\n                dataParams.dIndex, \r\n                dataParams.dRange, \r\n                dataParams.scale,\r\n                storedGeojson[currentData].indexOrder\r\n              )\r\n            ),\r\n            tempId\r\n          )\r\n        )\r\n      }\r\n    } \r\n    if (gda_proxy !== null && mapParams.vizType === \"cartogram\"){\r\n      let tempId = getVarId(currentData, dataParams)\r\n      if (!(storedCartogramData.hasOwnProperty(tempId))) {\r\n        dispatch(\r\n          storeCartogramData(\r\n            getCartogramValues(\r\n              gda_proxy, \r\n              currentData, \r\n              getDataForLisa(\r\n                storedData[currentData], \r\n                dataParams.numerator, \r\n                dataParams.nType,\r\n                dataParams.nProperty, \r\n                dataParams.nIndex, \r\n                dataParams.nRange, \r\n                dataParams.denominator, \r\n                dataParams.dType,\r\n                dataParams.dProperty, \r\n                dataParams.dIndex, \r\n                dataParams.dRange, \r\n                dataParams.scale,\r\n                storedGeojson[currentData].indexOrder\r\n              )\r\n            ),\r\n            tempId\r\n          )\r\n        )\r\n      }\r\n    }\r\n  }, [dataParams, mapParams])\r\n\r\n  // trigger on parameter change for metric values\r\n  useEffect(() => {\r\n    if (gda_proxy !== null && currentData !== '' && mapParams.mapType !== \"lisa\"){\r\n      if (mapParams.fixedScale !== null) {\r\n        dispatch(\r\n          setMapParams({\r\n            bins: fixedScales[mapParams.fixedScale],\r\n            colorScale: colorScales[mapParams.fixedScale]\r\n          })\r\n        )\r\n      } else {\r\n        let nb = gda_proxy.custom_breaks(\r\n          currentData, \r\n          mapParams.mapType, \r\n          mapParams.nBins, \r\n          null, \r\n          getDataForBins(\r\n            storedData[currentData], \r\n            dataParams.numerator, \r\n            dataParams.nType,\r\n            dataParams.nProperty, \r\n            mapParams.binMode === 'dynamic' ? dataParams.nIndex : null,\r\n            dataParams.nRange, \r\n            dataParams.denominator,\r\n            dataParams.dType,\r\n            dataParams.dProperty, \r\n            mapParams.binMode === 'dynamic' ? dataParams.dIndex : null, \r\n            dataParams.dRange, \r\n            dataParams.scale\r\n          )\r\n        )\r\n\r\n        dispatch(\r\n          setMapParams({\r\n            bins: {\r\n              bins: mapParams.mapType === \"natural_breaks\" ? nb.bins : ['Lower Outlier','< 25%','25-50%','50-75%','>75%','Upper Outlier'],\r\n              breaks: [-Math.pow(10, 12), ...nb.breaks.slice(1,-1), Math.pow(10, 12)]\r\n            },\r\n            colorScale: colorScales[mapParams.mapType]\r\n          })\r\n        )\r\n      }\r\n    }\r\n  }, [dates, dataParams.numerator, dataParams.nProperty, dataParams.nRange, dataParams.denominator, dataParams.dProperty, dataParams.dRange, dataParams.scale, mapParams.mapType])\r\n\r\n  // trigger on date (index) change for dynamic binning\r\n  useEffect(() => {\r\n    if (gda_proxy !== null && mapParams.binMode === 'dynamic' && currentData !== '' && mapParams.mapType !== 'lisa'){\r\n      let nb = gda_proxy.custom_breaks(\r\n        currentData, \r\n        mapParams.mapType,\r\n        mapParams.nBins,\r\n        null, \r\n        getDataForBins(\r\n          storedData[currentData], \r\n          dataParams.numerator, \r\n          dataParams.nType,\r\n          dataParams.nProperty, \r\n          dataParams.nIndex, \r\n          dataParams.nRange, \r\n          dataParams.denominator, \r\n          dataParams.dType,\r\n          dataParams.dProperty, \r\n          dataParams.dIndex, \r\n          dataParams.dRange, \r\n          dataParams.scale\r\n          ), \r\n        )\r\n      dispatch(\r\n        setMapParams({\r\n          bins: {\r\n            bins: mapParams.mapType === \"natural_breaks\" ? nb.bins : ['Lower Outlier','< 25%','25-50%','50-75%','>75%','Upper Outlier'],\r\n            breaks: [-Math.pow(10, 12), ...nb.breaks.slice(1,-1), Math.pow(10, 12)]\r\n          },\r\n          colorScale: colorScales[mapParams.mapType]\r\n        })\r\n      )\r\n    }\r\n\r\n  }, [dataParams.nIndex, dataParams.dIndex, mapParams.binMode])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <header className=\"App-header\" style={{position:'fixed', left: '20vw', top:'20px', zIndex:10}}>\r\n        <button onClick={() => console.log(gda_proxy.custom_breaks(\r\n          currentData, \r\n          mapParams.mapType, \r\n          mapParams.nBins, \r\n          null, \r\n          getDataForBins(\r\n            storedData[currentData], \r\n            dataParams.numerator, \r\n            dataParams.nType,\r\n            dataParams.nProperty, \r\n            298,\r\n            dataParams.nRange, \r\n            dataParams.denominator,\r\n            dataParams.dType,\r\n            dataParams.dProperty, \r\n            298, \r\n            dataParams.dRange, \r\n            dataParams.scale\r\n          )\r\n        )\r\n\r\n\r\n        )}>dummy button for testing</button>\r\n      </header> */}\r\n      <Map />\r\n      <VariablePanel />\r\n      <DataPanel />\r\n      <BottomPanel />\r\n      <Popover />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","export const INITIAL_STATE = {\r\n  geodaProxy: null,\r\n  storedData: {},\r\n  storedGeojson: {},\r\n  storedLisaData: {},\r\n  storedCartogramData: {},\r\n  storedCSV: {},\r\n  cols: {},\r\n  currentData: '',\r\n  chartData: [{}],\r\n  centroids: {},\r\n  dates: {},\r\n  currDate: '',\r\n  currDateIndex: '',\r\n  startDateIndex: '',\r\n  currentVariable: 'Confirmed Count per 100K Population',\r\n  currentMethod: 'natural_breaks',\r\n  currentOverlay: '',\r\n  currentResource: '',\r\n  dataParams: {\r\n    numerator: 'cases',\r\n    nType: 'time-series',\r\n    nProperty: null,\r\n    nRange: 7,\r\n    nIndex:null,\r\n    denominator: 'properties',\r\n    dType: 'characteristic',\r\n    dProperty: 'population',\r\n    dRange:null,\r\n    dIndex:null,\r\n    scale:100000,\r\n  },\r\n  mapParams: {\r\n    mapType: 'natural_breaks',\r\n    bins: {\r\n      bins: [],\r\n      breaks: []\r\n    },\r\n    binMode: '',\r\n    fixedScale: null,\r\n    nBins: 8,\r\n    vizType: '2D',\r\n    activeGeoid: '',\r\n    overlay: '',\r\n    resource: '',\r\n    colorScale: [\r\n      [240,240,240],\r\n      [255,255,204],\r\n      [255,237,160],\r\n      [254,217,118],\r\n      [254,178,76],\r\n      [253,141,60],\r\n      [252,78,42],\r\n      [227,26,28],\r\n      [177,0,38],\r\n    ],\r\n  },\r\n  panelState: {\r\n    variables:true,\r\n    info:false,\r\n    chart:true,\r\n  },\r\n  storedRange: null,\r\n  currentGeoid: '',\r\n  sidebarData: {},\r\n  anchorEl: null,\r\n};","import { INITIAL_STATE } from '../constants/defaults';\r\n\r\nvar reducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case 'SET_GEOID': \r\n            return {\r\n                ...state,\r\n                currentGeoid: action.payload.geoid\r\n            };\r\n        case 'SET_STORED_DATA':\r\n            let obj = {\r\n                ...state.storedData,\r\n            }\r\n            obj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                storedData: obj\r\n            };\r\n        case 'SET_STORED_GEOJSON':\r\n            let geojsonObj = {\r\n                ...state.storedGeojson,\r\n            }\r\n            geojsonObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                storedGeojson: geojsonObj\r\n            };\r\n        case 'SET_STORED_LISA_DATA':\r\n            let lisaObj = {\r\n                ...state.storedLisaData,\r\n            }\r\n            lisaObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                storedLisaData: lisaObj\r\n            };\r\n        case 'SET_STORED_CARTOGRAM_DATA':\r\n            let cartoObj = {\r\n                ...state.storedCartogramData,\r\n            }\r\n            cartoObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                storedCartogramData: cartoObj\r\n            };\r\n        case 'SET_CENTROIDS':\r\n            let centroidsObj = {\r\n                ...state.centroids,\r\n            }\r\n            centroidsObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                centroids: centroidsObj\r\n            };\r\n        case 'SET_CURRENT_DATA':\r\n            return {\r\n                ...state,\r\n                currentData: action.payload.data\r\n            }\r\n        case 'SET_GEODA_PROXY':\r\n            return {\r\n                ...state,\r\n                geodaProxy: action.payload.proxy\r\n            }\r\n        case 'SET_DATES':\r\n            let datesObj = {\r\n                ...state.dates\r\n            }\r\n            datesObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                dates: datesObj\r\n            }\r\n        case 'SET_DATA_FUNCTION':\r\n            return {\r\n                ...state,\r\n                currentDataFn: action.payload.fn\r\n            }\r\n        case 'SET_COLUMN_NAMES':\r\n            let colObj = {\r\n                ...state.cols\r\n            }\r\n            colObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                cols: colObj\r\n            }\r\n        case 'SET_CURR_DATE':\r\n            return {\r\n                ...state,\r\n                currDate: action.payload.date\r\n            }\r\n        case 'SET_DATE_INDEX':\r\n            return {\r\n                ...state,\r\n                currDateIndex: action.payload.index\r\n            }\r\n        case 'SET_START_DATE_INDEX':\r\n            return {\r\n                ...state,\r\n                startDateIndex: action.payload.index\r\n            }\r\n        case 'SET_BINS':\r\n            let binsObj = {};\r\n            binsObj['bins'] =  action.payload.bins;\r\n            binsObj['breaks'] =  action.payload.breaks;\r\n            return {\r\n                ...state,\r\n                bins: binsObj\r\n            }\r\n        case 'SET_3D':\r\n            return {\r\n                ...state,\r\n                use3D: !state.use3D\r\n            }\r\n        case 'SET_DATA_SIDEBAR':\r\n            return {\r\n                ...state,\r\n                sidebarData: action.payload.data\r\n            }\r\n        case 'INCREMENT_DATE':\r\n            let dateObj = {\r\n                ...state.dataParams\r\n            }\r\n            if (action.payload.index+state.dataParams.nIndex > state.dates[state.currentData].length) {\r\n                dateObj.nIndex = state.startDateIndex;\r\n                dateObj.dIndex = state.startDateIndex;\r\n                return {\r\n                    ...state,\r\n                    dataParams:dateObj\r\n                }\r\n            } else {\r\n                dateObj.nIndex = dateObj.nIndex + action.payload.index;\r\n                dateObj.dIndex = dateObj.dIndex + action.payload.index;\r\n                return {\r\n                    ...state,\r\n                    dataParams:dateObj\r\n                }\r\n            }\r\n        case 'SET_VARIABLE_PARAMS':\r\n            let paramObj = {\r\n                ...state.dataParams,\r\n                ...action.payload.params\r\n            }\r\n\r\n            if (paramObj.nType === 'time-series' && paramObj.nIndex === null) {\r\n                paramObj.nIndex = state.storedIndex;\r\n                paramObj.nRange = state.storedRange;\r\n            }\r\n            if (paramObj.dType === 'time-series' && paramObj.dIndex === null) {\r\n                paramObj.dIndex = state.storedIndex;\r\n                paramObj.dRange = state.storedRange;\r\n            }\r\n            if (paramObj.nType === 'characteristic' && state.dataParams.nType === 'time-series') {\r\n                return {\r\n                    ...state,\r\n                    storedIndex: state.dataParams.nIndex,\r\n                    storedRange: state.dataParams.nRange,\r\n                    dataParams: paramObj,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    dataParams: paramObj \r\n                }\r\n            }\r\n        case 'SET_MAP_PARAMS':\r\n            let mapParamObj = {\r\n                ...state.mapParams,\r\n                ...action.payload.params\r\n            }\r\n            return {\r\n                ...state,\r\n                mapParams: mapParamObj \r\n            }\r\n        case 'SET_PANELS':\r\n            let panelsObj = {\r\n                ...state.panelState,\r\n                ...action.payload.params\r\n            }\r\n            return {\r\n                ...state,\r\n                panelState: panelsObj \r\n            }\r\n        case 'SET_VARIABLE_NAME':\r\n            return {\r\n                ...state,\r\n                currentVariable: action.payload.name\r\n            }\r\n        case 'SET_CHART_DATA':\r\n            return {\r\n                ...state,\r\n                chartData: action.payload.data\r\n            }\r\n        case 'SET_ANCHOR_EL':\r\n            return {\r\n                ...state,\r\n                anchorEl: action.payload.anchorEl\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { createStore} from 'redux';\r\nimport reducer from './reducers';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport WebFont from 'webfontloader';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\n\r\nWebFont.load({\r\n  google: {\r\n    families: ['Lato:300,400,700,900', 'Playfair Display:ital', 'sans-serif']\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}