{"version":3,"sources":["actions/index.js","GeodaProxy.js","utils/dataFunction.js","utils/mapFunction.js","utils/getJson.js","utils/getParseCSV.js","utils/mergeData.js","utils/colIndex.js","utils/colLookup.js","utils/findDates.js","utils/getDataForBins.js","utils/getDataForCharts.js","utils/getDataForLisa.js","utils/getCurrentWuuid.js","utils/getLisaValues.js","utils/getVarId.js","utils/getGeoidIndex.js","utils/loadGeojsonToGeoda.js","config/index.js","components/map.js","components/slider.js","components/legend.js","components/dataPanel.js","components/variablePanel.js","components/mainLineChart.js","App.js","constants/defaults.js","reducers/index.js","index.js"],"names":["storeData","data","name","type","payload","storeGeojson","setCurrentData","setColumnNames","setDate","date","setVariableParams","params","setMapParams","window","Module","isInt","n","Number","GeodaProxy","this","geojson_maps","map_uid","file_target","uint8_t_arr","Uint8Array","result","uint8_t_ptr","_malloc","length","HEAPU8","set","ccall","_free","map_type","get_map_type","cc","get_centroids","xx","get_x","yy","get_y","centroids","i","size","push","get","get_num_obs","col_name","get_numeric_col","order","include_lower_order","precision","rook_weights","queen_weights","is_arc","is_mile","min_distance_threshold","k","power","is_inverse","knn_weights","dist_thres","dist_weights","kernel","adaptive_bandwidth","use_kernel_diagonals","kernel_weights","kernel_bandwidth_weights","weight_uid","local_moran","values","local_moran1","toVecDouble","local_g","local_gstar","local_geary","local_joincount","idx","nbrs","get_neighbors","parseVecInt","vi","j","vvi","sub","vd","input","vs","VectorString","push_back","VectorDouble","isNaN","Infinity","sel_fields","bound_var","min_bound","method","col_names","toVecString","clusters_vec","redcap","parseVecVecInt","tabu_length","cool_rate","n_iter","maxp","break_name","sel_field","breaks_vec","custom_breaks1","custom_breaks","breaks","parseVecDouble","orig_breaks","bins","id_array","txt","toFixed","undefined","unshift","NEGATIVE_INFINITY","POSITIVE_INFINITY","v","min_val","max_val","cart","cartogram","x","y","r","get_radius","min_x","max_x","min_y","max_y","scale_x","scale_y","dataFn","numeratorData","numeratorProperty","index","range","denominatorData","denominatorProperty","denominatorIndex","denominatorRange","scale","mapFn","val","colors","url","gda_proxy","a","fetch","then","response","responseFromJson","clone","loadGeojsonToGeoda","json","geoidIndex","getGeoidIndex","features","tempData","getJson","joinCol","accumulate","ok","text","Promise","reject","status","d3","rtn","indexStart","findDates","Object","keys","vals","tempArr","console","log","getParseCSV","mergeData","featureCollection","featureCollectionJoinCol","joinData","joinDataNames","joinDataCol","dataDict","colNumCheck","parseInt","properties","isInteger","cols","merged","merge","colIndex","table","indexOf","colLookup","columns","dataset","property","Date","parse","slice","getDataForBins","tableData","nType","numerProp","numerIndex","numerRange","denomTable","dType","denomProp","denomIndex","denomRange","t0","performance","now","tempIndex","tempDenomIndex","getDataForCharts","startIndex","dates","tempObj","sum","count","getDataForLisa","tempDict","GEOID","getCurrentWuuid","selectedDataset","w","CreateQueenWeights","get_uid","getLisaValues","geoids","all_zeros","clusters","sig","lisa","map_uuid","w_uuid","significances","getVarId","currentData","dataParams","numerator","nIndex","nRange","denominator","dProperty","dIndex","dRange","geoidOrder","indexOrder","arrayBuffer","ReadGeojsonMap","split","colorScales","fixedScales","Math","pow","dataPresets","geojson","csv","joinCols","tableNames","initialViewState","latitude","longitude","zoom","pitch","bearing","DATA_URL","CONTINENTS","process","HoverDiv","styled","div","NavInlineButton","button","props","isActive","viewGlobe","GlobeView","id","controller","resolution","view","MapView","repeat","Map","useState","hoverInfo","setHoverInfo","highlightGeog","setHighlightGeog","globalMap","currLisaData","setCurrLisaData","viewState","setViewState","storedData","useSelector","state","storedGeojson","storedLisaData","mapParams","dispatch","useDispatch","useEffect","Layers","SolidPolygonLayer","opacity","getPolygon","d","stroked","filled","getFillColor","GeoJsonLayer","pickable","wireframe","visible","mapType","use3d","extruded","f","hasOwnProperty","nProperty","colorScale","GetFillColor","getElevation","GetHeight","updateTriggers","onHover","info","onClick","object","getLineColor","lineWidthScale","getLineWidth","lineWidthMinPixels","style","position","left","top","width","height","layers","views","reuseMaps","mapStyle","preventStyleDiffing","mapboxApiAccessToken","right","bottom","zIndex","transitionInterpolator","FlyToInterpolator","transitionDuration","viewBox","transform","positionOptions","enableHighAccuracy","trackUserLocation","onGeolocate","coords","marginBottom","onViewportChange","pointerEvents","NAME","state_name","cases","toLocaleString","deaths","SliderContainer","Grid","DateButton","Button","PlayPauseButton","LineSlider","Slider","RangeSlider","DateSlider","startDateIndex","timerId","setTimerId","customRange","setCustomRange","handleRangeButton","valuetext","value","container","spacing","visibility","item","xs","rate","interval","setInterval","o","clearInterval","handlePlayPause","valueLabelDisplay","onChange","event","newValue","getAriaValueText","valueLabelFormat","aria-labelledby","min","step","max","rIndex","rRange","marginTop","ButtonGroup","orientation","color","aria-label","float","className","Legend","title","map","backgroundColor","padding","labels","splice","cleanBins","label","DataPanelContainer","DataPanel","hidePanel","setHidePanel","sidebarData","parsePredictedDate","list","population","beds","chr_health_factors","chr_health_context","chr_life","predictions","prev","version","VariablePanelContainer","StyledDropDown","FormControl","TwoUp","VariablePanel","columnNames","currentVariable","PresetVariables","CountyVariables","StateVariables","InputLabel","htmlFor","Select","target","ListSubheader","MenuItem","disabled","variable","includes","component","FormLabel","RadioGroup","nBins","FormControlLabel","control","Radio","overlay","resource","href","rel","src","SwitchContainer","MainLineChart","chartData","logChart","setLogChart","margin","dataKey","domain","x1","getStartDate","x2","getEndDate","fill","fillOpacity","isAnimationActive","stroke","dot","Switch","checked","inputProps","App","set_gda_proxy","getColumns","names","loadData","csvs","csvPromises","all","waitForWASM","setTimeout","GetCentroids","getCentroids","setDates","getDates","tempId","fixedScale","nb","binMode","null","binType","INITIAL_STATE","geodaProxy","storedCSV","currDate","currDateIndex","currentMethod","currentOverlay","currentResource","activeGeoid","storedRange","currentGeoid","reducer","action","geoid","obj","geojsonObj","lisaObj","centroidsObj","proxy","datesObj","currentDataFn","fn","colObj","binsObj","use3D","dateObj","paramObj","storedIndex","mapParamObj","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","WebFont","load","google","families","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72abd037.chunk.js","sourcesContent":["let timer = null;\r\n\r\nexport const setGeoid = (geoid) => {\r\n    return {\r\n        type: 'SET_GEOID',\r\n        payload: {\r\n            geoid\r\n        }\r\n    }\r\n}\r\n\r\nexport const storeData = (data, name) => {\r\n    return {\r\n        type: 'SET_STORED_DATA',\r\n        payload: {\r\n            data,\r\n            name\r\n        }   \r\n    }\r\n}\r\n\r\nexport const storeGeojson = (data, name) => {\r\n    return {\r\n        type: 'SET_STORED_GEOJSON',\r\n        payload: {\r\n            data,\r\n            name\r\n        }   \r\n    }\r\n}\r\n\r\nexport const storeLisaValues = (data, name) => {\r\n    return {\r\n        type: 'SET_STORED_LISA_DATA',\r\n        payload: {\r\n            data,\r\n            name\r\n        }   \r\n    }\r\n}\r\n\r\nexport const setCurrentData = (data) => {\r\n    return {\r\n        type: 'SET_CURRENT_DATA',\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport const setGeodaProxy = (proxy) => {\r\n    return {\r\n        type: 'SET_GEODA_PROXY',\r\n        payload: {\r\n            proxy\r\n        }\r\n    }\r\n}\r\n\r\nexport const setCentroids = (data, name) => {\r\n    return {\r\n        type: 'SET_CENTROIDS',\r\n        payload: {\r\n            data,\r\n            name\r\n        }\r\n    }\r\n}\r\n\r\nexport const setDates = (data, name) => {\r\n    return {\r\n        type: 'SET_DATES',\r\n        payload: {\r\n            data,\r\n            name\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const setDataFunction = (fn) => {\r\n    return {\r\n        type: 'SET_DATA_FUNCTION',\r\n        payload: {\r\n            fn\r\n        }\r\n    }\r\n}\r\n\r\nexport const setColumnNames = (data, name) => {\r\n    return {\r\n        type: 'SET_COLUMN_NAMES',\r\n        payload: {\r\n            data,\r\n            name\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const setDate = (date) => {\r\n    return {\r\n        type: 'SET_CURR_DATE',\r\n        payload: {\r\n            date\r\n        }\r\n    }\r\n}\r\n\r\nexport const setDateIndex = (index) => {\r\n    return {\r\n        type: 'SET_DATE_INDEX',\r\n        payload: {\r\n            index\r\n        }\r\n    }\r\n}\r\n\r\nexport const setStartDateIndex = (index) => {\r\n    return {\r\n        type: 'SET_START_DATE_INDEX',\r\n        payload: {\r\n            index\r\n        }\r\n    }\r\n}\r\n\r\nexport const setBins = (bins, breaks) => {\r\n    return {\r\n        type: 'SET_BINS',\r\n        payload: {\r\n            bins,\r\n            breaks\r\n        }\r\n    }\r\n}\r\n\r\nexport const set3D = () => {\r\n    return {\r\n        type: 'SET_3D'\r\n    }\r\n}\r\n\r\nexport const setDataSidebar = ( data ) => {\r\n    return {\r\n        type: 'SET_DATA_SIDEBAR',\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport const incrementDate = ( index ) => {\r\n    return {\r\n        type: 'INCREMENT_DATE',\r\n        payload: {\r\n            index\r\n        }\r\n    }\r\n}\r\n\r\nexport const setVariableParams = ( params ) => {\r\n    return {\r\n        type: 'SET_VARIABLE_PARAMS',\r\n        payload: {\r\n            params\r\n        }\r\n    }\r\n}\r\n\r\nexport const setMapParams = ( params ) => {\r\n    return {\r\n        type: 'SET_MAP_PARAMS',\r\n        payload: {\r\n            params\r\n        }\r\n    }\r\n}\r\n\r\nexport const setChartData = ( data ) => {\r\n    return {\r\n        type: 'SET_CHART_DATA',\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport const setVariableName = ( name ) => {\r\n    return {\r\n        type: 'SET_VARIABLE_NAME',\r\n        payload: {\r\n            name\r\n        }\r\n    }\r\n}","var Module = window.Module;\r\n\r\nfunction isInt(n) {\r\n  return Number(n) === n && n % 1 === 0;\r\n}\r\n\r\nclass GeodaProxy {\r\n  // file_target is evt.target\r\n  constructor() {\r\n    this.geojson_maps = {};\r\n  }\r\n\r\n  ReadGeojsonMap(map_uid, file_target) {\r\n    //evt.target.result is an ArrayBuffer. In js, \r\n    const uint8_t_arr = new Uint8Array(file_target.result);\r\n    //First we need to allocate the wasm memory. \r\n    const uint8_t_ptr = window.Module._malloc(uint8_t_arr.length);\r\n    //Now that we have a block of memory we can copy the file data into that block\r\n    window.Module.HEAPU8.set(uint8_t_arr, uint8_t_ptr);\r\n    // pass the address of the wasm memory we just allocated to our function\r\n    //window.Module.new_geojsonmap(map_uid, uint8_t_ptr, uint8_t_arr.length);\r\n    window.Module.ccall(\"new_geojsonmap1\", null, [\"string\", \"number\", \"number\"], [map_uid, uint8_t_ptr, uint8_t_arr.length]);\r\n\r\n    //Lastly, according to the docs, we should call ._free here.\r\n    window.Module._free(uint8_t_ptr);\r\n    // store the map and map type\r\n    let map_type = window.Module.get_map_type(map_uid);\r\n    this.geojson_maps[map_uid] = map_type;\r\n    return map_uid;\r\n  }\r\n\r\n  Has(map_uid) {\r\n    return map_uid in this.geojson_maps;\r\n  }\r\n\r\n  List() {\r\n    return this.geojson_maps;\r\n  }\r\n\r\n  GetCentroids(map_uid) {\r\n    let cc = window.Module.get_centroids(map_uid);\r\n    let xx = cc.get_x();\r\n    let yy = cc.get_y();\r\n    var centroids = [];\r\n    for (let i = 0; i < xx.size(); ++i) {\r\n      centroids.push([xx.get(i), yy.get(i)]);\r\n    }\r\n    return centroids;\r\n  }\r\n\r\n  GetNumObs(map_uid) {\r\n    let n = window.Module.get_num_obs(map_uid);\r\n    return n;\r\n  }\r\n\r\n  GetMapType(map_uid) {\r\n    return this.geojson_maps[map_uid];\r\n  }\r\n\r\n  GetNumericCol(map_uid, col_name) {\r\n    // return VectorDouble\r\n    return window.Module.get_numeric_col(map_uid, col_name)\r\n  }\r\n\r\n  CreateRookWeights(map_uid, order, include_lower_order, precision) {\r\n    let w_uid = window.Module.rook_weights(map_uid, order, include_lower_order, precision);\r\n    return w_uid;\r\n  }\r\n\r\n  CreateQueenWeights(map_uid, order, include_lower_order, precision) {\r\n    let w_uid = window.Module.queen_weights(map_uid, order, include_lower_order, precision);\r\n    return w_uid;\r\n  }\r\n\r\n  GetMinDistThreshold(map_uid, is_arc, is_mile) {\r\n    let val = window.Module.min_distance_threshold(map_uid, is_arc, is_mile);\r\n    return val;\r\n  }\r\n\r\n  CreateKnnWeights(map_uid, k, power, is_inverse, is_arc, is_mile) {\r\n    let w = window.Module.knn_weights(map_uid, k, power, is_inverse, is_arc, is_mile);\r\n    return w;\r\n  }\r\n\r\n  CreateDistWeights(map_uid, dist_thres, power, is_inverse, is_arc, is_mile) {\r\n    let w = window.Module.dist_weights(map_uid, dist_thres, power, is_inverse, is_arc, is_mile);\r\n    return w;\r\n  }\r\n\r\n  CreateKernelWeights(map_uid, k, kernel, adaptive_bandwidth, use_kernel_diagonals, is_arc, is_mile) {\r\n    let w = window.Module.kernel_weights(map_uid, k, kernel, adaptive_bandwidth, use_kernel_diagonals, is_arc, is_mile);\r\n    return w;\r\n  }\r\n\r\n  CreateKernelBandwidthWeights(map_uid, dist_thres, kernel, use_kernel_diagonals, is_arc, is_mile) {\r\n    let w = window.Module.kernel_bandwidth_weights(map_uid, dist_thres, kernel, use_kernel_diagonals, is_arc, is_mile);\r\n    return w;\r\n  }\r\n\r\n  local_moran(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_moran(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  local_moran1(map_uid, weight_uid, values) {\r\n    return window.Module.local_moran1(map_uid, weight_uid, this.toVecDouble(values));\r\n  }\r\n\r\n  local_g(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_g(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  local_gstar(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_gstar(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  local_geary(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_geary(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  local_joincount(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_joincount(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  GetNeighbors(map_uid, weight_uid, idx) {\r\n    let nbrs = window.Module.get_neighbors(map_uid, weight_uid, idx);\r\n    return this.parseVecInt(nbrs);\r\n  }\r\n\r\n  parseVecInt(vi) {\r\n    let result = [];\r\n    for (let j = 0; j < vi.size(); ++j) {\r\n      result.push(vi.get(j));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  parseVecVecInt(vvi) {\r\n    let result = [];\r\n    for (let i = 0; i < vvi.size(); ++i) {\r\n      let sub = [];\r\n      let vi = vvi.get(i);\r\n      for (let j = 0; j < vi.size(); ++j) {\r\n        sub.push(vi.get(j));\r\n      }\r\n      result.push(sub);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  parseVecDouble(vd) {\r\n    let result = []\r\n    for (let i = 0; i < vd.size(); ++i) {\r\n      result.push(vd.get(i));\r\n    }\r\n    return result;\r\n  }\r\n\r\n\r\n  toVecString(input) {\r\n    let vs = new window.Module.VectorString();\r\n    for (let i = 0; i < input.length; ++i) {\r\n      vs.push_back(input[i]);\r\n    }\r\n    return vs;\r\n  }\r\n\r\n  toVecDouble(input) {\r\n    let vs = new window.Module.VectorDouble();\r\n    for (let i = 0; i < input.length; ++i) {\r\n      if (isNaN(input[i]) || input[i] == Infinity)\r\n        vs.push_back(0);\r\n      else\r\n        vs.push_back(input[i]);\r\n    }\r\n    return vs;\r\n  }\r\n\r\n  redcap(map_uid, weight_uid, k, sel_fields, bound_var, min_bound, method) {\r\n    let col_names = this.toVecString(sel_fields);\r\n    let clusters_vec = window.Module.redcap(map_uid, weight_uid, k, col_names, bound_var, min_bound, method);\r\n    let clusters = this.parseVecVecInt(clusters_vec);\r\n    return clusters;\r\n  }\r\n\r\n  maxp(map_uid, weight_uid, k, sel_fields, bound_var, min_bound, method, tabu_length, cool_rate, n_iter) {\r\n    let col_names = this.toVecString(sel_fields);\r\n    let clusters_vec = window.Module.maxp(map_uid, weight_uid, col_names, bound_var, min_bound, tabu_length, cool_rate, method, k, n_iter);\r\n    let clusters = this.parseVecVecInt(clusters_vec);\r\n    return clusters;\r\n  }\r\n\r\n  custom_breaks(map_uid, break_name, k, sel_field, values) {\r\n    var breaks_vec;\r\n    if (sel_field == null) {\r\n      breaks_vec = window.Module.custom_breaks1(map_uid, k, break_name, this.toVecDouble(values));\r\n    } else {\r\n      breaks_vec = window.Module.custom_breaks(map_uid, k, sel_field, break_name);\r\n    }\r\n    let breaks = this.parseVecDouble(breaks_vec);\r\n    var orig_breaks = breaks;\r\n\r\n    let bins = [];\r\n    let id_array = [];\r\n    for (let i = 0; i < breaks.length; ++i) {\r\n      id_array.push([]);\r\n      let txt = isInt(breaks[i]) ? breaks[i] : breaks[i].toFixed(2);\r\n      bins.push(\"\" + txt);\r\n    }\r\n    id_array.push([]);\r\n    let txt = breaks[breaks.length - 1];\r\n    if (txt != undefined) {\r\n      txt = isInt(txt) ? txt : txt.toFixed(2);\r\n      bins.push(\">\" + txt);\r\n    }\r\n\r\n    breaks.unshift(Number.NEGATIVE_INFINITY);\r\n    breaks.push(Number.POSITIVE_INFINITY);\r\n\r\n    for (let i = 0; i < values.length; ++i) {\r\n      let v = values[i];\r\n      for (let j = 0; j < breaks.length - 1; ++j) {\r\n        let min_val = breaks[j];\r\n        let max_val = breaks[j + 1];\r\n        if (v >= min_val && v < max_val) {\r\n          id_array[j].push(i);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < bins.length; ++i) {\r\n      //bins[i] += \" (\" + id_array[i].length + ')';\r\n    }\r\n\r\n    return {\r\n      'k': k,\r\n      'bins': bins,\r\n      'breaks': orig_breaks,\r\n      'id_array': id_array\r\n    }\r\n  }\r\n\r\n  cartogram(map_uid, values) {\r\n    let cart = window.Module.cartogram(map_uid, this.toVecDouble(values));\r\n    let x = cart.get_x();\r\n    let y = cart.get_y();\r\n    let r = cart.get_radius();\r\n    // rescale x, y [-100,0], [0, 45]\r\n    let min_x = x.get(0);\r\n    let max_x = x.get(0);\r\n    let min_y = y.get(0);\r\n    let max_y = y.get(0);\r\n    for (let i = 0; i < x.size(); ++i) {\r\n      if (min_x > x.get(i)) min_x = x.get(i);\r\n      if (max_x < x.get(i)) max_x = x.get(i);\r\n      if (min_y > y.get(i)) min_y = y.get(i);\r\n      if (max_y < y.get(i)) max_y = y.get(i);\r\n    }\r\n    let scale_x = 100.0 / (max_x - min_x);\r\n    let scale_y = 45.0 / (max_y - min_y);\r\n\r\n\r\n    var result = [];\r\n    for (let i = 0; i < x.size(); ++i) {\r\n      let xx = (x.get(i) - min_x) * scale_x;\r\n      let yy = (y.get(i) - min_y) * scale_y;\r\n      result.push({\r\n        'properties': {\r\n          'id': i\r\n        },\r\n        'position': [x.get(i) / 10000.0, y.get(i) / 10000.0],\r\n        'radius': r.get(i)\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default GeodaProxy","// branchless variant\r\n// const dataFn = (numeratorData, numeratorProperty, index, range, denominatorData, denominatorProperty, denominatorIndex, denominatorRange, scale)  => {\r\n\r\n//     return (\r\n//       (\r\n//         (\r\n//           (\r\n//             (numeratorData[index]||numeratorData[numeratorProperty])\r\n//             -\r\n//             ((range!==null)&&(numeratorData[index-range]))\r\n//           )\r\n          \r\n//           /\r\n//           (range+(range===null))\r\n//         )\r\n//       /\r\n//         (\r\n//           (\r\n//             (\r\n//               (denominatorData[denominatorIndex]||denominatorData[denominatorProperty])\r\n//               -\r\n//               ((denominatorRange!==null)&&(denominatorData[denominatorIndex-denominatorRange]))\r\n//             )\r\n//             /\r\n//             (denominatorRange+(denominatorRange===null))\r\n//           )\r\n//           ||\r\n//             (denominatorData[denominatorProperty])\r\n//           || \r\n//           1\r\n//         )\r\n//       )\r\n//       *\r\n//       scale\r\n//     )\r\n// }\r\n\r\n// export default dataFn;\r\n\r\nconst dataFn = (numeratorData, numeratorProperty, index, range, denominatorData, denominatorProperty, denominatorIndex, denominatorRange, scale)  => {\r\n  if (numeratorData === undefined) {\r\n    return 0;\r\n  } else if (denominatorProperty===null&&range===null){ // whole count or number -- no range, no normalization\r\n    return (numeratorData[numeratorProperty]||numeratorData[index])*scale\r\n  } else if (denominatorProperty===null&&range!==null){ // range number, daily or weekly count -- no normalization\r\n    return (numeratorData[index]-numeratorData[index-range])/range*scale\r\n  } else if (denominatorProperty!==null&&range===null){ // whole count or number normalized -- no range\r\n    return (numeratorData[numeratorProperty]||numeratorData[index])/(denominatorData[denominatorProperty]||denominatorData[denominatorIndex])*scale\r\n  } else if (denominatorProperty!==null&&range!==null&&denominatorRange===null){ // range number, daily or weekly count, normalized to a single value\r\n    return ((numeratorData[index]-numeratorData[index-range])/range)/(denominatorData[denominatorProperty]||denominatorData[denominatorIndex])*scale\r\n  } else if (denominatorProperty!==null&&range!==null&&denominatorRange!==null){ // range number, daily or weekly count, normalized to a range number, daily or weekly count\r\n    return ((numeratorData[index]-numeratorData[index-range])/range)/((denominatorData[denominatorIndex]-denominatorData[denominatorIndex-denominatorRange])/denominatorRange)*scale\r\n  } else {      \r\n    return 0;\r\n  }\r\n}\r\n\r\nexport default dataFn;","const mapFn = (val, bins, colors) => {\r\n    if (val == 0) return colors[0];\r\n    for (let i=1; i<bins.length; i++) {\r\n      if (val < bins[i]) {\r\n        return colors[i]\r\n      }\r\n    }\r\n    return colors[0];\r\n}\r\n\r\nexport default mapFn","import { loadGeojsonToGeoda, getGeoidIndex } from '../utils';\r\n\r\nasync function getJson(url, gda_proxy){\r\n    const tempData = await fetch(url)\r\n      .then(response => {\r\n        const responseFromJson = response.clone();        \r\n        loadGeojsonToGeoda(responseFromJson, url, gda_proxy);\r\n        return response.json();\r\n      }).then(data => {\r\n        return {\r\n          data: data,\r\n          geoidIndex: getGeoidIndex(data.features)\r\n        }\r\n      });        \r\n    return tempData;\r\n}\r\nexport default getJson;","import * as d3 from 'd3-dsv';\r\nimport { findDates } from '../utils';\r\n\r\nasync function getParseCSV(url, joinCol, accumulate){\r\n    const tempData = await fetch(url)\r\n      .then(response => {\r\n        return response.ok ? response.text() : Promise.reject(response.status);\r\n      }).then(text => {\r\n        let data = d3.csvParse(text, d3.autoType)\r\n        let rtn = {};\r\n        let n = data.length;\r\n\r\n        if (accumulate) {\r\n          let indexStart = findDates(Object.keys(data[0]))[1]\r\n          while (n>0){\r\n            n--;\r\n            let vals = Object.values(data[n])\r\n            let tempArr = [];\r\n            let i = indexStart;\r\n            let j = 0;\r\n            while (i<vals.length) {\r\n              if (i===indexStart) {\r\n                tempArr.push(vals[i])\r\n              } else {\r\n                tempArr.push(vals[i]+tempArr[j])\r\n                j++;\r\n              }\r\n              i++;\r\n            }\r\n            for (let i = 0; i < indexStart; i++) {\r\n              tempArr.unshift(vals[i])\r\n            }\r\n            rtn[data[n][joinCol]] = tempArr\r\n          }\r\n        } else {\r\n          while (n>0){\r\n            n--;\r\n            rtn[data[n][joinCol]] = Object.values(data[n])\r\n          }\r\n        }\r\n        console.log(rtn)\r\n        return [rtn, Object.keys(data[0])]\r\n      });\r\n    return tempData;\r\n}\r\n\r\nexport default getParseCSV","import { merge } from 'lodash';\r\n\r\nconst mergeData = (featureCollection, featureCollectionJoinCol, joinData, joinDataNames, joinDataCol) => {\r\n    // declare parent dictionaries\r\n    let features = {}\r\n    let dataDict = {}\r\n\r\n    let baseColumnLength = Object.keys(featureCollection.features[0]).length;\r\n\r\n    // declare and prep feature collection object\r\n    let i = featureCollection.features.length;\r\n    let colNumCheck = parseInt(featureCollection.features[0].properties[featureCollectionJoinCol])\r\n    if (Number.isInteger(colNumCheck)) {\r\n      while (i>0) {\r\n        i--;\r\n        features[parseInt(featureCollection.features[i].properties[featureCollectionJoinCol])] = featureCollection.features[i];\r\n        dataDict[parseInt(featureCollection.features[i].properties[featureCollectionJoinCol])] = {};\r\n      }\r\n    } else {\r\n      while (i>0) {\r\n        i--;\r\n        features[featureCollection.features[i].properties[featureCollectionJoinCol]] = featureCollection.features[i];\r\n        dataDict[featureCollection.features[i].properties[featureCollectionJoinCol]] = {};\r\n      }\r\n    }\r\n  \r\n    // // declare data objects\r\n    // for (let n=0; n < joinDataNames.length; n++) {\r\n    //   dataDict[`${joinDataNames[n]}`] = {}\r\n    // }\r\n  \r\n    // loop through data and add to dictionaries\r\n    let n = joinData.length;\r\n    while (n>0) {\r\n      n--;\r\n      let cols = Object.keys(joinData[n][0]);\r\n      i = cols.length;\r\n      while (i>0) {\r\n        i--;\r\n        try {\r\n          dataDict[cols[i]][joinDataNames[n]] = joinData[n][0][cols[i]]\r\n        } catch {}\r\n      }\r\n    }\r\n    \r\n    // // use lodash to merge data\r\n    let merged = merge(features, dataDict)\r\n    // for (let n=1; n < joinDataNames.length; n++){\r\n    //   merged = merge(merged, dataDict[joinDataNames[n]])\r\n    // }\r\n    \r\n    // clean data\r\n    let rtn = [];\r\n    let keys = Object.keys(merged)\r\n    \r\n    for (let i = 0; i < keys.length; i++) {\r\n      // if (Object.keys(merged[keys[i]]).length == (joinDataNames.length+baseColumnLength)) rtn.push(merged[keys[i]])\r\n      rtn.push(merged[keys[i]])\r\n    }\r\n\r\n    return rtn;\r\n}\r\n\r\nexport default mergeData;","const colIndex = (data, table, date) => {\r\n    return data[table].indexOf(date);\r\n}\r\n\r\nexport default colIndex","const colLookup = (columns, dataset, table, property) => {\r\n    try {\r\n        return columns[dataset][table].indexOf(property); \r\n    } catch {\r\n        return null;\r\n    }\r\n}\r\nexport default colLookup;","const findDates = (data) => {\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (Date.parse(data[i])) return [data.slice(i,),i]\r\n    }\r\n    return;\r\n}\r\n\r\nexport default findDates","import dataFn from './dataFunction';\r\n\r\n// this function loops through the current data set and provides data for GeodaJS to create custom breaks \r\nconst getDataForBins = (tableData, table, nType, numerProp, numerIndex, numerRange, denomTable, dType, denomProp, denomIndex, denomRange, scale) => {\r\n    let t0 = performance.now() // logging performance\r\n\r\n    // declare empty array for return variables\r\n    let rtn = [];\r\n\r\n    // length of data table to loop through\r\n    let n = tableData.length;\r\n\r\n    // this checks if the bins generated should be dynamic (generating for each date) or fixed (to the most recent date)\r\n    if (numerIndex === null && numerProp === null) {\r\n        // if fixed, get the most recent date\r\n        let tempIndex = tableData[0][table].length-1;\r\n        \r\n        // if the denominator is time series data (eg. deaths / cases this week), make the indices the same (most recent)\r\n        let tempDenomIndex = dType === 'time-series' ? tableData[0][denomTable].length-1 : denomIndex;\r\n\r\n        // loop through, do appropriate calculation. add returned value to rtn array\r\n        while (n>0) {\r\n            n--;\r\n            rtn.unshift(dataFn(tableData[n][table], numerProp, tempIndex, numerRange, tableData[n][denomTable], denomProp, tempDenomIndex, denomRange, scale))\r\n        }\r\n    } else {\r\n       while (n>0) {\r\n            n--;\r\n            rtn.unshift(dataFn(tableData[n][table], numerProp, numerIndex, numerRange, tableData[n][denomTable], denomProp, denomIndex, denomRange, scale))\r\n        }\r\n    }\r\n\r\n    console.log(performance.now() - t0);\r\n\r\n    return rtn;   \r\n}\r\nexport default getDataForBins","import dataFn from './dataFunction';\r\n\r\nconst getDataForCharts = (data, table, startIndex, dates) => {\r\n    let t0 = performance.now()\r\n    let features = Object.keys(data);\r\n    let n = startIndex;\r\n    let rtn = []\r\n\r\n    while (n<data[features[0]][table].length) {\r\n        let tempObj = {};\r\n        let sum = 0;\r\n        let i = 0;\r\n\r\n        while (i<features.length) {\r\n            if (data[features[i]][table]!== undefined) sum += data[features[i]][table][n]\r\n            // tempObj[`n${i}`] = data[features[i]][table][n]\r\n            i++;\r\n        }\r\n        tempObj.count = sum\r\n        tempObj.date = dates[n-startIndex]\r\n        rtn.push(tempObj);\r\n        n++;\r\n    }\r\n    \r\n    console.log(performance.now() - t0);\r\n    return rtn;\r\n\r\n}\r\n\r\nexport default getDataForCharts","import dataFn from './dataFunction';\r\n\r\n// this function loops through the current data set and provides data for GeodaJS to create custom breaks \r\nconst getDataForLisa = (tableData, table, nType, numerProp, numerIndex, numerRange, denomTable, dType, denomProp, denomIndex, denomRange, scale, order) => {\r\n    let t0 = performance.now() // logging performance\r\n\r\n    // declare empty array for return variables\r\n    let tempDict = {};\r\n\r\n    // length of data table to loop through\r\n    let n = tableData.length;\r\n\r\n    // this checks if the bins generated should be dynamic (generating for each date) or fixed (to the most recent date)\r\n    if (numerIndex === null && numerProp === null) {\r\n        // if fixed, get the most recent date\r\n        let tempIndex = tableData[0][table].length-1;\r\n        \r\n        // if the denominator is time series data (eg. deaths / cases this week), make the indices the same (most recent)\r\n        let tempDenomIndex = dType === 'time-series' ? tableData[0][denomTable].length-1 : denomIndex;\r\n\r\n        // loop through, do appropriate calculation. add returned value to rtn array\r\n        while (n>0) {\r\n            n--;\r\n            tempDict[tableData[n].properties.GEOID] = dataFn(tableData[n][table], numerProp, tempIndex, numerRange, tableData[n][denomTable], denomProp, tempDenomIndex, denomRange, scale)\r\n        }\r\n    } else {\r\n       while (n>0) {\r\n            n--;\r\n            tempDict[tableData[n].properties.GEOID] = dataFn(tableData[n][table], numerProp, numerIndex, numerRange, tableData[n][denomTable], denomProp, denomIndex, denomRange, scale)\r\n        }\r\n    }\r\n    \r\n    let rtn = [];\r\n\r\n    n = 0;\r\n    let keys = Object.keys(order)\r\n    while (n<keys.length) {\r\n        rtn.push(tempDict[order[keys[n]]]);\r\n        n++;\r\n    }\r\n\r\n    console.log(performance.now() - t0);\r\n\r\n    return rtn;\r\n    \r\n}\r\nexport default getDataForLisa","const getCurrentWuuid = (gda_proxy, selectedDataset) => {\r\n    var w = gda_proxy.CreateQueenWeights(selectedDataset, 1, 0, 0);\r\n\r\n    return {\r\n      'map_uuid': selectedDataset,\r\n      'w': w,\r\n      'w_uuid': w.get_uid()\r\n    };\r\n}\r\n\r\nexport default getCurrentWuuid","import getCurrentWuuid from './getCurrentWuuid.js';\r\n\r\nconst getLisaValues = (gda_proxy, dataset, data, geoids) => {\r\n  let w = getCurrentWuuid(gda_proxy, dataset);\r\n  let all_zeros = true;\r\n  for (let i=0; i<data.length; ++i) { \r\n    if (data[i] != 0)\r\n      all_zeros = false;\r\n  }\r\n  let clusters = [];\r\n  let sig = [];\r\n\r\n  if (all_zeros) {\r\n    for (let i=0; i<data.length; ++i) { \r\n      clusters.push(0);\r\n      sig.push(0);\r\n    }\r\n  } else {\r\n    var lisa = gda_proxy.local_moran1(w.map_uuid, w.w_uuid, data);\r\n    clusters = gda_proxy.parseVecDouble(lisa.clusters());\r\n    sig = gda_proxy.parseVecDouble(lisa.significances());\r\n  }\r\n  \r\n  return clusters;\r\n}\r\n\r\nexport default getLisaValues;","const getVarId = (currentData, dataParams) => {\r\n    return `${currentData}-${dataParams.numerator}-${dataParams.nIndex}-${dataParams.nRange}-${dataParams.denominator}-${dataParams.dProperty}-${dataParams.dIndex}-${dataParams.dRange}-${dataParams.scale}`\r\n}\r\n\r\nexport default getVarId;","const getGeoidIndex = (features) => {\r\n    let geoidOrder = {};\r\n    let indexOrder = {};\r\n    let i = 0\r\n    while (i<features.length) {\r\n        geoidOrder[features[i].properties.GEOID] = i\r\n        indexOrder[i] = features[i].properties.GEOID\r\n        i++;\r\n    }\r\n\r\n    return {geoidOrder, indexOrder};\r\n}\r\nexport default getGeoidIndex","const loadGeojsonToGeoda = async (data, url, gda_proxy) => {\r\n  const arrayBuffer = await data.arrayBuffer();\r\n\r\n  gda_proxy.ReadGeojsonMap(url.split('/').slice(-1,)[0], {\r\n      result: arrayBuffer,\r\n  });\r\n}\r\n\r\nexport default loadGeojsonToGeoda;","export const colorScales = {\r\n    'natural_breaks': [\r\n        [240,240,240],\r\n        [255,255,204],\r\n        [255,237,160],\r\n        [254,217,118],\r\n        [254,178,76],\r\n        [253,141,60],\r\n        [252,78,42],\r\n        [227,26,28],\r\n        [177,0,38],\r\n    ],\r\n    'lisa': [\r\n        [255,255,255],\r\n        [255,0,0],\r\n        [0,0,255],\r\n        [167, 173, 249],\r\n        [244, 173, 168],\r\n        [70, 70, 70],\r\n        [153, 153, 153]\r\n    ],\r\n    'hinge15_breaks': [\r\n        [1, 102, 94],\r\n        [90, 180, 172],\r\n        [199, 234, 229],\r\n        [246, 232, 195],\r\n        [216, 179, 101],\r\n        [140, 81, 10],\r\n    ],    \r\n    'uninsured':[\r\n        [240,240,240],\r\n        [247,252,253],\r\n        [224,236,244],\r\n        [191,211,230],\r\n        [158,188,218],\r\n        [140,150,198],\r\n        [140,107,177],\r\n        [136,65,157],\r\n        [129,15,124],\r\n        // [77,0,75],\r\n      ],\r\n    'over65':[\r\n        [240,240,240],\r\n        [247,252,240],\r\n        [224,243,219],\r\n        [204,235,197],\r\n        [168,221,181],\r\n        [123,204,196],\r\n        [78,179,211],\r\n        [43,140,190],\r\n        [8,104,172],\r\n        // [8,64,129],\r\n    ],\r\n    'lifeExp':[\r\n        [240,240,240],\r\n        [247,252,240],\r\n        [224,243,219],\r\n        [204,235,197],\r\n        [168,221,181],\r\n        [123,204,196],\r\n        [78,179,211],\r\n        [43,140,190],\r\n        [8,104,172],\r\n        // [8,64,129],\r\n    ],\r\n    'forecasting': [\r\n        [240, 240, 240],\r\n        [254,232,200],\r\n        [253,187,132],\r\n        [227,74,51],\r\n    ],\r\n    'testings' : [\r\n        [240,240,240],\r\n        [13,8,135],\r\n        [92,1,166],\r\n        [156,23,158],\r\n        [203,70,121],\r\n        [237,121,83],\r\n        [253,180,47],\r\n        [240,249,33],\r\n      ],\r\n      'testingCap':[\r\n        [240,240,240],\r\n        [247,251,255],\r\n        [222,235,247],\r\n        [198,219,239],\r\n        [158,202,225],\r\n        [107,174,214],\r\n        [66,146,198],\r\n        [33,113,181],\r\n        [8,81,156],\r\n        [8,48,107],\r\n      ],\r\n}\r\n\r\nexport const fixedScales = {\r\n    'testing': {\r\n        bins: ['No Data','<3%','5%','10%','15%','20%','>25%'],\r\n        breaks:[0,3,5,10,15,20,25,Math.pow(10, 12)]\r\n    },\r\n    'testingCap': {\r\n        bins: ['No Data','<50','100','150','200','250','300','350','>400'],\r\n        breaks:[0,50,100,150,200,250,300,350,400,Math.pow(10, 12)]\r\n    },\r\n    'lisa':{\r\n        bins: [\"Not significant\", \"High-High\", \"Low-Low\", \"Low-High\", \"High-Low\", \"Undefined\", \"Isolated\"]\r\n    }\r\n}\r\n\r\nexport const dataPresets = {\r\n    'county_usfacts.geojson': {\r\n        geojson: 'county_usfacts.geojson', \r\n        csv: ['covid_confirmed_usafacts','covid_deaths_usafacts', 'berkeley_predictions', 'chr_health_context', 'chr_life', 'chr_health_factors'], \r\n        joinCols: ['GEOID', 'FIPS'], \r\n        tableNames: ['cases','deaths', 'predictions', 'chr_health_context', 'chr_life', 'chr_health_factors'],\r\n        accumulate: []\r\n    },\r\n    'county_1p3a.geojson': {\r\n        geojson: 'county_1p3a.geojson', \r\n        csv: ['covid_confirmed_1p3a','covid_deaths_1p3a', 'berkeley_predictions', 'chr_health_context', 'chr_life', 'chr_health_factors'], \r\n        joinCols: ['GEOID', 'FIPS'], \r\n        tableNames: ['cases','deaths', 'predictions', 'chr_health_context', 'chr_life', 'chr_health_factors'],\r\n        accumulate: ['covid_confirmed_1p3a','covid_deaths_1p3a']\r\n    },\r\n    'county_nyt.geojson': {\r\n        geojson: 'county_nyt.geojson', \r\n        csv: ['covid_confirmed_nyt', 'covid_deaths_nyt', 'berkeley_predictions', 'chr_health_context', 'chr_life', 'chr_health_factors'], \r\n        joinCols: ['GEOID', 'FIPS'], \r\n        tableNames: ['cases', 'deaths', 'predictions', 'chr_health_context', 'chr_life', 'chr_health_factors'],\r\n        accumulate: []\r\n    },\r\n    'state_1p3a.geojson': {\r\n        geojson: 'state_1p3a.geojson', \r\n        csv: ['covid_confirmed_1p3a_state','covid_deaths_1p3a_state', 'chr_health_context_state', 'chr_life_state', 'chr_health_factors_state', 'covid_testing_1p3a_state', 'covid_wk_pos_1p3a_state', 'covid_tcap_1p3a_state', 'covid_ccpt_1p3a_state'], \r\n        joinCols: ['GEOID', 'FIPS'], \r\n        tableNames: ['cases', 'deaths', 'chr_health_context', 'chr_life', 'chr_health_factors', 'testing', 'testing_wk_pos', 'testing_tcap', 'testing_ccpt'],\r\n        accumulate: ['covid_confirmed_1p3a_state','covid_deaths_1p3a_state']\r\n    } \r\n}","import React, { useState, useEffect } from 'react';\r\nimport DeckGL from '@deck.gl/react';\r\nimport {MapView, _GlobeView as GlobeView, FlyToInterpolator} from '@deck.gl/core';\r\nimport ReactMapGL, {NavigationControl, GeolocateControl} from 'react-map-gl';\r\nimport { GeoJsonLayer, PolygonLayer, SolidPolygonLayer } from '@deck.gl/layers';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setDataSidebar, setMapParams } from '../actions';\r\nimport { mapFn, dataFn, getVarId } from '../utils';\r\nimport { colorScales } from '../config';\r\nimport styled from 'styled-components';\r\n\r\nconst MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoibGl4dW45MTAiLCJhIjoiY2locXMxcWFqMDAwenQ0bTFhaTZmbnRwaiJ9.VRNeNnyb96Eo-CorkJmIqg';\r\n\r\nconst initialViewState = {\r\n    latitude: 35.850033,\r\n    longitude: -105.6500523,\r\n    zoom: 3.5,\r\n    pitch:0,\r\n    bearing:0\r\n};\r\n\r\nconst DATA_URL = {\r\n    CONTINENTS: `${process.env.PUBLIC_URL}/geojson/world50m.json`\r\n};\r\n\r\nconst HoverDiv = styled.div`\r\n    background:#2b2b2b;\r\n    padding:20px;\r\n    color:white;\r\n    box-shadow: 0px 0px 5px rgba(0,0,0,0.7);\r\n    border-radius:0.5vh 0.5vh 0 0;\r\n    h3 {\r\n        margin:2px 0;\r\n    }\r\n`;\r\n\r\nconst NavInlineButton = styled.button`\r\n    width:29px;\r\n    height:29px;\r\n    padding:5px;\r\n    margin-bottom:10px;\r\n    display:block;\r\n    background-color: ${props => props.isActive ? 'yellow' : '#f5f5f5'};\r\n    -moz-box-shadow: 0 0 2px rgba(0,0,0,.1);\r\n    -webkit-box-shadow: 0 0 2px rgba(0,0,0,.1);\r\n    box-shadow: 0 0 0 2px rgba(0,0,0,.1);\r\n    border-radius: 4px;\r\n    outline:none;\r\n    border:none;\r\n    transition:250ms all;\r\n`\r\n\r\nconst viewGlobe = new GlobeView({id: 'globe', controller: false, resolution:1});\r\nconst view = new MapView({repeat: true});\r\n\r\nconst Map = () => { \r\n    \r\n    const [hoverInfo, setHoverInfo] = useState(false);\r\n    const [highlightGeog, setHighlightGeog] = useState(false);\r\n    const [globalMap, setGlobalMap] = useState(false);\r\n    const [currLisaData, setCurrLisaData] = useState({})\r\n    const [viewState, setViewState] = useState(initialViewState)\r\n\r\n    const storedData = useSelector(state => state.storedData);\r\n    const storedGeojson = useSelector(state => state.storedGeojson);\r\n    const currentData = useSelector(state => state.currentData);\r\n    const storedLisaData = useSelector(state => state.storedLisaData);\r\n    \r\n    const dataParams = useSelector(state => state.dataParams);\r\n    const mapParams = useSelector(state => state.mapParams);\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        let tempData = storedLisaData[getVarId(currentData, dataParams)]\r\n        if (tempData !== undefined) setCurrLisaData(tempData);\r\n    }, [storedLisaData, dataParams, mapParams])\r\n\r\n    const GetFillColor = (f, bins, mapType) => {\r\n        if (!bins.hasOwnProperty(\"bins\")) {\r\n            return [0,0,0]\r\n        } else if (mapType === 'lisa') {\r\n            return colorScales.lisa[currLisaData[storedGeojson[currentData]['geoidOrder'][f.properties.GEOID]]]\r\n        } else {\r\n            return mapFn(dataFn(f[dataParams.numerator], dataParams.nProperty, dataParams.nIndex, dataParams.nRange, f[dataParams.denominator], dataParams.dProperty, dataParams.dIndex, dataParams.dRange, dataParams.scale), bins.breaks, mapParams.colorScale) \r\n        }\r\n    }\r\n    \r\n    const GetHeight = (f, bins) => bins.hasOwnProperty(\"bins\") ? dataFn(f[dataParams.numerator], dataParams.nProperty, dataParams.nIndex, dataParams.nRange, f[dataParams.denominator], dataParams.dProperty, dataParams.dIndex, dataParams.dRange, dataParams.scale)*1000 : 0\r\n    \r\n    const handle3dButton = (using3d) => {\r\n        if (using3d) {\r\n            dispatch(setMapParams({use3d: false}))\r\n            setViewState(view => ({\r\n                ...view,\r\n                bearing:0,\r\n                pitch:0,\r\n                transitionInterpolator: new FlyToInterpolator(),\r\n                transitionDuration: 250,\r\n            }))\r\n        } else {\r\n            dispatch(setMapParams({use3d: true}))\r\n            setViewState(view => ({\r\n                ...view,\r\n                bearing:-30,\r\n                pitch:45,\r\n                transitionInterpolator: new FlyToInterpolator(),\r\n                transitionDuration: 250,\r\n            }))\r\n        }\r\n    }\r\n\r\n    const Layers = [\r\n        new SolidPolygonLayer({\r\n            id: 'background',\r\n            data: [\r\n                // prettier-ignore\r\n                [[-180, 90], [0, 90], [180, 90], [180, -90], [0, -90], [-180, -90]]\r\n            ],\r\n            opacity: 1,\r\n            getPolygon: d => d,\r\n            stroked: false,\r\n            filled: true,\r\n            getFillColor: [10,10,10],\r\n        }),\r\n        new GeoJsonLayer({\r\n            id: 'base continents',\r\n            data: DATA_URL.CONTINENTS,\r\n            pickable: false,\r\n            stroked: false,\r\n            filled: true,\r\n            wireframe: false,\r\n            getFillColor: [30,30,30]\r\n        }),\r\n        new GeoJsonLayer({\r\n            id: 'choropleth',\r\n            data: {\r\n                \"type\": \"FeatureCollection\",\r\n                \"name\": currentData,\r\n                \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\r\n                \"features\": storedData[currentData] ? storedData[currentData] : [],\r\n            },\r\n            visible: mapParams.mapType !== 'cartogram',\r\n            pickable: true,\r\n            stroked: false,\r\n            filled: true,\r\n            wireframe: mapParams.use3d,\r\n            extruded: mapParams.use3d,\r\n            opacity: mapParams.use3d ? 1 : 0.5,\r\n            getFillColor: f => GetFillColor(f, mapParams.bins, mapParams.mapType),\r\n            getElevation: f => GetHeight(f, mapParams.bins, mapParams.mapType),\r\n            updateTriggers: {\r\n                data: currentData,\r\n                getFillColor: [dataParams, mapParams],\r\n                getElevation: [dataParams, mapParams],\r\n            },\r\n            onHover: info => {\r\n                try {\r\n                    console.log(info)\r\n                    setHoverInfo(info)\r\n                } catch {\r\n                    setHoverInfo(null)\r\n                }\r\n            },\r\n            onClick: info => {\r\n                try {\r\n                    dispatch(setDataSidebar(info.object));\r\n                    setHighlightGeog(info.object.properties.GEOID);\r\n                } catch {}\r\n\r\n            }\r\n        }),\r\n        new GeoJsonLayer({\r\n            id: 'highlightLayer',\r\n            data: {\r\n                \"type\": \"FeatureCollection\",\r\n                \"name\": currentData,\r\n                \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\r\n                \"features\": storedData[currentData] ? storedData[currentData] : [],\r\n            },\r\n            pickable: false,\r\n            stroked: true,\r\n            filled:false,\r\n            getLineColor: f => (highlightGeog === f.properties.GEOID ? [255,255,255] : [255,255,255,0]), \r\n            lineWidthScale: 10,\r\n            getLineWidth: 1,\r\n            lineWidthMinPixels: 2,\r\n            updateTriggers: {\r\n                data: currentData,\r\n                getLineColor: highlightGeog,\r\n            },\r\n        }),\r\n    ]\r\n\r\n    return (\r\n        <div id=\"mapContainer\" style={{position:'fixed',left:0,top:0,width:'100%',height:'100%'}}>\r\n            <DeckGL\r\n            initialViewState={viewState}\r\n            controller={true}\r\n            layers={Layers}\r\n            views={globalMap ? viewGlobe : view} //enable this for globe view\r\n            >\r\n                <ReactMapGL\r\n                    reuseMaps\r\n                    mapStyle={globalMap ? 'mapbox://styles/lixun910/ckhtcdx4b0xyc19qzlt4b5c0d' : 'mapbox://styles/lixun910/ckhkoo8ix29s119ruodgwfxec'}\r\n                    preventStyleDiffing={true}\r\n                    mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\r\n                    >\r\n                        \r\n                    <div style={{position: 'absolute', right: 10, bottom: 30, zIndex: 10}}>\r\n                        {/* <NavInlineButton\r\n                            onClick={() => setGlobalMap(prev => !prev)}\r\n                            isActive={globalMap}\r\n                        >\r\n                            <svg  x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" >\r\n                                <g transform=\"translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)\">\r\n                                    <g>\r\n                                        <path d=\"M50-21c-39.2,0-71,31.9-71,71c0,39.2,31.9,71,71,71c39.2,0,71-31.9,71-71C121,10.8,89.2-21,50-21z M50-10.9\r\n                                            c1.7,0,3.7,0.9,6.1,3.5c2.4,2.7,4.9,7,7.1,12.5c2.1,5.4,3.8,12.1,5.1,19.4H31.7c1.2-7.4,3-14,5.1-19.4c2.1-5.6,4.7-9.9,7.1-12.5\r\n                                            C46.3-10,48.3-10.9,50-10.9z M32-8.2c-1.7,2.9-3.3,6.1-4.7,9.7c-2.6,6.7-4.6,14.5-5.9,23.1H-5.3C1.8,9,15.4-3.1,32-8.2z M68-8.2\r\n                                            C84.6-3.1,98.2,9,105.3,24.6H78.6C77.2,16,75.2,8.2,72.7,1.5C71.3-2.1,69.7-5.3,68-8.2z M-8.9,34.8h29.1c-0.4,4.9-0.7,10-0.7,15.2\r\n                                            c0,5.2,0.2,10.3,0.7,15.2H-8.9c-1.3-4.9-2-10-2-15.2C-10.9,44.7-10.2,39.6-8.9,34.8z M30.5,34.8h39c0.5,4.9,0.8,9.9,0.8,15.2\r\n                                            c0,5.3-0.3,10.3-0.8,15.2h-39c-0.5-4.9-0.8-9.9-0.8-15.2C29.7,44.7,30,39.7,30.5,34.8z M79.8,34.8h29.1c1.3,4.9,2,10,2,15.2\r\n                                            c0,5.3-0.7,10.4-2,15.2H79.8c0.4-4.9,0.7-10,0.7-15.2C80.4,44.8,80.2,39.7,79.8,34.8z M-5.3,75.4h26.8c1.3,8.6,3.3,16.4,5.9,23.1\r\n                                            c1.4,3.6,2.9,6.8,4.7,9.7C15.4,103.1,1.8,91-5.3,75.4z M31.7,75.4h36.5c-1.2,7.4-3,14-5.1,19.5c-2.1,5.6-4.7,9.9-7.1,12.5\r\n                                            c-2.4,2.7-4.4,3.5-6.1,3.5s-3.7-0.9-6.1-3.5c-2.4-2.7-4.9-7-7.1-12.5C34.7,89.4,33,82.8,31.7,75.4z M78.6,75.4h26.8\r\n                                            C98.2,91,84.6,103.1,68,108.2c1.7-2.9,3.3-6.1,4.7-9.7C75.2,91.8,77.2,84,78.6,75.4z\"/>\r\n                                    </g>\r\n                                </g>\r\n                            </svg>\r\n                        </NavInlineButton> */}\r\n                        <NavInlineButton\r\n                            onClick={() => handle3dButton(mapParams.use3d)}\r\n                            isActive={mapParams.use3d}\r\n                        >\r\n                            <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\r\n                                <g transform=\"translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)\">\r\n                                    <path d=\"M109,23.7c0-1-0.2-1.9-0.7-2.8c-0.1-0.2-0.3-0.4-0.5-0.7c-0.4-0.6-0.8-1.1-1.3-1.5l0,0L54.1-20.5c-2.3-1.7-5.5-1.7-7.9,0\r\n                                        L-6.2,18.8l0,0c-0.5,0.4-1,0.9-1.3,1.5C-7.7,20.5-7.8,20.7-8,21c-0.6,0.8-0.9,1.8-1,2.8v52.5c0,0,0,0,0,0.5c0.2,1.7,1,3.3,2.2,4.5\r\n                                        v0.3l52.5,39.3l0.9,0.5l0.7,0.4c1.5,0.6,3.2,0.6,4.7,0l0.7-0.4l0.9-0.5l52.5-39.3v-0.3c1.3-1.2,2.1-2.8,2.2-4.5c0,0,0,0,0-0.5\r\n                                        L109,23.7z M4.1,36.8l39.3,29.5v36.1L4.1,72.9V36.8z M56.6,66.3l39.3-29.5v36.1l-39.3,29.5V66.3z M50-7.4l41.5,31.1L50,54.9\r\n                                        L8.5,23.7L50-7.4z\"/>\r\n                                </g>\r\n                            </svg>\r\n                        </NavInlineButton>\r\n                        <GeolocateControl\r\n                            positionOptions={{enableHighAccuracy: true}}\r\n                            trackUserLocation={true}\r\n                            onGeolocate={viewState => console.log(viewState.coords.latitude)}\r\n                            style={{marginBottom: 10}}\r\n                        />\r\n                        <NavigationControl\r\n                            onViewportChange={viewState  => setViewState(viewState)} \r\n                        />\r\n                    </div>\r\n                    <div></div>\r\n                </ReactMapGL >\r\n                {hoverInfo.object && (\r\n                <HoverDiv style={{position: 'absolute', zIndex: 1, pointerEvents: 'none', left: hoverInfo.x, top: hoverInfo.y}}>\r\n                    {hoverInfo.object.properties && <h3>{`${hoverInfo.object.properties.NAME}`} {hoverInfo.object.properties.state_name!==undefined && `, ${hoverInfo.object.properties.state_name}`}</h3>}\r\n                    {hoverInfo.object.cases && (\r\n                        <div>\r\n                            Cases: {hoverInfo.object.cases.slice(-1,)[0].toLocaleString('en')}<br/>\r\n                            Deaths: {hoverInfo.object.deaths.slice(-1,)[0].toLocaleString('en')}<br/>\r\n                            New Cases: {(hoverInfo.object.cases.slice(-1,)[0]-hoverInfo.object.cases.slice(-2,-1)[0]).toLocaleString('en')}<br/>\r\n                            New Deaths: {(hoverInfo.object.deaths.slice(-1,)[0]-hoverInfo.object.deaths.slice(-2,-1)[0]).toLocaleString('en')}<br/>\r\n                        </div>\r\n                        )\r\n                    }\r\n                    {/* {hoverInfo.object.testing && (\r\n                        <div>\r\n                            Total Testing: {hoverInfo.object.cases.slice(-1,)[0].toLocaleString('en')}<br/>\r\n                            7 Day Positivity Rate: {hoverInfo.object.deaths.slice(-1,)[0].toLocaleString('en')}<br/>\r\n                            7 Day Confirmed Cases per Testing: {(hoverInfo.object.cases.slice(-1,)[0]-hoverInfo.object.cases.slice(-2,-1)[0]).toLocaleString('en')}<br/>\r\n                            Testing Criteria: {(hoverInfo.object.deaths.slice(-1,)[0]-hoverInfo.object.deaths.slice(-2,-1)[0]).toLocaleString('en')}<br/>\r\n                        </div>\r\n                        )\r\n                    } */}\r\n                </HoverDiv>\r\n                )}\r\n            </DeckGL>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default Map","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport styled from 'styled-components';\r\n\r\nimport { setDate, setVariableParams, incrementDate } from '../actions';\r\n// import { getParseCSV, getJson, mergeData, colIndex, getDataForBins } from './utils';\r\n\r\nconst SliderContainer = styled(Grid)`\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 5px 20px;\r\n    color: white;\r\n`\r\n\r\nconst DateButton = styled(Button)`\r\n    color:rgb(200,200,200);\r\n    background: none;\r\n    transition: 250ms all;\r\n    border-color: white !important;\r\n    font-size: 75% !important;\r\n    transition:250ms all;\r\n    &:hover {\r\n        color:white;\r\n    }\r\n    &.active {\r\n        cursor: initial;\r\n        font-size: 75%;\r\n        color:black !important;\r\n        background: white !important;\r\n        transition: 250ms all;\r\n        border-color: white;\r\n    }\r\n`\r\nconst PlayPauseButton = styled(Button)`\r\n    background:none;\r\n    transform:translateY(-100%);\r\n    svg {\r\n        width: 100%;\r\n        g {\r\n            fill: white;\r\n        }\r\n    }\r\n`\r\n\r\nconst LineSlider = styled(Slider)`\r\n    color:white;\r\n    // span.MuiSlider-rail {\r\n    //     display:none;\r\n    // }\r\n    // span.MuiSlider-track {\r\n    //     display: none;\r\n    // }\r\n    span.MuiSlider-thumb {\r\n        .MuiSlider-valueLabel {\r\n            transform:translateY(-10px);\r\n            pointer-events:none;\r\n            span {\r\n                background: none;\r\n            }\r\n        }\r\n    }\r\n    span.MuiSlider-thumb.MuiSlider-active: {\r\n        box-shadow: 0px 0px 10px rgba(200,200,200,0.5);\r\n    }\r\n`\r\n\r\nconst RangeSlider = styled(Slider)`\r\n    color:white;\r\n    // span.MuiSlider-rail {\r\n    //     display:none;\r\n    // }\r\n    // span.MuiSlider-track {\r\n    //     display: none;\r\n    // }\r\n    span.MuiSlider-thumb {\r\n        .MuiSlider-valueLabel {\r\n            transform:translateY(-10px);\r\n            pointer-events:none;\r\n            span {\r\n                background: none;\r\n            }\r\n        }\r\n    }\r\n    span.MuiSlider-thumb.MuiSlider-active: {\r\n        box-shadow: 0px 0px 10px rgba(200,200,200,0.5);\r\n    }\r\n`\r\n\r\nconst DateSlider = () => {\r\n    const dispatch = useDispatch();  \r\n    \r\n    const currentData = useSelector(state => state.currentData);\r\n    const dates = useSelector(state => state.dates);\r\n    const dataParams = useSelector(state => state.dataParams);\r\n    const startDateIndex = useSelector(state => state.startDateIndex);\r\n    \r\n    const [timerId, setTimerId] = useState(null);\r\n    const [customRange, setCustomRange] = useState(false);\r\n    // const [useLog, setUseLog] = useState(false);\r\n    const handleChange = (event, newValue) => {\r\n        if (dataParams.nType === \"time-series\" && dataParams.dType === \"time-series\") {\r\n            dispatch(setVariableParams({nIndex: newValue, dIndex: newValue}))\r\n        } else if (dataParams.nType === \"time-series\") {\r\n            dispatch(setVariableParams({nIndex: newValue}))\r\n        } else if (dataParams.dType === \"time-series\") {\r\n            dispatch(setVariableParams({dIndex: newValue}))\r\n        } \r\n        dispatch(setDate(dates[currentData][newValue]));\r\n    };\r\n\r\n    const handleRangeChange = (event, newValue) => {   \r\n        if (dataParams.dRange) {\r\n            dispatch(setVariableParams(\r\n                {\r\n                    nIndex: newValue[1], \r\n                    nRange: newValue[1]-newValue[0],\r\n                    rIndex: newValue[1], \r\n                    rRange: newValue[1]-newValue[0]\r\n                }\r\n            ))\r\n        } else {\r\n            dispatch(setVariableParams(\r\n                {\r\n                    nIndex: newValue[1], \r\n                    nRange: newValue[1]-newValue[0]\r\n                }\r\n            ))\r\n        }\r\n    }\r\n\r\n    const handlePlayPause = (timerId, rate, interval) => {\r\n        if (timerId === null) {\r\n            setTimerId(setInterval(o => dispatch(incrementDate(rate)), interval))\r\n        } else {\r\n            clearInterval(timerId);\r\n            setTimerId(null)\r\n        }\r\n    }\r\n\r\n    const handleRangeButton = (val) => {\r\n        if (val === 'custom') { // if swapping over to a custom range, which will use a 2-part slider to scrub the range\r\n            setCustomRange(true)\r\n            if (dataParams.nType === \"time-series\" && dataParams.dType === \"time-series\") {\r\n                dispatch(setVariableParams({nRange: 14, dRange: 14}))\r\n            } else if (dataParams.nType === \"time-series\") {\r\n                dispatch(setVariableParams({nRange: 14}))\r\n            } else if (dataParams.dType === \"time-series\") {\r\n                dispatch(setVariableParams({dRange: 14}))\r\n            } \r\n        } else { // use the new value -- null for cumulative, 1 for daily, 7 for weekly\r\n            setCustomRange(false)\r\n            if (dataParams.nType === \"time-series\" && dataParams.dType === \"time-series\") {\r\n                dispatch(setVariableParams({nRange: val, dRange: val}))\r\n            } else if (dataParams.nType === \"time-series\") {\r\n                dispatch(setVariableParams({nRange: val}))\r\n            } else if (dataParams.dType === \"time-series\") {\r\n                dispatch(setVariableParams({dRange: val}))\r\n            }    \r\n        }\r\n    }\r\n    function valuetext(value) {\r\n        return `${dates[currentData][value]}`;\r\n    }\r\n\r\n    if (dates[currentData] !== undefined) {\r\n        return (\r\n            <SliderContainer container spacing={2} id=\"slider-container\" style={{visibility: (dataParams.nType === 'time-series' ? 'visible' : 'hidden')}}>\r\n                {/* <Grid item xs={12}>\r\n                    <h4 style={{textAlign:\"center\", color:\"white\"}}>{dates[currentData][dataParams.nIndex]||dates[currentData].slice(-1,)[0]}</h4>\r\n                </Grid> */}\r\n                <Grid item xs={1}>\r\n                    <PlayPauseButton id=\"playPause\" onClick={() => handlePlayPause(timerId, 1, 100)}>\r\n                        {timerId === null ? \r\n                            <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\r\n                                <g transform=\"translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)\">\r\n                                    <g>\r\n                                        <path d=\"M74.4,58.7L40.7,92.2c-7.1,7.2-18.7,4.4-18.7-6.3V14c0-10.7,11.6-13.5,18.7-6.3l33.6,33.5\r\n                                            C79.1,46,79.1,53.8,74.4,58.7z M69.1,53.4c1.9-1.9,1.9-5,0-6.7L35.5,13c-2.1-2.1-6-3.2-6,1.1V86c0,4.3,3.9,3.2,6,1.1L69.1,53.4z\"\r\n                                            />\r\n                                    </g>\r\n                                </g>\r\n                            </svg>\r\n                            : \r\n                            <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\r\n                                <g transform=\"translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)\">\r\n                                    <g>\r\n                                        <path d=\"M22.4,0.6c3.4,0,6.8,0,10.3,0c6.5,0,11.8,5.3,11.8,11.8c0,25,0,50.1,0,75.2c0,6.5-5.3,11.8-11.8,11.8\r\n                                            c-3.4,0-6.8,0-10.3,0c-6.5,0-11.8-5.3-11.8-11.8c0-25.1,0-50.2,0-75.2C10.6,5.9,15.9,0.6,22.4,0.6z M22.4,6.5c3.4,0,6.8,0,10.3,0\r\n                                            c3.2,0,5.9,2.6,5.9,5.9c0,25,0,50.1,0,75.2c0,3.2-2.7,5.9-5.9,5.9c-3.4,0-6.8,0-10.3,0c-3.2,0-5.9-2.7-5.9-5.9\r\n                                            c0-25.1,0-50.2,0-75.2C16.5,9.1,19.2,6.5,22.4,6.5z M67.3,6.5c3.4,0,6.8,0,10.2,0s6,2.6,6,5.9c0,25,0,50.1,0,75.2\r\n                                            c0,3.2-2.7,5.9-6,5.9s-6.7,0-10.2,0c-3.3,0-5.9-2.7-5.9-5.9c0-25.1,0-50.2,0-75.2C61.4,9.1,64,6.5,67.3,6.5z M67.3,0.6\r\n                                            c3.4,0,6.8,0,10.2,0c6.5,0,11.8,5.3,11.8,11.8c0,25,0,50.1,0,75.2c0,6.5-5.3,11.8-11.8,11.8c-3.3,0-6.7,0-10.2,0\r\n                                            c-6.5,0-11.8-5.3-11.8-11.8c0-25.1,0-50.2,0-75.2C55.5,5.9,60.8,0.6,67.3,0.6z\"/>\r\n                                    </g>\r\n                                </g>\r\n                            </svg>\r\n\r\n                        }\r\n                    </PlayPauseButton>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                    {!customRange && <LineSlider \r\n                        value={dataParams.nIndex} \r\n                        valueLabelDisplay=\"on\"\r\n                        onChange={handleChange} \r\n                        getAriaValueText={valuetext}\r\n                        valueLabelFormat={valuetext}\r\n                        aria-labelledby=\"aria-valuetext\"\r\n                        min={startDateIndex}\r\n                        step={1}\r\n                        max={dates[currentData].length-1}\r\n                    />}\r\n                    {customRange && <RangeSlider \r\n                        value={[dataParams.nIndex-dataParams.nRange, dataParams.nIndex]} \r\n                        valueLabelDisplay=\"on\"\r\n                        onChange={handleRangeChange} \r\n                        getAriaValueText={valuetext}\r\n                        valueLabelFormat={valuetext}\r\n                        aria-labelledby=\"aria-valuetext\"\r\n                        min={startDateIndex}\r\n                        step={1}\r\n                        max={dates[currentData].length-1}\r\n                    />}\r\n                </Grid>\r\n                <Grid item xs={2} style={{marginTop:'-120px'}}>\r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        color=\"primary\"\r\n                        aria-label=\"vertical outlined primary button group\"\r\n                        style={{float:'right'}}\r\n                    >\r\n                        <DateButton className={dataParams.nRange === null ? 'active' : ''} onClick={() => handleRangeButton(null)}>Cumulative</DateButton>\r\n                        <DateButton className={dataParams.nRange === 1 ? 'active' : ''} onClick={() => handleRangeButton(1)}>New Daily</DateButton>\r\n                        <DateButton className={dataParams.nRange === 7 ? 'active' : ''} onClick={() => handleRangeButton(7)}>Weekly Average</DateButton>\r\n                        <DateButton className={customRange ? 'active' : ''} onClick={() => handleRangeButton('custom')}>Custom Range</DateButton>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            </SliderContainer>\r\n        );\r\n    } else {\r\n        return <SliderContainer />\r\n    }\r\n}\r\n\r\nexport default DateSlider","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst Legend = ( props ) => {\r\n\r\n    const cleanBins = (bins) => {\r\n        if (bins === undefined) {\r\n            return;\r\n        } else if (bins.slice(-1,)[0] !==`>${bins.slice(-2,-1)[0]}`) {\r\n            return bins\r\n        }\r\n        bins.splice(0, 1, `<${bins[0]}`)\r\n        bins.splice(-2, 1)\r\n        return bins\r\n    }\r\n\r\n    return (\r\n        <div id='legend'>\r\n            <Grid container spacing={2} id='legend-bins-container'>\r\n                <Grid item xs={6}>\r\n                    <h3>\r\n                        {props.title !== undefined && props.title}\r\n                    </h3>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <div id=\"binBars\">\r\n                        {props.colors !== undefined && \r\n                            props.colors.map(color => <div className=\"bin color\" key={`${color[0]}${color[1]}`}style={{backgroundColor:`rgb(${color[0]},${color[1]},${color[2]})`}}></div>)\r\n                        }\r\n                    </div>\r\n                    <div id=\"binLabels\" style={{padding: (`0 ${props.labels !== undefined ? 100/props.labels.length/2-1 : 0}%`) }}>\r\n                        <div className=\"bin label\">0</div>\r\n                        {props.labels !== undefined && \r\n                            cleanBins(props.labels).map(label => <div className=\"bin label\" key={label}>{label}</div>)\r\n                        }\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Legend","import React, {useState} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport {dataFn, colLookup} from '../utils';\r\n\r\nconst DataPanelContainer = styled.div`\r\n  position:fixed;\r\n  right:0;\r\n  top:0;\r\n  height:100vh;\r\n  min-width:200px;\r\n  background-color: #2b2b2b;\r\n  box-shadow: -2px 0px 5px rgba(0,0,0,0.7);\r\n  padding:20px;\r\n  box-sizing: border-box;\r\n  transition:250ms all;\r\n  font: 'Lato', sans-serif;\r\n  color: white;\r\n  font-size:100%;\r\n  padding:0;\r\n  z-index:5;\r\n  div.container {\r\n    width:100%;\r\n    height:100vh;\r\n    overflow-y:scroll;\r\n    padding:5px 0 0 30px;\r\n    box-sizing:border-box;\r\n    div {\r\n      padding-right:20px;\r\n      box-sizing:border-box;\r\n    }\r\n  }\r\n  button#showHideRight {\r\n    position:absolute;    \r\n    right:95%;\r\n    top:20px;\r\n    width:40px;\r\n    height:40px;\r\n    padding:0;\r\n    margin:0;\r\n    background-color: #2b2b2b;\r\n    box-shadow: 0px 0px 6px rgba(0,0,0,1);\r\n    outline:none;\r\n    border:none;\r\n    cursor: pointer;\r\n    transition:500ms all;\r\n    svg {\r\n      padding:0;\r\n      margin:0;\r\n      fill:white;\r\n      transform:rotate(180deg);\r\n      transition:500ms all;\r\n    }\r\n    :after {\r\n      opacity:0;\r\n      font-weight:bold;\r\n      color:white;\r\n      position: relative;\r\n      top:-30px;\r\n      transition:500ms all;\r\n      content: 'Info';\r\n      right:40px;\r\n      z-index:4;\r\n    }\r\n  }\r\n  button#showHideRight.hidden {\r\n    right:100%;\r\n    svg {\r\n      transform:rotate(0deg);\r\n    }\r\n    :after {\r\n      opacity:1;\r\n    }\r\n  }\r\n`\r\n\r\nconst DataPanel = () => {\r\n\r\n  const [hidePanel, setHidePanel] = useState(true);\r\n  const sidebarData = useSelector(state => state.sidebarData);\r\n  const currentData = useSelector(state => state.currentData);\r\n  const cols = useSelector(state => state.cols);\r\n\r\n  const parsePredictedDate = (list) => `${list.slice(-2,)[0]}/${list.slice(-1,)[0]}`\r\n\r\n  return (\r\n    <DataPanelContainer style={{transform: (hidePanel ? 'translateX(100%)' : '')}}>\r\n      <div className=\"container\">\r\n        {sidebarData.properties && <h2>{sidebarData.properties.NAME}, {sidebarData.properties.state_name}</h2>}\r\n        {sidebarData.properties && \r\n          <div>\r\n            <p>Population: {sidebarData.properties.population.toLocaleString('en')}</p>\r\n          </div>\r\n        }\r\n        {(sidebarData.cases && sidebarData.deaths) && \r\n          <div>\r\n            <p>\r\n              Total Cases: {sidebarData.cases.slice(-1,)[0].toLocaleString('en')}<br/>\r\n              Total Deaths: {sidebarData.deaths.slice(-1,)[0].toLocaleString('en')}<br/>\r\n              Cases per 100k Population: {dataFn(sidebarData.cases, null, sidebarData.cases.length-1, null, sidebarData.properties, 'population', null, null, 100000).toFixed(2).toLocaleString('en')}<br/>\r\n              Deaths per 100k Population: {dataFn(sidebarData.deaths, null, sidebarData.deaths.length-1, null, sidebarData.properties, 'population', null, null, 100000).toFixed(2).toLocaleString('en')}<br/>\r\n              New Cases per 100k Population: {dataFn(sidebarData.cases, null, sidebarData.cases.length-1, 1, sidebarData.properties, 'population', null, null, 100000).toFixed(2).toLocaleString('en')}<br/>\r\n              New Deaths per 100k Population: {dataFn(sidebarData.deaths, null, sidebarData.deaths.length-1, 1, sidebarData.properties, 'population', null, null, 100000).toFixed(2).toLocaleString('en')}<br/>\r\n              Licensed Hospital Beds: {sidebarData.properties.beds.toLocaleString('en')}<br/>\r\n              Cases per Bed: {dataFn(sidebarData.cases, null, sidebarData.cases.length-1, null, sidebarData.properties, 'beds', null, null, 1).toFixed(2).toLocaleString('en')}<br/>\r\n            </p>\r\n          </div>\r\n        }\r\n        {sidebarData.chr_health_factors &&\r\n          <div>\r\n            <h2>Community Health Factors</h2>\r\n            <p>\r\n              Children in poverty %: {sidebarData.chr_health_factors[colLookup(cols, currentData, 'chr_health_factors', 'PovChldPrc')]}<br/>\r\n              Income inequality: {sidebarData.chr_health_factors[colLookup(cols, currentData, 'chr_health_factors', 'IncRt')]}<br/>\r\n              Median household income: {sidebarData.chr_health_factors[colLookup(cols, currentData, 'chr_health_factors', 'MedianHouseholdIncome')].toLocaleString('en')}<br/>\r\n              Food insecurity %: {sidebarData.chr_health_factors[colLookup(cols, currentData, 'chr_health_factors', 'FdInsPrc')]}<br/>\r\n              Unemployment %: {sidebarData.chr_health_factors[colLookup(cols, currentData, 'chr_health_factors', 'UnEmplyPrc')]}<br/>\r\n              Uninsured %: {sidebarData.chr_health_factors[colLookup(cols, currentData, 'chr_health_factors', 'UnInPrc')]}<br/>\r\n              Primary care physicians: {sidebarData.chr_health_factors[colLookup(cols, currentData, 'chr_health_factors', 'PrmPhysRt')]}<br/>\r\n              Preventable hospital stays: {sidebarData.chr_health_factors[colLookup(cols, currentData, 'chr_health_factors', 'PrevHospRt')].toLocaleString('en')}<br/>\r\n              Residential segregation-black/white: {sidebarData.chr_health_factors[colLookup(cols, currentData, 'chr_health_factors', 'RsiSgrBlckRt')]}<br/>\r\n              Severe housing problems %: {sidebarData.chr_health_factors[colLookup(cols, currentData, 'chr_health_factors', 'SvrHsngPrbRt')]}<br/>\r\n            </p>\r\n          </div>\r\n        }\r\n        {sidebarData.chr_health_context &&\r\n          <div>\r\n            <h2>Community Health Context</h2>\r\n            <p>\r\n              % 65 and older: {sidebarData.chr_health_context[colLookup(cols, currentData, 'chr_health_context', 'Over65YearsPrc')]} <br/>\r\n              Adult obesity %: {sidebarData.chr_health_context[colLookup(cols, currentData, 'chr_health_context', 'AdObPrc')]} <br/>\r\n              Diabetes prevalence %: {sidebarData.chr_health_context[colLookup(cols, currentData, 'chr_health_context', 'AdDibPrc')]} <br/>\r\n              Adult smoking %: {sidebarData.chr_health_context[colLookup(cols, currentData, 'chr_health_context', 'SmkPrc')]} <br/>\r\n              Excessive drinking %: {sidebarData.chr_health_context[colLookup(cols, currentData, 'chr_health_context', 'ExcDrkPrc')]} <br/>\r\n              Drug overdose deaths: {sidebarData.chr_health_context[colLookup(cols, currentData, 'chr_health_context', 'DrOverdMrtRt')]||'0'} <br/>\r\n            </p>\r\n          </div>\r\n        }\r\n        {sidebarData.chr_life && \r\n          <div>\r\n            <h2>Length and Quality of Life</h2>\r\n            <p>\r\n              Life expectancy: {sidebarData.chr_life[colLookup(cols, currentData, 'chr_life', 'LfExpRt')]} <br/>\r\n              Self-rated health %: {sidebarData.chr_life[colLookup(cols, currentData, 'chr_life', 'SlfHlthPrc')]} <br/>\r\n            </p>\r\n          </div>\r\n        }\r\n        {sidebarData.predictions && \r\n          <div>\r\n            <h2>Predictions</h2>\r\n            <p>\r\n              5-Day Severity Index: {['','High','Medium','Low'][sidebarData.predictions[1]]} <br />\r\n              Predicted Deaths by {parsePredictedDate(cols[currentData].predictions[2].split('_'))}: {sidebarData.predictions[2]} <br/>\r\n              Predicted Deaths by {parsePredictedDate(cols[currentData].predictions[4].split('_'))}: {sidebarData.predictions[4]} <br/>\r\n              Predicted Deaths by {parsePredictedDate(cols[currentData].predictions[6].split('_'))}: {sidebarData.predictions[6]} <br/>\r\n              Predicted Deaths by {parsePredictedDate(cols[currentData].predictions[8].split('_'))}: {sidebarData.predictions[8]} <br/>\r\n              Predicted Deaths by {parsePredictedDate(cols[currentData].predictions[10].split('_'))}: {sidebarData.predictions[10]} <br/>\r\n              Predicted Deaths by {parsePredictedDate(cols[currentData].predictions[12].split('_'))}: {sidebarData.predictions[12]} <br/>\r\n              Predicted Deaths by {parsePredictedDate(cols[currentData].predictions[14].split('_'))}: {sidebarData.predictions[14]} <br/>\r\n            </p>\r\n          </div>\r\n        }\r\n        \r\n        {sidebarData !== {} && <button onClick={() => setHidePanel(prev => { return !prev })} id=\"showHideRight\" className={hidePanel ? 'hidden' : 'active'}>\r\n          <svg version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\r\n            <g transform=\"translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)\">\r\n              <path d=\"M38,33.8L23.9,47.9c-1.2,1.2-1.2,3.1,0,4.2L38,66.2l4.2-4.2l-9-9H71v17c0,0.6-0.4,1-1,1H59v6h11\r\n                c3.9,0,7-3.1,7-7V30c0-3.9-3.1-7-7-7H59v6h11c0.6,0,1,0.4,1,1v17H33.2l9-9L38,33.8z\"/>\r\n            </g>\r\n          </svg>\r\n\r\n        </button>}\r\n      </div>\r\n    </DataPanelContainer>\r\n  );\r\n}\r\n\r\nexport default DataPanel;","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setVariableParams, setVariableName, setMapParams, setCurrentData } from '../actions';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport { colLookup } from '../utils';\r\nimport styled from 'styled-components';\r\n\r\nconst VariablePanelContainer = styled.div`\r\n  position:fixed;\r\n  left:0;\r\n  top:0;\r\n  height:100vh;\r\n  min-width:200px;\r\n  background-color: #2b2b2b;\r\n  box-shadow: 2px 0px 5px rgba(0,0,0,0.7);\r\n  padding:20px;\r\n  box-sizing: border-box;\r\n  transition:250ms all;\r\n  font: 'Lato', sans-serif;\r\n  color:white;\r\n  z-index:50;\r\n  p.note {\r\n    position: absolute;\r\n    bottom:100px;\r\n    width:calc(100% - 40px);\r\n    font-family: 'Lato', sans-serif;\r\n    font-weight:300;\r\n    font-size:90%;\r\n    a {\r\n      color:yellow;\r\n      text-decoration: none;\r\n    }\r\n  }\r\n  div.poweredByGeoda {\r\n    position: absolute;\r\n    bottom: 40px;\r\n    color:white;\r\n    width:100%;\r\n    text-align:center;\r\n    transform:translateX(-20px);\r\n    a {\r\n      color:white;\r\n      margin:0 auto;\r\n      text-decoration: none;\r\n      letter-spacing: 2px;\r\n      font-size:75%;\r\n      img {\r\n        width:23px;\r\n        height:27px;\r\n        transform: translate(-50%,40%);\r\n      }\r\n    }\r\n  }\r\n  button#showHideLeft {\r\n    position:absolute;\r\n    left:95%;\r\n    top:20px;\r\n    width:40px;\r\n    height:40px;\r\n    padding:0;\r\n    margin:0;\r\n    background-color: #2b2b2b;\r\n    box-shadow: 0px 0px 6px rgba(0,0,0,1);\r\n    outline:none;\r\n    border:none;\r\n    cursor: pointer;\r\n    transition:500ms all;\r\n    svg { \r\n      padding:0;\r\n      margin:0;\r\n      fill:white;\r\n      transform:rotate(0deg);\r\n      transition:500ms all;\r\n    }\r\n    :after {\r\n      opacity:0;\r\n      font-weight:bold;\r\n      content: 'Variables';\r\n      color:white;\r\n      position: relative;\r\n      right:-50px;\r\n      top:-30px;\r\n      transition:500ms all;\r\n      z-index:4;\r\n    }\r\n  }\r\n  button#showHideLeft.hidden {\r\n    left:100%;\r\n    svg {\r\n      transform:rotate(180deg);\r\n    }\r\n    :after {\r\n      opacity:1;\r\n    }\r\n  }\r\n`\r\n\r\n\r\nconst StyledDropDown = styled(FormControl)`\r\n  padding:0 0 40px 0!important;\r\n  color:white;\r\n  padding:0;\r\n  margin: 0 10px 40px 0;\r\n  .MuiInputBase-root {\r\n    font-family: 'Lato', sans-serif;\r\n  }\r\n  .MuiFormLabel-root {\r\n    color: white;\r\n    font-family: 'Lato', sans-serif;\r\n  }\r\n  .Mui-focused {\r\n    color: white !important;\r\n  }\r\n  .MuiInput-underline:before {\r\n    border-bottom:1px solid rgba(255,255, 255, 0.42);\r\n  }\r\n  .MuiInput-underline:after {\r\n    border-bottom: 2px solid white\r\n  }\r\n  .MuiInputBase-root {\r\n    color: white;\r\n    .MuiSvgIcon-root {\r\n      color: rgba(255,255,255,0.54);\r\n    },\r\n    .MuiPopover-paper {\r\n      color:white;\r\n    }\r\n  }\r\n  .MuiFormGroup-root {\r\n    .MuiFormControlLabel-root{\r\n      color:white;\r\n      span {\r\n        font-family: 'Lato', sans-serif;\r\n      }\r\n      .MuiRadio-root {\r\n        color: rgba(255,255,255,0.54);\r\n      }\r\n    }\r\n  }\r\n  .MuiRadio-root {\r\n    color:white;\r\n  }\r\n  .MuiRadio-colorSecondary.Mui-checked {\r\n    color:white;\r\n  }\r\n`\r\n\r\nconst TwoUp = styled.div`\r\n  width:100%;\r\n  .MuiFormControl-root {\r\n    width:45%;\r\n    min-width:60px;\r\n    margin-right:5px;\r\n  }\r\n`\r\nconst VariablePanel = (props) => {\r\n\r\n  const dispatch = useDispatch();  \r\n  \r\n  const columnNames = useSelector(state => state.cols);\r\n  const currentData = useSelector(state => state.currentData);\r\n  const currentVariable = useSelector(state => state.currentVariable);\r\n  const mapParams = useSelector(state => state.mapParams);\r\n\r\n  const [hidePanel, setHidePanel] = useState(false);\r\n  \r\n  const PresetVariables = {\r\n      \"HEADER:cases\":{},\r\n      \"Confirmed Count\": {\r\n          numerator: 'cases',\r\n          nType: 'time-series',\r\n          nProperty: null,\r\n          denominator: 'properties',\r\n          dType: 'none',\r\n          dProperty: null,\r\n          dRange:null,\r\n          dIndex:null,\r\n          scale:1,\r\n      },\r\n      \"Confirmed Count per 100K Population\": {\r\n          numerator: 'cases',\r\n          nType: 'time-series',\r\n          nProperty: null,\r\n          denominator: 'properties',\r\n          dType: 'characteristic',\r\n          dProperty: 'population',\r\n          dRange:null,\r\n          dIndex:null,\r\n          scale:100000,\r\n      },\r\n      \"Confirmed Count per Licensed Bed\": {\r\n          numerator: 'cases',\r\n          nType: 'time-series',\r\n          nProperty: null,\r\n          denominator: 'properties',\r\n          dType: 'characteristic',\r\n          dProperty: 'beds',\r\n          dRange:null,\r\n          dIndex:null,\r\n          scale:1,\r\n      },\r\n      \"HEADER:deaths\":{},\r\n      \"Death Count\":{\r\n        numerator: 'deaths',\r\n        nType: 'time-series',\r\n        nProperty: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n          \r\n      }, \r\n      \"Death Count per 100K Population\":{\r\n        numerator: 'deaths',\r\n        nType: 'time-series',\r\n        nProperty: null,\r\n        denominator: 'properties',\r\n        dType: 'characteristic',\r\n        dProperty: 'population',\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:100000,\r\n\r\n      },\r\n      \"Death Count / Confirmed Count\":{\r\n        numerator: 'deaths',\r\n        nType: 'time-series',\r\n        nProperty: null,\r\n        denominator: 'cases',\r\n        dType: 'time-series',\r\n        dProperty: null,\r\n        scale:1,\r\n\r\n      },\r\n      \"HEADER:community health\":{},\r\n      \"Uninsured % (Community Health Factor)\":{\r\n        numerator: 'chr_health_factors',\r\n        nType: 'characteristic',\r\n        nProperty: colLookup(columnNames, currentData, 'chr_health_factors', 'UnInPrc'),\r\n        nRange: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n\r\n      },\r\n      \"Over 65 Years % (Community Health Context)\":{\r\n        numerator: 'chr_health_context',\r\n        nType: 'characteristic',\r\n        nProperty: colLookup(columnNames, currentData, 'chr_health_context', 'Over65YearsPrc'),\r\n        nRange: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n      },\r\n      \"Life expectancy (Length and Quality of Life)\":{\r\n        numerator: 'chr_life',\r\n        nType: 'characteristic',\r\n        nProperty: colLookup(columnNames, currentData, 'chr_life', 'LfExpRt'),\r\n        nRange: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n      }\r\n  }\r\n\r\n  const CountyVariables = {\r\n      \"HEADER:forecasting\":{},\r\n      \"Forecasting (5-Day Severity Index)\": {\r\n        numerator: 'predictions',\r\n        nType: 'characteristic',\r\n        nProperty: colLookup(columnNames, currentData, 'predictions', 'severity_index'),\r\n        nRange: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n      }\r\n  }\r\n\r\n  const StateVariables = {\r\n      \"HEADER:testing\":{},\r\n      \"7 Day Testing Positivity Rate %\": {\r\n        numerator: 'testing_wk_pos',\r\n        nType: 'time-series',\r\n        nProperty: null,\r\n        nRange: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n      },\r\n      \"7 Day Testing Capacity\": {\r\n        numerator: 'testing_tcap',\r\n        nType: 'time-series',\r\n        nProperty: null,\r\n        nRange: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n      }, \r\n      \"7 Day Confirmed Cases per Testing %\":{\r\n        numerator: 'testing_ccpt',\r\n        nType: 'time-series',\r\n        nProperty: null,\r\n        nRange: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n      }\r\n  }\r\n\r\n  \r\n\r\n  const handleVariable = (event) => {\r\n      let variable = event.target.value;\r\n      dispatch(setVariableName(variable))\r\n\r\n      if (PresetVariables.hasOwnProperty(variable)) {\r\n          dispatch(setVariableParams({...PresetVariables[variable]}))\r\n      } else if (CountyVariables.hasOwnProperty(variable)){\r\n          dispatch(setVariableParams({...CountyVariables[variable]}))\r\n      } else {\r\n          dispatch(setVariableParams({...StateVariables[variable]}))\r\n      }\r\n          \r\n  };\r\n\r\n  const handleDataSource = (event) => {\r\n    dispatch(setCurrentData(event.target.value)) ;  \r\n  };\r\n\r\n  const handleMapType = (event, newValue) =>{\r\n    let nBins = newValue === 'hinge15_breaks' ? 6 : 8\r\n    dispatch(\r\n      setMapParams(\r\n        {\r\n          nBins,\r\n          'mapType': newValue\r\n        }\r\n      )\r\n    )\r\n  }\r\n\r\n  const handleMapOverlay = (event) =>{\r\n    dispatch(\r\n      setMapParams(\r\n        {\r\n          'overlay': event.target.value\r\n        }\r\n      )\r\n    )\r\n  }\r\n\r\n  const handleMapResource = (event) =>{\r\n    dispatch(\r\n      setMapParams(\r\n        {\r\n          'resource': event.target.value\r\n        }\r\n      )\r\n    )\r\n  }\r\n\r\n  return (\r\n    <VariablePanelContainer style={{transform: (hidePanel ? 'translateX(-100%)' : '')}}>\r\n      <h2>Data Sources &amp;<br/> Map Variables</h2>\r\n      <StyledDropDown>\r\n        <InputLabel htmlFor=\"data-select\">Data Source</InputLabel>\r\n        <Select  \r\n          id=\"data-select\"\r\n          value={currentData}\r\n          onChange={handleDataSource}\r\n        >\r\n          \r\n        <ListSubheader>county data</ListSubheader>\r\n          <MenuItem value={'county_usfacts.geojson'} key={'county_usfacts.geojson'}>USA Facts</MenuItem>\r\n          <MenuItem value={'county_nyt.geojson'} key={'county_nyt.geojson'}>New York Times</MenuItem>\r\n          <MenuItem value={'county_1p3a.geojson'} key={'county_1p3a.geojson'}>1point3acres</MenuItem>\r\n        <ListSubheader>state data</ListSubheader>\r\n          <MenuItem value={'state_1p3a.geojson'} key={'state_1p3a.geojson'}>1point3acres</MenuItem>\r\n          <MenuItem value={'state_nyt.geojson'} key={'state_nyt.geojson'} disabled>New York Times</MenuItem>\r\n        </Select>\r\n      </StyledDropDown>\r\n      <br />\r\n      <StyledDropDown>\r\n        <InputLabel htmlFor=\"numerator-select\">Select Variable</InputLabel>\r\n        <Select \r\n          value={currentVariable} \r\n          id=\"numerator-select\"\r\n          onChange={handleVariable}\r\n        >\r\n          {\r\n            Object.keys(PresetVariables).map((variable) => {\r\n              if (variable.split(':')[0]===\"HEADER\") {\r\n                return <ListSubheader>{variable.split(':')[1]}</ListSubheader>\r\n              } else {\r\n                return <MenuItem value={variable} key={variable}>{variable}</MenuItem> \r\n              }\r\n            })\r\n          }\r\n          \r\n          {\r\n            currentData.includes(\"county\") && Object.keys(CountyVariables).map((variable) => {\r\n              if (variable.split(':')[0]===\"HEADER\") {\r\n                return <ListSubheader>{variable.split(':')[1]}</ListSubheader>\r\n              } else {\r\n                return <MenuItem value={variable} key={variable}>{variable}</MenuItem> \r\n              }\r\n            })\r\n          }\r\n          \r\n          {\r\n            currentData.includes(\"state\") && Object.keys(StateVariables).map((variable) => {\r\n              if (variable.split(':')[0]===\"HEADER\") {\r\n                return <ListSubheader>{variable.split(':')[1]}</ListSubheader>\r\n              } else {\r\n                return <MenuItem value={variable} key={variable}>{variable}</MenuItem> \r\n              }\r\n            })\r\n          }\r\n        </Select>\r\n      </StyledDropDown>\r\n      <br/>\r\n      <StyledDropDown component=\"fieldset\" >\r\n        <FormLabel component=\"legend\">Map Type</FormLabel>\r\n        <RadioGroup \r\n          aria-label=\"maptype\" \r\n          name=\"maptype1\" \r\n          onChange={handleMapType} \r\n          value={mapParams.mapType}\r\n          >\r\n          <FormControlLabel value=\"natural_breaks\" control={<Radio />} label=\"Choropleth\" />\r\n          <FormControlLabel value=\"hinge15_breaks\" control={<Radio />} label=\"Box Map\" />\r\n          <FormControlLabel value=\"lisa\" control={<Radio />} label=\"Local Moran\" />\r\n          <FormControlLabel value=\"cartogram\" control={<Radio />} label=\"Cartogram\" />\r\n        </RadioGroup>\r\n      </StyledDropDown>\r\n      <TwoUp>\r\n        <StyledDropDown>\r\n          <InputLabel htmlFor=\"overlay-select\">Overlay</InputLabel>\r\n          <Select  \r\n            id=\"overlay-select\"\r\n            value={mapParams.overlay}\r\n            onChange={handleMapOverlay}\r\n          >\r\n            <MenuItem value=\"\" key={'None'}>None</MenuItem> \r\n            <MenuItem value={'native_american_reservations'} key={'variable1'}>Native American Reservations</MenuItem>\r\n            <MenuItem value={'hypersegregated_cities'} key={'variable2'}>Hypersegregated Cities</MenuItem>\r\n            <MenuItem value={'black_belt_counties'} key={'variable3'}>Black Belt Counties</MenuItem>\r\n            <MenuItem value={'us_congressional_districts'} key={'variable4'}>US Congressional Districts</MenuItem>\r\n          </Select>\r\n        </StyledDropDown>\r\n        <StyledDropDown>\r\n          <InputLabel htmlFor=\"resource-select\">Resource</InputLabel>\r\n          <Select  \r\n            id=\"resource-select\"\r\n            value={mapParams.resource}\r\n            onChange={handleMapResource}\r\n          >\r\n            <MenuItem value=\"\" key='None'>None</MenuItem> \r\n            <MenuItem value={'clinics_hospitals'} key={'variable1'}>Clinics and Hospitals</MenuItem>\r\n            <MenuItem value={'clinics'} key={'variable2'}>Clinics</MenuItem>\r\n            <MenuItem value={'hospitals'} key={'variable3'}>Hospitals</MenuItem>\r\n          </Select>\r\n        </StyledDropDown>\r\n      </TwoUp>\r\n      <p className=\"note\">\r\n        Data is updated with freshest available data at 3pm CST daily, at minimum. \r\n        In case of data discrepancy, local health departments are considered most accurate as per CDC recommendations. \r\n        More information on <a href=\"data.html\">data</a>, <a href=\"methods.html\">methods</a>, \r\n        and <a href=\"FAQ.html\">FAQ</a> at main site.\r\n      </p>\r\n      <div className=\"poweredByGeoda\">\r\n            <a href=\"https://geodacenter.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <img src={`${process.env.PUBLIC_URL}/assets/img/geoda-logo.png`} />\r\n              POWERED BY GEODA\r\n            </a>\r\n        </div>\r\n      <button onClick={() => setHidePanel(prev => { return !prev })} id=\"showHideLeft\" className={hidePanel ? 'hidden' : 'active'}>\r\n        <svg version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\r\n          <g transform=\"translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)\">\r\n            <path d=\"M38,33.8L23.9,47.9c-1.2,1.2-1.2,3.1,0,4.2L38,66.2l4.2-4.2l-9-9H71v17c0,0.6-0.4,1-1,1H59v6h11\r\n              c3.9,0,7-3.1,7-7V30c0-3.9-3.1-7-7-7H59v6h11c0.6,0,1,0.4,1,1v17H33.2l9-9L38,33.8z\"/>\r\n          </g>\r\n        </svg>\r\n\r\n      </button>\r\n    </VariablePanelContainer>\r\n  );\r\n}\r\n\r\nexport default VariablePanel;","import React, {useState} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, ReferenceArea, ReferenceLine, Tooltip, Legend, ResponsiveContainer\r\n} from 'recharts';\r\nimport { useSelector } from 'react-redux';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport styled from 'styled-components';\r\n\r\nconst SwitchContainer = styled(Grid)`\r\n    p {\r\n        display: inline;\r\n        color:white;\r\n    }\r\n    span.MuiSwitch-track {\r\n        background-color:#ddd;\r\n    }\r\n    .Mui-checked {\r\n        color:yellow;\r\n    }\r\n    .Mui-checked + .MuiSwitch-track {\r\n        background-color: yellow;\r\n    }\r\n    .MuiSwitch-colorSecondary:hover {\r\n        background-color:rgba(255,255,0,0.05);\r\n    }\r\n`\r\n\r\nconst MainLineChart = () => {\r\n    \r\n    const chartData = useSelector(state => state.chartData);\r\n    const dataParams = useSelector(state => state.dataParams);\r\n    const [logChart, setLogChart] = useState(false)\r\n    \r\n    const getStartDate = (range, index, data) => {\r\n        if (range === null) {\r\n            try {\r\n                return data.slice(0,1)[0].date\r\n            } catch {\r\n                return null\r\n            }\r\n        } else {\r\n            try {\r\n                return data[index-range].date\r\n            } catch {\r\n                return null\r\n            }\r\n        }\r\n    }\r\n\r\n    const getEndDate = (index, data) => {\r\n        try {\r\n            return data[index].date;\r\n        } catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    const handleSwitch = () => {\r\n        setLogChart(prev => !prev);\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2} id=\"main-chart-container\">\r\n            <Grid item xs={10} style={{height:'20vh'}}>\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                    <LineChart\r\n                        data={chartData}\r\n                        margin={{\r\n                            top: 0, right: 10, left: 45, bottom: 20,\r\n                        }}\r\n                    >\r\n                        {/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\r\n                        <XAxis dataKey=\"date\" />\r\n                        {/* <YAxis type=\"number\" /> */}\r\n                        <YAxis type=\"number\" dataKey=\"count\" scale={logChart ? \"log\" : \"linear\"} domain={['auto', 'auto']} />\r\n                        <Tooltip />\r\n                            <ReferenceArea \r\n                                x1={getStartDate(dataParams.nRange, dataParams.nIndex, chartData)}\r\n                                x2={getEndDate(dataParams.nIndex, chartData)} \r\n                                fill=\"white\" \r\n                                fillOpacity={0.15}\r\n                                isAnimationActive={false}\r\n                            />\r\n                        <Line type=\"monotone\" dataKey=\"count\" stroke=\"#ff0000\" dot={false} />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n            </Grid>\r\n            <SwitchContainer item xs={2}>\r\n                <Switch\r\n                    checked={logChart}\r\n                    onChange={handleSwitch}\r\n                    name=\"log chart switch\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                />\r\n                <p>{logChart ? 'Log Scale' : 'Linear Scale'}</p>\r\n            </SwitchContainer>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default MainLineChart\r\n\r\n// dataParams.nIndex-(dataParams.nRange||dataParams.nIndex)","import React, { useEffect, useState } from 'react';\r\nimport { setCentroids, storeData, setCurrentData, setDates, setColumnNames, setDate, setDateIndex, setMapParams, setVariableParams, setStartDateIndex, setChartData, storeGeojson, storeLisaValues } from './actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport GeodaProxy from './GeodaProxy.js';\r\nimport { getParseCSV, getJson, mergeData, colIndex, findDates, getDataForBins, getDataForCharts, dataFn, getLisaValues, getVarId, getGeoids, getDataForLisa } from './utils';\r\nimport { Map, DateSlider, Legend, VariablePanel, MainLineChart, DataPanel } from './components';\r\nimport { colorScales, fixedScales, dataPresets } from './config';\r\n\r\nfunction App() {\r\n  const storedData = useSelector(state => state.storedData);\r\n  const storedGeojson = useSelector(state => state.storedGeojson);\r\n  const storedLisaData = useSelector(state => state.storedLisaData);\r\n  const currentData = useSelector(state => state.currentData);\r\n  const currentVariable = useSelector(state => state.currentVariable);\r\n  const columnNames = useSelector(state => state.cols);\r\n  const dates = useSelector(state => state.dates);\r\n  const mapParams = useSelector(state => state.mapParams);\r\n  const dataParams = useSelector(state => state.dataParams);\r\n  const chartData = useSelector(state => state.chartData);\r\n  const startDateIndex = useSelector(state => state.startDateIndex);\r\n\r\n  const [gda_proxy, set_gda_proxy] = useState(null);\r\n  \r\n  const dispatch = useDispatch();  \r\n  \r\n  const getCentroids = (geojson, gda_proxy) =>  dispatch(setCentroids(gda_proxy.GetCentroids(geojson), geojson))\r\n  \r\n  const getDates = (data, table, geojson) =>  {\r\n    let dates = findDates(data[table])\r\n    dispatch(setDates(dates[0], geojson))\r\n    dispatch(setDate(dates[0].slice(-1,)[0]))\r\n    dispatch(setVariableParams({nIndex: colIndex(data, table, dates[0].slice(-1,)[0])}))\r\n    dispatch(setStartDateIndex(dates[1]))\r\n  }\r\n\r\n  const getColumns = (data, names) => {\r\n    let rtn = {};\r\n    for (let i=0; i < data.length; i++) {\r\n      rtn[names[i]] = data[i][1]\r\n    }\r\n  return rtn;\r\n  }\r\n\r\n  async function loadData(geojson, csvs, joinCols, names, accumulate, gda_proxy) {\r\n    const csvPromises = csvs.map(csv => getParseCSV(`${process.env.PUBLIC_URL}/csv/${csv}.csv`, joinCols[1], accumulate.includes(csv)).then(result => {return result}))\r\n    Promise.all([\r\n      getJson(`${process.env.PUBLIC_URL}/geojson/${geojson}`, gda_proxy),\r\n      ...csvPromises\r\n    ]).then(values => {\r\n      dispatch(storeGeojson(values[0]['geoidIndex'], geojson));\r\n      let tempData = mergeData(values[0]['data'], joinCols[0], values.slice(1,), names, joinCols[1]);\r\n      dispatch(storeData(tempData, geojson));\r\n      dispatch(setCurrentData(geojson));\r\n      dispatch(setColumnNames(getColumns(values.slice(1,), names), geojson));\r\n    })    \r\n  }\r\n\r\n  // After runtime is initialized, this loads in gda_proxy to the state\r\n  useEffect(() => {\r\n    const waitForWASM = () => {\r\n      setTimeout(() => {\r\n        if (window.Module === undefined) {\r\n          waitForWASM()\r\n        } else {\r\n          if (gda_proxy === null) {\r\n            set_gda_proxy(new GeodaProxy());\r\n          }\r\n        }\r\n      }, 100)\r\n    }\r\n\r\n    waitForWASM()\r\n  },[window.Module])\r\n\r\n  // on initial load and after gda_proxy has been initialized, this loads in the default data sets (USA Facts)\r\n  useEffect(() => {\r\n    if ((gda_proxy !== null) && (currentData === '')) {\r\n      loadData(\r\n        'county_usfacts.geojson', \r\n        ['covid_confirmed_usafacts','covid_deaths_usafacts', 'berkeley_predictions', 'chr_health_context', 'chr_life', 'chr_health_factors'], \r\n        ['GEOID', 'FIPS'], \r\n        ['cases','deaths', 'predictions', 'chr_health_context', 'chr_life', 'chr_health_factors'],\r\n        [],\r\n        gda_proxy\r\n      )\r\n    }\r\n  },[gda_proxy])\r\n\r\n  useEffect(() => {\r\n    if ((gda_proxy !== null) && (currentData !== '')) {\r\n      if (storedData[currentData] === undefined) {\r\n        loadData(\r\n          dataPresets[currentData].geojson, \r\n          dataPresets[currentData].csv, \r\n          dataPresets[currentData].joinCols,\r\n          dataPresets[currentData].tableNames,  \r\n          dataPresets[currentData].accumulate,\r\n          gda_proxy\r\n        )\r\n      }\r\n    }\r\n  },[currentData])\r\n\r\n\r\n  // whenever the current data changes, this \r\n  useEffect(() => {\r\n    if (currentData != '') {\r\n      if (!dates.hasOwnProperty(currentData)){\r\n        getCentroids(currentData, gda_proxy)\r\n        getDates(columnNames[currentData], 'cases', currentData)\r\n      }\r\n    } \r\n  },[columnNames])\r\n\r\n  useEffect(() => {\r\n    if (storedData[currentData]){\r\n      dispatch(\r\n        setChartData(\r\n          getDataForCharts(\r\n            storedData[currentData],\r\n            'cases',\r\n            startDateIndex,\r\n            dates[currentData]\r\n          )\r\n        )\r\n      )\r\n    }\r\n  }, [startDateIndex])\r\n\r\n  // get lisa values on change, if map type set to lisa\r\n  useEffect(() => {\r\n    if (gda_proxy !== null && mapParams.mapType === \"lisa\"){\r\n      let tempId = getVarId(currentData, dataParams)\r\n      if (!(storedLisaData.hasOwnProperty(tempId))) {\r\n        dispatch(\r\n          storeLisaValues(\r\n            getLisaValues(\r\n              gda_proxy, \r\n              currentData, \r\n              getDataForLisa(\r\n                storedData[currentData], \r\n                dataParams.numerator, \r\n                dataParams.nType,\r\n                dataParams.nProperty, \r\n                dataParams.nIndex, \r\n                dataParams.nRange, \r\n                dataParams.denominator, \r\n                dataParams.dType,\r\n                dataParams.dProperty, \r\n                dataParams.dIndex, \r\n                dataParams.dRange, \r\n                dataParams.scale,\r\n                storedGeojson[currentData].indexOrder\r\n              )\r\n            ),\r\n            tempId\r\n          )\r\n        )\r\n      }\r\n    }\r\n  }, [dataParams, mapParams])\r\n\r\n  // trigger on parameter change for metric values\r\n  useEffect(() => {\r\n    if (gda_proxy !== null && currentData !== '' && mapParams.mapType !== \"lisa\"){\r\n      if (mapParams.fixedScale !== null) {\r\n        dispatch(\r\n          setMapParams({\r\n            bins: fixedScales[mapParams.fixedScale],\r\n            colorScale: colorScales[mapParams.fixedScale]\r\n          })\r\n        )\r\n      } else {\r\n        let nb = gda_proxy.custom_breaks(\r\n          currentData, \r\n          mapParams.mapType, \r\n          mapParams.nBins, \r\n          null, \r\n          getDataForBins(\r\n            storedData[currentData], \r\n            dataParams.numerator, \r\n            dataParams.nType,\r\n            dataParams.nProperty, \r\n            mapParams.binMode === 'dynamic' ? dataParams.nIndex : null,\r\n            dataParams.nRange, \r\n            dataParams.denominator,\r\n            dataParams.dType,\r\n            dataParams.dProperty, \r\n            mapParams.binMode === 'dynamic' ? dataParams.dIndex : null, \r\n            dataParams.dRange, \r\n            dataParams.scale\r\n          )\r\n        )\r\n\r\n        dispatch(\r\n          setMapParams({\r\n            bins: {\r\n              bins: mapParams.mapType === \"natural_breaks\" ? nb.bins : ['Lower Outlier','< 25%','25-50%','50-75%','>75%','Upper Outlier'],\r\n              breaks: [-Math.pow(10, 12), ...nb.breaks.slice(1,-1), Math.pow(10, 12)]\r\n            },\r\n            colorScale: colorScales[mapParams.mapType]\r\n          })\r\n        )\r\n      }\r\n    }\r\n  }, [dates, dataParams.numerator, dataParams.nProperty, dataParams.nRange, dataParams.denominator, dataParams.dProperty, dataParams.dRange, dataParams.scale, mapParams.mapType])\r\n\r\n  // trigger on date (index) change for dynamic binning\r\n  useEffect(() => {\r\n    if (gda_proxy !== null && mapParams.binMode === 'dynamic' && currentData !== '' && mapParams.mapType !== 'lisa'){\r\n      let nb = gda_proxy.custom_breaks(\r\n        currentData, \r\n        mapParams.mapType,\r\n        mapParams.nBins.\r\n        null, \r\n        getDataForBins(\r\n          storedData[currentData], \r\n          dataParams.numerator, \r\n          dataParams.nType,\r\n          dataParams.nProperty, \r\n          dataParams.nIndex, \r\n          dataParams.nRange, \r\n          dataParams.denominator, \r\n          dataParams.dType,\r\n          dataParams.dProperty, \r\n          dataParams.dIndex, \r\n          dataParams.dRange, \r\n          dataParams.scale\r\n          ), \r\n        )\r\n      dispatch(\r\n        setMapParams({\r\n          bins: {\r\n            bins: mapParams.mapType === \"natural_breaks\" ? nb.bins : ['Lower Outlier','< 25%','25-50%','50-75%','>75%','Upper Outlier'],\r\n            breaks: [-Math.pow(10, 12), ...nb.breaks.slice(1,-1), Math.pow(10, 12)]\r\n          },\r\n          colorScale: colorScales[mapParams.mapType]\r\n        })\r\n      )\r\n    }\r\n  }, [dataParams.nIndex, dataParams.dIndex])\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <header className=\"App-header\" style={{position:'fixed', left: '20vw', top:'20px', zIndex:10}}>\r\n        <button onClick={() => console.log(getParseCSV(`${process.env.PUBLIC_URL}/csv/covid_deaths_1p3a.csv`, 'FIPS', true))}>dummy button for testing</button>\r\n      </header> */}\r\n      <Map />\r\n      <VariablePanel />\r\n      <DataPanel />\r\n      <div id=\"bottom-drawer\">\r\n        <Legend labels={mapParams.bins.bins} title={currentVariable} colors={mapParams.colorScale} binType={mapParams.mapType} />\r\n        <hr />\r\n        <MainLineChart />\r\n        <DateSlider />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","export const INITIAL_STATE = {\r\n  geodaProxy: null,\r\n  storedData: {},\r\n  storedGeojson: {},\r\n  storedLisaData: {},\r\n  storedCSV: {},\r\n  cols: {},\r\n  currentData: '',\r\n  chartData: [{}],\r\n  centroids: {},\r\n  dates: {},\r\n  currDate: '',\r\n  currDateIndex: '',\r\n  startDateIndex: '',\r\n  currentVariable: 'Confirmed Count per 100K Population',\r\n  currentMethod: 'natural_breaks',\r\n  currentOverlay: '',\r\n  currentResource: '',\r\n  dataParams: {\r\n    numerator: 'cases',\r\n    nType: 'time-series',\r\n    nProperty: null,\r\n    nRange: 7,\r\n    nIndex:null,\r\n    denominator: 'properties',\r\n    dType: 'characteristic',\r\n    dProperty: 'population',\r\n    dRange:null,\r\n    dIndex:null,\r\n    scale:100000,\r\n  },\r\n  mapParams: {\r\n    mapType: 'natural_breaks',\r\n    bins: {\r\n      bins: [],\r\n      breaks: []\r\n    },\r\n    binMode: '',\r\n    fixedScale: null,\r\n    nBins: 8,\r\n    use3d: false,\r\n    activeGeoid: '',\r\n    overlay: '',\r\n    resource: '',\r\n    colorScale: [\r\n      [240,240,240],\r\n      [255,255,204],\r\n      [255,237,160],\r\n      [254,217,118],\r\n      [254,178,76],\r\n      [253,141,60],\r\n      [252,78,42],\r\n      [227,26,28],\r\n      [177,0,38],\r\n    ],\r\n  },\r\n  storedRange: null,\r\n  currentGeoid: '',\r\n  sidebarData: {},\r\n};","import { INITIAL_STATE } from '../constants/defaults';\r\n\r\nvar reducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case 'SET_GEOID': \r\n            return {\r\n                ...state,\r\n                currentGeoid: action.payload.geoid\r\n            };\r\n        case 'SET_STORED_DATA':\r\n            let obj = {\r\n                ...state.storedData,\r\n            }\r\n            obj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                storedData: obj\r\n            };\r\n        case 'SET_STORED_GEOJSON':\r\n            let geojsonObj = {\r\n                ...state.storedGeojson,\r\n            }\r\n            geojsonObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                storedGeojson: geojsonObj\r\n            };\r\n        case 'SET_STORED_LISA_DATA':\r\n            let lisaObj = {\r\n                ...state.storedLisaData,\r\n            }\r\n            lisaObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                storedLisaData: lisaObj\r\n            };\r\n        case 'SET_CENTROIDS':\r\n            let centroidsObj = {\r\n                ...state.centroids,\r\n            }\r\n            centroidsObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                centroids: centroidsObj\r\n            };\r\n        case 'SET_CURRENT_DATA':\r\n            return {\r\n                ...state,\r\n                currentData: action.payload.data\r\n            }\r\n        case 'SET_GEODA_PROXY':\r\n            return {\r\n                ...state,\r\n                geodaProxy: action.payload.proxy\r\n            }\r\n        case 'SET_DATES':\r\n            let datesObj = {\r\n                ...state.dates\r\n            }\r\n            datesObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                dates: datesObj\r\n            }\r\n        case 'SET_DATA_FUNCTION':\r\n            return {\r\n                ...state,\r\n                currentDataFn: action.payload.fn\r\n            }\r\n        case 'SET_COLUMN_NAMES':\r\n            let colObj = {\r\n                ...state.cols\r\n            }\r\n            colObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                cols: colObj\r\n            }\r\n        case 'SET_CURR_DATE':\r\n            return {\r\n                ...state,\r\n                currDate: action.payload.date\r\n            }\r\n        case 'SET_DATE_INDEX':\r\n            return {\r\n                ...state,\r\n                currDateIndex: action.payload.index\r\n            }\r\n        case 'SET_START_DATE_INDEX':\r\n            return {\r\n                ...state,\r\n                startDateIndex: action.payload.index\r\n            }\r\n        case 'SET_BINS':\r\n            let binsObj = {};\r\n            binsObj['bins'] =  action.payload.bins;\r\n            binsObj['breaks'] =  action.payload.breaks;\r\n            return {\r\n                ...state,\r\n                bins: binsObj\r\n            }\r\n        case 'SET_3D':\r\n            return {\r\n                ...state,\r\n                use3D: !state.use3D\r\n            }\r\n        case 'SET_DATA_SIDEBAR':\r\n            return {\r\n                ...state,\r\n                sidebarData: action.payload.data\r\n            }\r\n        case 'INCREMENT_DATE':\r\n            let dateObj = {\r\n                ...state.dataParams\r\n            }\r\n            if (action.payload.index+state.dataParams.nIndex > state.dates[state.currentData].length) {\r\n                dateObj.nIndex = state.startDateIndex;\r\n                dateObj.dIndex = state.startDateIndex;\r\n                return {\r\n                    ...state,\r\n                    dataParams:dateObj\r\n                }\r\n            } else {\r\n                dateObj.nIndex = dateObj.nIndex + action.payload.index;\r\n                dateObj.dIndex = dateObj.dIndex + action.payload.index;\r\n                return {\r\n                    ...state,\r\n                    dataParams:dateObj\r\n                }\r\n            }\r\n        case 'SET_VARIABLE_PARAMS':\r\n            let paramObj = {\r\n                ...state.dataParams,\r\n                ...action.payload.params\r\n            }\r\n\r\n            if (paramObj.nType === 'time-series' && paramObj.nIndex === null) {\r\n                paramObj.nIndex = state.storedIndex;\r\n                paramObj.nRange = state.storedRange;\r\n            }\r\n            if (paramObj.dType === 'time-series' && paramObj.dIndex === null) {\r\n                paramObj.dIndex = state.storedIndex;\r\n                paramObj.dRange = state.storedRange;\r\n            }\r\n            if (paramObj.nType === 'characteristic' && state.dataParams.nType === 'time-series') {\r\n                return {\r\n                    ...state,\r\n                    storedIndex: state.dataParams.nIndex,\r\n                    storedRange: state.dataParams.nRange,\r\n                    dataParams: paramObj,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    dataParams: paramObj \r\n                }\r\n            }\r\n        case 'SET_MAP_PARAMS':\r\n            let mapParamObj = {\r\n                ...state.mapParams,\r\n                ...action.payload.params\r\n            }\r\n            return {\r\n                ...state,\r\n                mapParams: mapParamObj \r\n            }\r\n        case 'SET_VARIABLE_NAME':\r\n            return {\r\n                ...state,\r\n                currentVariable: action.payload.name\r\n            }\r\n        case 'SET_CHART_DATA':\r\n            return {\r\n                ...state,\r\n                chartData: action.payload.data\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { createStore} from 'redux';\r\nimport reducer from './reducers';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport WebFont from 'webfontloader';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\n\r\nWebFont.load({\r\n  google: {\r\n    families: ['Lato:300,400,700,900', 'Montserrat:400,600,800', 'Playfair Display:ital', 'sans-serif']\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}