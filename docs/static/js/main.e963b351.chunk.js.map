{"version":3,"sources":["actions/index.js","GeodaProxy.js","utils/dataFunction.js","utils/mapFunction.js","utils/getJson.js","utils/getParseCSV.js","utils/mergeData.js","utils/colIndex.js","utils/colLookup.js","utils/getDataForBins.js","utils/getDataForCharts.js","utils/getDataForLisa.js","utils/getCurrentWuuid.js","utils/getLisaValues.js","utils/getVarId.js","utils/getGeoidIndex.js","utils/loadGeojsonToGeoda.js","config/index.js","components/map.js","components/slider.js","components/legend.js","components/dataPanel.js","components/variablePanel.js","components/mainLineChart.js","App.js","constants/defaults.js","reducers/index.js","index.js"],"names":["storeData","data","name","type","payload","storeGeojson","setCurrentData","setColumnNames","setDate","date","setVariableParams","params","setMapParams","window","Module","isInt","n","Number","GeodaProxy","this","geojson_maps","map_uid","file_target","uint8_t_arr","Uint8Array","result","uint8_t_ptr","_malloc","length","HEAPU8","set","ccall","_free","map_type","get_map_type","cc","get_centroids","xx","get_x","yy","get_y","centroids","i","size","push","get","get_num_obs","col_name","get_numeric_col","order","include_lower_order","precision","rook_weights","queen_weights","is_arc","is_mile","min_distance_threshold","k","power","is_inverse","knn_weights","dist_thres","dist_weights","kernel","adaptive_bandwidth","use_kernel_diagonals","kernel_weights","kernel_bandwidth_weights","weight_uid","local_moran","values","local_moran1","toVecDouble","local_g","local_gstar","local_geary","local_joincount","idx","nbrs","get_neighbors","parseVecInt","vi","j","vvi","sub","vd","input","vs","VectorString","push_back","VectorDouble","isNaN","Infinity","sel_fields","bound_var","min_bound","method","col_names","toVecString","clusters_vec","redcap","parseVecVecInt","tabu_length","cool_rate","n_iter","maxp","break_name","sel_field","breaks_vec","custom_breaks1","custom_breaks","breaks","parseVecDouble","orig_breaks","bins","id_array","txt","toFixed","undefined","unshift","NEGATIVE_INFINITY","POSITIVE_INFINITY","v","min_val","max_val","cart","cartogram","x","y","r","get_radius","min_x","max_x","min_y","max_y","scale_x","scale_y","dataFn","numeratorData","numeratorProperty","index","range","denominatorData","denominatorProperty","denominatorIndex","denominatorRange","scale","mapFn","val","colors","url","gda_proxy","a","fetch","then","response","responseFromJson","clone","loadGeojsonToGeoda","json","console","log","getGeoidIndex","features","geoidIndex","tempData","getJson","joinCol","ok","text","Promise","reject","status","d3","rtn","Object","keys","getParseCSV","mergeData","featureCollection","featureCollectionJoinCol","joinData","joinDataNames","joinDataCol","dataDict","colNumCheck","parseInt","properties","isInteger","cols","merged","merge","colIndex","table","indexOf","colLookup","columns","dataset","property","getDataForBins","tableData","nType","numerProp","numerIndex","numerRange","denomTable","dType","denomProp","denomIndex","denomRange","t0","performance","now","tempIndex","tempDenomIndex","getDataForCharts","startIndex","dates","tempObj","sum","count","getDataForLisa","tempDict","GEOID","getCurrentWuuid","selectedDataset","w","CreateQueenWeights","get_uid","getLisaValues","geoids","all_zeros","clusters","sig","lisa","map_uuid","w_uuid","significances","getVarId","currentData","dataParams","numerator","nIndex","nRange","denominator","dProperty","dIndex","dRange","geoidOrder","indexOrder","arrayBuffer","ReadGeojsonMap","split","slice","lisaColorScale","initialViewState","latitude","longitude","zoom","pitch","bearing","DATA_URL","CONTINENTS","process","viewGlobe","GlobeView","id","controller","resolution","view","MapView","repeat","Map","useState","hoverInfo","setHoverInfo","globalMap","storedData","useSelector","state","storedGeojson","storedLisaData","mapParams","colorScale","dispatch","useDispatch","currLisaData","setCurrLisaData","useEffect","Layers","GeoJsonLayer","pickable","stroked","filled","wireframe","getFillColor","visible","mapType","extruded","use3d","opacity","f","hasOwnProperty","nProperty","GetFillColor","getElevation","GetHeight","updateTriggers","onHover","info","onClick","object","autoHighlight","style","position","left","top","width","height","layers","views","reuseMaps","mapStyle","preventStyleDiffing","mapboxApiAccessToken","zIndex","pointerEvents","background","padding","NAME","state_name","cases","deaths","SliderContainer","styled","Grid","DateButton","Button","PlayPauseButton","LineSlider","Slider","DateSlider","startDateIndex","timerId","setTimerId","customRange","setCustomRange","handleRangeButton","valuetext","value","container","spacing","visibility","item","xs","rate","interval","setInterval","o","clearInterval","handlePlayPause","viewBox","transform","d","valueLabelDisplay","onChange","event","newValue","getAriaValueText","valueLabelFormat","aria-labelledby","min","step","max","marginTop","ButtonGroup","orientation","color","aria-label","float","className","Legend","props","title","map","backgroundColor","labels","splice","cleanBins","label","DataPanel","hidePanel","setHidePanel","sidebarData","prev","version","useStyles","makeStyles","theme","formControl","margin","minWidth","borderBottom","twoUp","VariablePanel","classes","columnNames","currentVariable","PresetVariables","CountyVariables","StateVariables","FormControl","InputLabel","htmlFor","Select","ListSubheader","MenuItem","variable","target","includes","component","FormLabel","RadioGroup","FormControlLabel","control","Radio","overlay","resource","href","rel","src","MainLineChart","chartData","right","bottom","dataKey","stroke","dot","x1","getStartDate","x2","getEndDate","y1","y2","strokeOpacity","fill","isAnimationActive","App","set_gda_proxy","findDates","Date","parse","getColumns","names","geojson","csvs","joinCols","csvPromises","csv","all","waitForWASM","setTimeout","loadData","GetCentroids","getCentroids","setDates","getDates","tempId","binMode","nb","Math","pow","INITIAL_STATE","geodaProxy","storedCSV","currDate","currDateIndex","currentMethod","currentOverlay","currentResource","binType","activeGeoid","storedRange","currentGeoid","reducer","action","geoid","obj","geojsonObj","lisaObj","centroidsObj","proxy","datesObj","currentDataFn","fn","colObj","binsObj","use3D","dateObj","paramObj","storedIndex","mapParamObj","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","WebFont","load","google","families","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e963b351.chunk.js","sourcesContent":["let timer = null;\r\n\r\nexport const setGeoid = (geoid) => {\r\n    return {\r\n        type: 'SET_GEOID',\r\n        payload: {\r\n            geoid\r\n        }\r\n    }\r\n}\r\n\r\nexport const storeData = (data, name) => {\r\n    return {\r\n        type: 'SET_STORED_DATA',\r\n        payload: {\r\n            data,\r\n            name\r\n        }   \r\n    }\r\n}\r\n\r\nexport const storeGeojson = (data, name) => {\r\n    return {\r\n        type: 'SET_STORED_GEOJSON',\r\n        payload: {\r\n            data,\r\n            name\r\n        }   \r\n    }\r\n}\r\n\r\nexport const storeLisaValues = (data, name) => {\r\n    return {\r\n        type: 'SET_STORED_LISA_DATA',\r\n        payload: {\r\n            data,\r\n            name\r\n        }   \r\n    }\r\n}\r\n\r\nexport const setCurrentData = (data) => {\r\n    return {\r\n        type: 'SET_CURRENT_DATA',\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport const setGeodaProxy = (proxy) => {\r\n    return {\r\n        type: 'SET_GEODA_PROXY',\r\n        payload: {\r\n            proxy\r\n        }\r\n    }\r\n}\r\n\r\nexport const setCentroids = (data, name) => {\r\n    return {\r\n        type: 'SET_CENTROIDS',\r\n        payload: {\r\n            data,\r\n            name\r\n        }\r\n    }\r\n}\r\n\r\nexport const setDates = (data, name) => {\r\n    return {\r\n        type: 'SET_DATES',\r\n        payload: {\r\n            data,\r\n            name\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const setDataFunction = (fn) => {\r\n    return {\r\n        type: 'SET_DATA_FUNCTION',\r\n        payload: {\r\n            fn\r\n        }\r\n    }\r\n}\r\n\r\nexport const setColumnNames = (data, name) => {\r\n    return {\r\n        type: 'SET_COLUMN_NAMES',\r\n        payload: {\r\n            data,\r\n            name\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const setDate = (date) => {\r\n    return {\r\n        type: 'SET_CURR_DATE',\r\n        payload: {\r\n            date\r\n        }\r\n    }\r\n}\r\n\r\nexport const setDateIndex = (index) => {\r\n    return {\r\n        type: 'SET_DATE_INDEX',\r\n        payload: {\r\n            index\r\n        }\r\n    }\r\n}\r\n\r\nexport const setStartDateIndex = (index) => {\r\n    return {\r\n        type: 'SET_START_DATE_INDEX',\r\n        payload: {\r\n            index\r\n        }\r\n    }\r\n}\r\n\r\nexport const setBins = (bins, breaks) => {\r\n    return {\r\n        type: 'SET_BINS',\r\n        payload: {\r\n            bins,\r\n            breaks\r\n        }\r\n    }\r\n}\r\n\r\nexport const set3D = () => {\r\n    return {\r\n        type: 'SET_3D'\r\n    }\r\n}\r\n\r\nexport const setDataSidebar = ( data ) => {\r\n    return {\r\n        type: 'SET_DATA_SIDEBAR',\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport const incrementDate = ( index ) => {\r\n    return {\r\n        type: 'INCREMENT_DATE',\r\n        payload: {\r\n            index\r\n        }\r\n    }\r\n}\r\n\r\nexport const setVariableParams = ( params ) => {\r\n    return {\r\n        type: 'SET_VARIABLE_PARAMS',\r\n        payload: {\r\n            params\r\n        }\r\n    }\r\n}\r\n\r\nexport const setMapParams = ( params ) => {\r\n    return {\r\n        type: 'SET_MAP_PARAMS',\r\n        payload: {\r\n            params\r\n        }\r\n    }\r\n}\r\n\r\nexport const setChartData = ( data ) => {\r\n    return {\r\n        type: 'SET_CHART_DATA',\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport const setVariableName = ( name ) => {\r\n    return {\r\n        type: 'SET_VARIABLE_NAME',\r\n        payload: {\r\n            name\r\n        }\r\n    }\r\n}","var Module = window.Module;\r\n\r\nfunction isInt(n) {\r\n  return Number(n) === n && n % 1 === 0;\r\n}\r\n\r\nclass GeodaProxy {\r\n  // file_target is evt.target\r\n  constructor() {\r\n    this.geojson_maps = {};\r\n  }\r\n\r\n  ReadGeojsonMap(map_uid, file_target) {\r\n    //evt.target.result is an ArrayBuffer. In js, \r\n    const uint8_t_arr = new Uint8Array(file_target.result);\r\n    //First we need to allocate the wasm memory. \r\n    const uint8_t_ptr = window.Module._malloc(uint8_t_arr.length);\r\n    //Now that we have a block of memory we can copy the file data into that block\r\n    window.Module.HEAPU8.set(uint8_t_arr, uint8_t_ptr);\r\n    // pass the address of the wasm memory we just allocated to our function\r\n    //window.Module.new_geojsonmap(map_uid, uint8_t_ptr, uint8_t_arr.length);\r\n    window.Module.ccall(\"new_geojsonmap1\", null, [\"string\", \"number\", \"number\"], [map_uid, uint8_t_ptr, uint8_t_arr.length]);\r\n\r\n    //Lastly, according to the docs, we should call ._free here.\r\n    window.Module._free(uint8_t_ptr);\r\n    // store the map and map type\r\n    let map_type = window.Module.get_map_type(map_uid);\r\n    this.geojson_maps[map_uid] = map_type;\r\n    return map_uid;\r\n  }\r\n\r\n  Has(map_uid) {\r\n    return map_uid in this.geojson_maps;\r\n  }\r\n\r\n  List() {\r\n    return this.geojson_maps;\r\n  }\r\n\r\n  GetCentroids(map_uid) {\r\n    let cc = window.Module.get_centroids(map_uid);\r\n    let xx = cc.get_x();\r\n    let yy = cc.get_y();\r\n    var centroids = [];\r\n    for (let i = 0; i < xx.size(); ++i) {\r\n      centroids.push([xx.get(i), yy.get(i)]);\r\n    }\r\n    return centroids;\r\n  }\r\n\r\n  GetNumObs(map_uid) {\r\n    let n = window.Module.get_num_obs(map_uid);\r\n    return n;\r\n  }\r\n\r\n  GetMapType(map_uid) {\r\n    return this.geojson_maps[map_uid];\r\n  }\r\n\r\n  GetNumericCol(map_uid, col_name) {\r\n    // return VectorDouble\r\n    return window.Module.get_numeric_col(map_uid, col_name)\r\n  }\r\n\r\n  CreateRookWeights(map_uid, order, include_lower_order, precision) {\r\n    let w_uid = window.Module.rook_weights(map_uid, order, include_lower_order, precision);\r\n    return w_uid;\r\n  }\r\n\r\n  CreateQueenWeights(map_uid, order, include_lower_order, precision) {\r\n    let w_uid = window.Module.queen_weights(map_uid, order, include_lower_order, precision);\r\n    return w_uid;\r\n  }\r\n\r\n  GetMinDistThreshold(map_uid, is_arc, is_mile) {\r\n    let val = window.Module.min_distance_threshold(map_uid, is_arc, is_mile);\r\n    return val;\r\n  }\r\n\r\n  CreateKnnWeights(map_uid, k, power, is_inverse, is_arc, is_mile) {\r\n    let w = window.Module.knn_weights(map_uid, k, power, is_inverse, is_arc, is_mile);\r\n    return w;\r\n  }\r\n\r\n  CreateDistWeights(map_uid, dist_thres, power, is_inverse, is_arc, is_mile) {\r\n    let w = window.Module.dist_weights(map_uid, dist_thres, power, is_inverse, is_arc, is_mile);\r\n    return w;\r\n  }\r\n\r\n  CreateKernelWeights(map_uid, k, kernel, adaptive_bandwidth, use_kernel_diagonals, is_arc, is_mile) {\r\n    let w = window.Module.kernel_weights(map_uid, k, kernel, adaptive_bandwidth, use_kernel_diagonals, is_arc, is_mile);\r\n    return w;\r\n  }\r\n\r\n  CreateKernelBandwidthWeights(map_uid, dist_thres, kernel, use_kernel_diagonals, is_arc, is_mile) {\r\n    let w = window.Module.kernel_bandwidth_weights(map_uid, dist_thres, kernel, use_kernel_diagonals, is_arc, is_mile);\r\n    return w;\r\n  }\r\n\r\n  local_moran(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_moran(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  local_moran1(map_uid, weight_uid, values) {\r\n    return window.Module.local_moran1(map_uid, weight_uid, this.toVecDouble(values));\r\n  }\r\n\r\n  local_g(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_g(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  local_gstar(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_gstar(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  local_geary(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_geary(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  local_joincount(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_joincount(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  GetNeighbors(map_uid, weight_uid, idx) {\r\n    let nbrs = window.Module.get_neighbors(map_uid, weight_uid, idx);\r\n    return this.parseVecInt(nbrs);\r\n  }\r\n\r\n  parseVecInt(vi) {\r\n    let result = [];\r\n    for (let j = 0; j < vi.size(); ++j) {\r\n      result.push(vi.get(j));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  parseVecVecInt(vvi) {\r\n    let result = [];\r\n    for (let i = 0; i < vvi.size(); ++i) {\r\n      let sub = [];\r\n      let vi = vvi.get(i);\r\n      for (let j = 0; j < vi.size(); ++j) {\r\n        sub.push(vi.get(j));\r\n      }\r\n      result.push(sub);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  parseVecDouble(vd) {\r\n    let result = []\r\n    for (let i = 0; i < vd.size(); ++i) {\r\n      result.push(vd.get(i));\r\n    }\r\n    return result;\r\n  }\r\n\r\n\r\n  toVecString(input) {\r\n    let vs = new window.Module.VectorString();\r\n    for (let i = 0; i < input.length; ++i) {\r\n      vs.push_back(input[i]);\r\n    }\r\n    return vs;\r\n  }\r\n\r\n  toVecDouble(input) {\r\n    let vs = new window.Module.VectorDouble();\r\n    for (let i = 0; i < input.length; ++i) {\r\n      if (isNaN(input[i]) || input[i] == Infinity)\r\n        vs.push_back(0);\r\n      else\r\n        vs.push_back(input[i]);\r\n    }\r\n    return vs;\r\n  }\r\n\r\n  redcap(map_uid, weight_uid, k, sel_fields, bound_var, min_bound, method) {\r\n    let col_names = this.toVecString(sel_fields);\r\n    let clusters_vec = window.Module.redcap(map_uid, weight_uid, k, col_names, bound_var, min_bound, method);\r\n    let clusters = this.parseVecVecInt(clusters_vec);\r\n    return clusters;\r\n  }\r\n\r\n  maxp(map_uid, weight_uid, k, sel_fields, bound_var, min_bound, method, tabu_length, cool_rate, n_iter) {\r\n    let col_names = this.toVecString(sel_fields);\r\n    let clusters_vec = window.Module.maxp(map_uid, weight_uid, col_names, bound_var, min_bound, tabu_length, cool_rate, method, k, n_iter);\r\n    let clusters = this.parseVecVecInt(clusters_vec);\r\n    return clusters;\r\n  }\r\n\r\n  custom_breaks(map_uid, break_name, k, sel_field, values) {\r\n    var breaks_vec;\r\n    if (sel_field == null) {\r\n      breaks_vec = window.Module.custom_breaks1(map_uid, k, break_name, this.toVecDouble(values));\r\n    } else {\r\n      breaks_vec = window.Module.custom_breaks(map_uid, k, sel_field, break_name);\r\n    }\r\n    let breaks = this.parseVecDouble(breaks_vec);\r\n    var orig_breaks = breaks;\r\n\r\n    let bins = [];\r\n    let id_array = [];\r\n    for (let i = 0; i < breaks.length; ++i) {\r\n      id_array.push([]);\r\n      let txt = isInt(breaks[i]) ? breaks[i] : breaks[i].toFixed(2);\r\n      bins.push(\"\" + txt);\r\n    }\r\n    id_array.push([]);\r\n    let txt = breaks[breaks.length - 1];\r\n    if (txt != undefined) {\r\n      txt = isInt(txt) ? txt : txt.toFixed(2);\r\n      bins.push(\">\" + txt);\r\n    }\r\n\r\n    breaks.unshift(Number.NEGATIVE_INFINITY);\r\n    breaks.push(Number.POSITIVE_INFINITY);\r\n\r\n    for (let i = 0; i < values.length; ++i) {\r\n      let v = values[i];\r\n      for (let j = 0; j < breaks.length - 1; ++j) {\r\n        let min_val = breaks[j];\r\n        let max_val = breaks[j + 1];\r\n        if (v >= min_val && v < max_val) {\r\n          id_array[j].push(i);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < bins.length; ++i) {\r\n      //bins[i] += \" (\" + id_array[i].length + ')';\r\n    }\r\n\r\n    return {\r\n      'k': k,\r\n      'bins': bins,\r\n      'breaks': orig_breaks,\r\n      'id_array': id_array\r\n    }\r\n  }\r\n\r\n  cartogram(map_uid, values) {\r\n    let cart = window.Module.cartogram(map_uid, this.toVecDouble(values));\r\n    let x = cart.get_x();\r\n    let y = cart.get_y();\r\n    let r = cart.get_radius();\r\n    // rescale x, y [-100,0], [0, 45]\r\n    let min_x = x.get(0);\r\n    let max_x = x.get(0);\r\n    let min_y = y.get(0);\r\n    let max_y = y.get(0);\r\n    for (let i = 0; i < x.size(); ++i) {\r\n      if (min_x > x.get(i)) min_x = x.get(i);\r\n      if (max_x < x.get(i)) max_x = x.get(i);\r\n      if (min_y > y.get(i)) min_y = y.get(i);\r\n      if (max_y < y.get(i)) max_y = y.get(i);\r\n    }\r\n    let scale_x = 100.0 / (max_x - min_x);\r\n    let scale_y = 45.0 / (max_y - min_y);\r\n\r\n\r\n    var result = [];\r\n    for (let i = 0; i < x.size(); ++i) {\r\n      let xx = (x.get(i) - min_x) * scale_x;\r\n      let yy = (y.get(i) - min_y) * scale_y;\r\n      result.push({\r\n        'properties': {\r\n          'id': i\r\n        },\r\n        'position': [x.get(i) / 10000.0, y.get(i) / 10000.0],\r\n        'radius': r.get(i)\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default GeodaProxy","// branchless variant\r\n// const dataFn = (numeratorData, numeratorProperty, index, range, denominatorData, denominatorProperty, denominatorIndex, denominatorRange, scale)  => {\r\n\r\n//     return (\r\n//       (\r\n//         (\r\n//           (\r\n//             (numeratorData[index]||numeratorData[numeratorProperty])\r\n//             -\r\n//             ((range!==null)&&(numeratorData[index-range]))\r\n//           )\r\n          \r\n//           /\r\n//           (range+(range===null))\r\n//         )\r\n//       /\r\n//         (\r\n//           (\r\n//             (\r\n//               (denominatorData[denominatorIndex]||denominatorData[denominatorProperty])\r\n//               -\r\n//               ((denominatorRange!==null)&&(denominatorData[denominatorIndex-denominatorRange]))\r\n//             )\r\n//             /\r\n//             (denominatorRange+(denominatorRange===null))\r\n//           )\r\n//           ||\r\n//             (denominatorData[denominatorProperty])\r\n//           || \r\n//           1\r\n//         )\r\n//       )\r\n//       *\r\n//       scale\r\n//     )\r\n// }\r\n\r\n// export default dataFn;\r\n\r\nconst dataFn = (numeratorData, numeratorProperty, index, range, denominatorData, denominatorProperty, denominatorIndex, denominatorRange, scale)  => {\r\n  if (numeratorData === undefined) {\r\n    return 0;\r\n  } else if (denominatorProperty===null&&range===null){ // whole count or number -- no range, no normalization\r\n    return (numeratorData[numeratorProperty]||numeratorData[index])*scale\r\n  } else if (denominatorProperty===null&&range!==null){ // range number, daily or weekly count -- no normalization\r\n    return (numeratorData[index]-numeratorData[index-range])/range*scale\r\n  } else if (denominatorProperty!==null&&range===null){ // whole count or number normalized -- no range\r\n    return (numeratorData[numeratorProperty]||numeratorData[index])/(denominatorData[denominatorProperty]||denominatorData[denominatorIndex])*scale\r\n  } else if (denominatorProperty!==null&&range!==null&&denominatorRange===null){ // range number, daily or weekly count, normalized to a single value\r\n    return ((numeratorData[index]-numeratorData[index-range])/range)/(denominatorData[denominatorProperty]||denominatorData[denominatorIndex])*scale\r\n  } else if (denominatorProperty!==null&&range!==null&&denominatorRange!==null){ // range number, daily or weekly count, normalized to a range number, daily or weekly count\r\n    return ((numeratorData[index]-numeratorData[index-range])/range)/((denominatorData[denominatorIndex]-denominatorData[denominatorIndex-denominatorRange])/denominatorRange)*scale\r\n  } else {      \r\n    return 0;\r\n  }\r\n}\r\n\r\nexport default dataFn;","const mapFn = (val, bins, colors) => {\r\n    if (val == 0) return colors[0];\r\n    for (let i=1; i<bins.length; i++) {\r\n      if (val < bins[i]) {\r\n        return colors[i]\r\n      }\r\n    }\r\n    return colors[0];\r\n}\r\n\r\nexport default mapFn","import { loadGeojsonToGeoda, getGeoidIndex } from '../utils';\r\n\r\nasync function getJson(url, gda_proxy){\r\n    const tempData = await fetch(url)\r\n      .then(response => {\r\n\r\n        const responseFromJson = response.clone();        \r\n\r\n        loadGeojsonToGeoda(responseFromJson, url, gda_proxy);\r\n\r\n        return response.json();\r\n\r\n      }).then(data => {\r\n        console.log(getGeoidIndex(data.features))\r\n\r\n        return {\r\n          data: data,\r\n          geoidIndex: getGeoidIndex(data.features)\r\n        }\r\n        \r\n      });     \r\n      \r\n    return tempData;\r\n}\r\nexport default getJson;","import * as d3 from 'd3-dsv';\r\n\r\nasync function getParseCSV(url, joinCol){\r\n    const tempData = await fetch(url)\r\n      .then(response => {\r\n        return response.ok ? response.text() : Promise.reject(response.status);\r\n      }).then(text => {\r\n        let data = d3.csvParse(text, d3.autoType)\r\n        let rtn = {};\r\n        let n = data.length;\r\n        while (n>0){\r\n          n--;\r\n          rtn[data[n][joinCol]] = Object.values(data[n])\r\n        }\r\n        return [rtn, Object.keys(data[0])]\r\n      });\r\n    return tempData;\r\n}\r\n\r\nexport default getParseCSV","import { merge } from 'lodash';\r\n\r\nconst mergeData = (featureCollection, featureCollectionJoinCol, joinData, joinDataNames, joinDataCol) => {\r\n    // declare parent dictionaries\r\n    let features = {}\r\n    let dataDict = {}\r\n\r\n    let baseColumnLength = Object.keys(featureCollection.features[0]).length;\r\n\r\n    // declare and prep feature collection object\r\n    let i = featureCollection.features.length;\r\n    let colNumCheck = parseInt(featureCollection.features[0].properties[featureCollectionJoinCol])\r\n    if (Number.isInteger(colNumCheck)) {\r\n      while (i>0) {\r\n        i--;\r\n        features[parseInt(featureCollection.features[i].properties[featureCollectionJoinCol])] = featureCollection.features[i];\r\n        dataDict[parseInt(featureCollection.features[i].properties[featureCollectionJoinCol])] = {};\r\n      }\r\n    } else {\r\n      while (i>0) {\r\n        i--;\r\n        features[featureCollection.features[i].properties[featureCollectionJoinCol]] = featureCollection.features[i];\r\n        dataDict[featureCollection.features[i].properties[featureCollectionJoinCol]] = {};\r\n      }\r\n    }\r\n  \r\n    // // declare data objects\r\n    // for (let n=0; n < joinDataNames.length; n++) {\r\n    //   dataDict[`${joinDataNames[n]}`] = {}\r\n    // }\r\n  \r\n    // loop through data and add to dictionaries\r\n    let n = joinData.length;\r\n    while (n>0) {\r\n      n--;\r\n      let cols = Object.keys(joinData[n][0]);\r\n      i = cols.length;\r\n      while (i>0) {\r\n        i--;\r\n        try {\r\n          dataDict[cols[i]][joinDataNames[n]] = joinData[n][0][cols[i]]\r\n        } catch {}\r\n      }\r\n    }\r\n    \r\n    // // use lodash to merge data\r\n    let merged = merge(features, dataDict)\r\n    // for (let n=1; n < joinDataNames.length; n++){\r\n    //   merged = merge(merged, dataDict[joinDataNames[n]])\r\n    // }\r\n    \r\n    // clean data\r\n    let rtn = [];\r\n    let keys = Object.keys(merged)\r\n    \r\n    for (let i = 0; i < keys.length; i++) {\r\n      // if (Object.keys(merged[keys[i]]).length == (joinDataNames.length+baseColumnLength)) rtn.push(merged[keys[i]])\r\n      rtn.push(merged[keys[i]])\r\n    }\r\n\r\n    return rtn;\r\n}\r\n\r\nexport default mergeData;","const colIndex = (data, table, date) => {\r\n    return data[table].indexOf(date);\r\n}\r\n\r\nexport default colIndex","const colLookup = (columns, dataset, table, property) => {\r\n    try {\r\n        return columns[dataset][table].indexOf(property); \r\n    } catch {\r\n        return null;\r\n    }\r\n}\r\nexport default colLookup;","import dataFn from './dataFunction';\r\n\r\n// this function loops through the current data set and provides data for GeodaJS to create custom breaks \r\nconst getDataForBins = (tableData, table, nType, numerProp, numerIndex, numerRange, denomTable, dType, denomProp, denomIndex, denomRange, scale) => {\r\n    let t0 = performance.now() // logging performance\r\n\r\n    // declare empty array for return variables\r\n    let rtn = [];\r\n\r\n    // length of data table to loop through\r\n    let n = tableData.length;\r\n\r\n    // this checks if the bins generated should be dynamic (generating for each date) or fixed (to the most recent date)\r\n    if (numerIndex === null && numerProp === null) {\r\n        // if fixed, get the most recent date\r\n        let tempIndex = tableData[0][table].length-1;\r\n        \r\n        // if the denominator is time series data (eg. deaths / cases this week), make the indices the same (most recent)\r\n        let tempDenomIndex = dType === 'time-series' ? tableData[0][denomTable].length-1 : denomIndex;\r\n\r\n        // loop through, do appropriate calculation. add returned value to rtn array\r\n        while (n>0) {\r\n            n--;\r\n            rtn.unshift(dataFn(tableData[n][table], numerProp, tempIndex, numerRange, tableData[n][denomTable], denomProp, tempDenomIndex, denomRange, scale))\r\n        }\r\n    } else {\r\n       while (n>0) {\r\n            n--;\r\n            rtn.unshift(dataFn(tableData[n][table], numerProp, numerIndex, numerRange, tableData[n][denomTable], denomProp, denomIndex, denomRange, scale))\r\n        }\r\n    }\r\n\r\n    console.log(performance.now() - t0);\r\n\r\n    return rtn;   \r\n}\r\nexport default getDataForBins","import dataFn from './dataFunction';\r\n\r\nconst getDataForCharts = (data, table, startIndex, dates) => {\r\n    let t0 = performance.now()\r\n    let features = Object.keys(data);\r\n    let n = startIndex;\r\n    let rtn = []\r\n\r\n    while (n<data[features[0]][table].length) {\r\n        let tempObj = {};\r\n        let sum = 0;\r\n        let i = 0;\r\n\r\n        while (i<features.length) {\r\n            if (data[features[i]][table]!== undefined) sum += data[features[i]][table][n]\r\n            // tempObj[`n${i}`] = data[features[i]][table][n]\r\n            i++;\r\n        }\r\n        tempObj.count = sum\r\n        tempObj.date = dates[n-startIndex]\r\n        rtn.push(tempObj);\r\n        n++;\r\n    }\r\n    \r\n    console.log(performance.now() - t0);\r\n    return rtn;\r\n\r\n}\r\n\r\nexport default getDataForCharts","import dataFn from './dataFunction';\r\n\r\n// this function loops through the current data set and provides data for GeodaJS to create custom breaks \r\nconst getDataForLisa = (tableData, table, nType, numerProp, numerIndex, numerRange, denomTable, dType, denomProp, denomIndex, denomRange, scale, order) => {\r\n    let t0 = performance.now() // logging performance\r\n\r\n    // declare empty array for return variables\r\n    let tempDict = {};\r\n\r\n    // length of data table to loop through\r\n    let n = tableData.length;\r\n\r\n    // this checks if the bins generated should be dynamic (generating for each date) or fixed (to the most recent date)\r\n    if (numerIndex === null && numerProp === null) {\r\n        // if fixed, get the most recent date\r\n        let tempIndex = tableData[0][table].length-1;\r\n        \r\n        // if the denominator is time series data (eg. deaths / cases this week), make the indices the same (most recent)\r\n        let tempDenomIndex = dType === 'time-series' ? tableData[0][denomTable].length-1 : denomIndex;\r\n\r\n        // loop through, do appropriate calculation. add returned value to rtn array\r\n        while (n>0) {\r\n            n--;\r\n            tempDict[tableData[n].properties.GEOID] = dataFn(tableData[n][table], numerProp, tempIndex, numerRange, tableData[n][denomTable], denomProp, tempDenomIndex, denomRange, scale)\r\n        }\r\n    } else {\r\n       while (n>0) {\r\n            n--;\r\n            tempDict[tableData[n].properties.GEOID] = dataFn(tableData[n][table], numerProp, numerIndex, numerRange, tableData[n][denomTable], denomProp, denomIndex, denomRange, scale)\r\n        }\r\n    }\r\n    \r\n    let rtn = [];\r\n\r\n    n = 0;\r\n    let keys = Object.keys(order)\r\n    while (n<keys.length) {\r\n        rtn.push(tempDict[order[keys[n]]]);\r\n        n++;\r\n    }\r\n\r\n    console.log(performance.now() - t0);\r\n\r\n    return rtn;\r\n    \r\n}\r\nexport default getDataForLisa","const getCurrentWuuid = (gda_proxy, selectedDataset) => {\r\n    var w = gda_proxy.CreateQueenWeights(selectedDataset, 1, 0, 0);\r\n\r\n    return {\r\n      'map_uuid': selectedDataset,\r\n      'w': w,\r\n      'w_uuid': w.get_uid()\r\n    };\r\n}\r\n\r\nexport default getCurrentWuuid","import getCurrentWuuid from './getCurrentWuuid.js';\r\n\r\nconst getLisaValues = (gda_proxy, dataset, data, geoids) => {\r\n  let w = getCurrentWuuid(gda_proxy, dataset);\r\n  let all_zeros = true;\r\n  for (let i=0; i<data.length; ++i) { \r\n    if (data[i] != 0)\r\n      all_zeros = false;\r\n  }\r\n  let clusters = [];\r\n  let sig = [];\r\n\r\n  if (all_zeros) {\r\n    for (let i=0; i<data.length; ++i) { \r\n      clusters.push(0);\r\n      sig.push(0);\r\n    }\r\n  } else {\r\n    var lisa = gda_proxy.local_moran1(w.map_uuid, w.w_uuid, data);\r\n    clusters = gda_proxy.parseVecDouble(lisa.clusters());\r\n    sig = gda_proxy.parseVecDouble(lisa.significances());\r\n  }\r\n  \r\n  return clusters;\r\n}\r\n\r\nexport default getLisaValues;","const getVarId = (currentData, dataParams) => {\r\n    return `${currentData}-${dataParams.numerator}-${dataParams.nIndex}-${dataParams.nRange}-${dataParams.denominator}-${dataParams.dProperty}-${dataParams.dIndex}-${dataParams.dRange}-${dataParams.scale}`\r\n}\r\n\r\nexport default getVarId;","const getGeoidIndex = (features) => {\r\n    let geoidOrder = {};\r\n    let indexOrder = {};\r\n    let i = 0\r\n    while (i<features.length) {\r\n        geoidOrder[features[i].properties.GEOID] = i\r\n        indexOrder[i] = features[i].properties.GEOID\r\n        i++;\r\n    }\r\n\r\n    return {geoidOrder, indexOrder};\r\n}\r\nexport default getGeoidIndex","const loadGeojsonToGeoda = async (data, url, gda_proxy) => {\r\n  const arrayBuffer = await data.arrayBuffer();\r\n\r\n  gda_proxy.ReadGeojsonMap('/geojson/county_usfacts.geojson'.split('/').slice(-1,)[0], {\r\n      result: arrayBuffer,\r\n  });\r\n}\r\n\r\nexport default loadGeojsonToGeoda;","export const lisaColorScale = [\r\n    [255,255,255],\r\n    [255,0,0],\r\n    [0,0,255],\r\n    [167, 173, 249],\r\n    [244, 173, 168],\r\n    [70, 70, 70],\r\n    [153, 153, 153]\r\n]","import React, { useState, useEffect } from 'react';\r\nimport DeckGL from '@deck.gl/react';\r\nimport {MapView, _GlobeView as GlobeView} from '@deck.gl/core';\r\nimport ReactMapGL from 'react-map-gl';\r\nimport { GeoJsonLayer, PolygonLayer } from '@deck.gl/layers';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setDataSidebar } from '../actions';\r\nimport { mapFn, dataFn, getVarId } from '../utils';\r\nimport { lisaColorScale } from '../config';\r\n\r\nconst MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoibGl4dW45MTAiLCJhIjoiY2locXMxcWFqMDAwenQ0bTFhaTZmbnRwaiJ9.VRNeNnyb96Eo-CorkJmIqg';\r\n\r\nconst initialViewState = {\r\n    latitude: 35.850033,\r\n    longitude: -105.6500523,\r\n    zoom: 3.5,\r\n    pitch:0,\r\n    bearing:0\r\n}\r\nconst DATA_URL = {\r\n    CONTINENTS: `${process.env.PUBLIC_URL}/geojson/world50m.json`\r\n}\r\n\r\nconst viewGlobe = new GlobeView({id: 'globe', controller: false, resolution:1});\r\nconst view = new MapView({repeat: true});\r\n\r\nconst Map = () => { \r\n    \r\n    const [hoverInfo, setHoverInfo] = useState(false);\r\n    const [globalMap, setGlobalMap] = useState(false);\r\n\r\n    const storedData = useSelector(state => state.storedData);\r\n    const storedGeojson = useSelector(state => state.storedGeojson);\r\n    const currentData = useSelector(state => state.currentData);\r\n    const storedLisaData = useSelector(state => state.storedLisaData);\r\n    \r\n    const dataParams = useSelector(state => state.dataParams);\r\n    const mapParams = useSelector(state => state.mapParams);\r\n\r\n    const colorScale = useSelector(state => state.colorScale);\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const [currLisaData, setCurrLisaData] = useState({})\r\n\r\n    useEffect(() => {\r\n        let tempData = storedLisaData[getVarId(currentData, dataParams)]\r\n        if (tempData !== undefined) setCurrLisaData(tempData);\r\n    }, [storedLisaData, dataParams, mapParams])\r\n\r\n    const GetFillColor = (f, bins, mapType) => {\r\n        if (!bins.hasOwnProperty(\"bins\")) {\r\n            return [0,0,0]\r\n        } else if (mapType === 'lisa') {\r\n            return lisaColorScale[currLisaData[storedGeojson[currentData]['geoidOrder'][f.properties.GEOID]]]\r\n        } else {\r\n            return mapFn(dataFn(f[dataParams.numerator], dataParams.nProperty, dataParams.nIndex, dataParams.nRange, f[dataParams.denominator], dataParams.dProperty, dataParams.dIndex, dataParams.dRange, dataParams.scale), bins.breaks, colorScale) \r\n        }\r\n    }\r\n    \r\n    const GetHeight = (f, bins) => bins.hasOwnProperty(\"bins\") ? dataFn(f[dataParams.numerator], dataParams.nProperty, dataParams.nIndex, dataParams.nRange, f[dataParams.denominator], dataParams.dProperty, dataParams.dIndex, dataParams.dRange, dataParams.scale)*1000 : 0\r\n    \r\n    const Layers = [\r\n        new GeoJsonLayer({\r\n            id: 'base continents',\r\n            data: DATA_URL.CONTINENTS,\r\n            pickable: false,\r\n            stroked: false,\r\n            filled: true,\r\n            wireframe: false,\r\n            getFillColor: [30,30,30]\r\n        }),\r\n        new GeoJsonLayer({\r\n            id: 'choropleth',\r\n            data: {\r\n                \"type\": \"FeatureCollection\",\r\n                \"name\": currentData,\r\n                \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\r\n                \"features\": storedData[currentData] ? storedData[currentData] : [],\r\n            },\r\n            visible: mapParams.mapType !== 'cartogram',\r\n            pickable: true,\r\n            stroked: false,\r\n            filled: true,\r\n            wireframe: false,\r\n            extruded: mapParams.use3d,\r\n            opacity: mapParams.use3d ? 1 : 0.5,\r\n            getFillColor: f => GetFillColor(f, mapParams.bins, mapParams.mapType),\r\n            getElevation: f => GetHeight(f, mapParams.bins, mapParams.mapType),\r\n            updateTriggers: {\r\n                data: currentData,\r\n                getFillColor: [dataParams, mapParams],\r\n                getElevation: [dataParams, mapParams],\r\n            },\r\n            onHover: info => setHoverInfo(info),\r\n            onClick: info => dispatch(setDataSidebar(info.object)),\r\n            autoHighlight: true,\r\n        }),\r\n    ]\r\n\r\n    return (\r\n        <div id=\"mapContainer\" style={{position:'fixed',left:0,top:0,width:'100%',height:'100%'}}>\r\n            <DeckGL\r\n            initialViewState={initialViewState}\r\n            controller={true}\r\n            layers={Layers}\r\n            views={globalMap ? viewGlobe : view} //enable this for globe view\r\n            >\r\n                <ReactMapGL\r\n                    reuseMaps\r\n                    mapStyle={'mapbox://styles/lixun910/ckhkoo8ix29s119ruodgwfxec'}\r\n                    preventStyleDiffing={true}\r\n                    mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\r\n                    >\r\n                </ReactMapGL >\r\n                {hoverInfo.object && (\r\n                <div style={{position: 'absolute', zIndex: 1, pointerEvents: 'none', left: hoverInfo.x, top: hoverInfo.y, background: 'white', padding:'0 10px'}}>\r\n                    <h5>{`${hoverInfo.object.properties.NAME},${hoverInfo.object.properties.state_name}`}</h5>\r\n                    {`Cases: ${hoverInfo.object.cases.slice(-1,)[0]}`}<br/>\r\n                    {`Deaths: ${hoverInfo.object.deaths.slice(-1,)[0]}`}<br/>\r\n                    {`New Cases: ${hoverInfo.object.cases.slice(-1,)[0]-hoverInfo.object.cases.slice(-2,-1)[0]}`}<br/>\r\n                    {`New Deaths: ${hoverInfo.object.deaths.slice(-1,)[0]-hoverInfo.object.deaths.slice(-2,-1)[0]}`}<br/>\r\n                    </div>\r\n                )}\r\n            </DeckGL>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default Map","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport styled from 'styled-components';\r\n\r\nimport { setDate, setVariableParams, incrementDate } from '../actions';\r\n// import { getParseCSV, getJson, mergeData, colIndex, getDataForBins } from './utils';\r\n\r\nconst SliderContainer = styled(Grid)`\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 5px 20px;\r\n    color: white;\r\n`\r\n\r\nconst DateButton = styled(Button)`\r\n    color:rgb(200,200,200);\r\n    background: none;\r\n    transition: 250ms all;\r\n    border-color: white !important;\r\n    font-size: 75% !important;\r\n    transition:250ms all;\r\n    &:hover {\r\n        color:white;\r\n    }\r\n    &.active {\r\n        cursor: initial;\r\n        font-size: 75%;\r\n        color:black !important;\r\n        background: white !important;\r\n        transition: 250ms all;\r\n        border-color: white;\r\n    }\r\n`\r\nconst PlayPauseButton = styled(Button)`\r\n    background:none;\r\n    transform:translateY(-100%);\r\n    svg {\r\n        g {\r\n            fill: white;\r\n        }\r\n    }\r\n`\r\n\r\nconst LineSlider = styled(Slider)`\r\n    color:white;\r\n    // span.MuiSlider-rail {\r\n    //     display:none;\r\n    // }\r\n    // span.MuiSlider-track {\r\n    //     display: none;\r\n    // }\r\n    span.MuiSlider-thumb {\r\n        .MuiSlider-valueLabel {\r\n            transform:translateY(-10px);\r\n            pointer-events:none;\r\n            span {\r\n                background: none;\r\n            }\r\n        }\r\n    }\r\n    span.MuiSlider-thumb.MuiSlider-active: {\r\n        box-shadow: 0px 0px 10px rgba(200,200,200,0.5);\r\n    }\r\n`\r\n\r\nconst DateSlider = () => {\r\n    const dispatch = useDispatch();  \r\n    \r\n    const currentData = useSelector(state => state.currentData);\r\n    const dates = useSelector(state => state.dates);\r\n    const dataParams = useSelector(state => state.dataParams);\r\n    const startDateIndex = useSelector(state => state.startDateIndex);\r\n    \r\n    const [timerId, setTimerId] = useState(null);\r\n    const [customRange, setCustomRange] = useState(false);\r\n    // const [useLog, setUseLog] = useState(false);\r\n    \r\n    const handleChange = (event, newValue) => {\r\n        if (dataParams.nType === \"time-series\" && dataParams.dType === \"time-series\") {\r\n            dispatch(setVariableParams({nIndex: newValue, dIndex: newValue}))\r\n        } else if (dataParams.nType === \"time-series\") {\r\n            dispatch(setVariableParams({nIndex: newValue}))\r\n        } else if (dataParams.dType === \"time-series\") {\r\n            dispatch(setVariableParams({dIndex: newValue}))\r\n        } \r\n        dispatch(setDate(dates[currentData][newValue]));\r\n    };\r\n\r\n    const handlePlayPause = (timerId, rate, interval) => {\r\n        if (timerId === null) {\r\n            setTimerId(setInterval(o => dispatch(incrementDate(rate)), interval))\r\n        } else {\r\n            clearInterval(timerId);\r\n            setTimerId(null)\r\n        }\r\n    }\r\n\r\n    const handleRangeButton = (val) => {\r\n        if (val === 'custom') { // if swapping over to a custom range, which will use a 2-part slider to scrub the range\r\n            setCustomRange(true)\r\n            if (dataParams.nType === \"time-series\" && dataParams.dType === \"time-series\") {\r\n                dispatch(setVariableParams({nRange: 14, dRange: 14}))\r\n            } else if (dataParams.nType === \"time-series\") {\r\n                dispatch(setVariableParams({nRange: 14}))\r\n            } else if (dataParams.dType === \"time-series\") {\r\n                dispatch(setVariableParams({dRange: 14}))\r\n            } \r\n        } else { // use the new value -- null for cumulative, 1 for daily, 7 for weekly\r\n            setCustomRange(false)\r\n            if (dataParams.nType === \"time-series\" && dataParams.dType === \"time-series\") {\r\n                dispatch(setVariableParams({nRange: val, dRange: val}))\r\n            } else if (dataParams.nType === \"time-series\") {\r\n                dispatch(setVariableParams({nRange: val}))\r\n            } else if (dataParams.dType === \"time-series\") {\r\n                dispatch(setVariableParams({dRange: val}))\r\n            }    \r\n        }\r\n    }\r\n    function valuetext(value) {\r\n        return `${dates[currentData][value]}`;\r\n    }\r\n\r\n    if (dates[currentData] !== undefined) {\r\n        return (\r\n            <SliderContainer container spacing={2} id=\"slider-container\" style={{visibility: (dataParams.nType === 'time-series' ? 'visible' : 'hidden')}}>\r\n                {/* <Grid item xs={12}>\r\n                    <h4 style={{textAlign:\"center\", color:\"white\"}}>{dates[currentData][dataParams.nIndex]||dates[currentData].slice(-1,)[0]}</h4>\r\n                </Grid> */}\r\n                <Grid item xs={1}>\r\n                    <PlayPauseButton id=\"playPause\" onClick={() => handlePlayPause(timerId, 1, 100)}>\r\n                        {timerId === null ? \r\n                            <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\r\n                                <g transform=\"translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)\">\r\n                                    <g>\r\n                                        <path d=\"M74.4,58.7L40.7,92.2c-7.1,7.2-18.7,4.4-18.7-6.3V14c0-10.7,11.6-13.5,18.7-6.3l33.6,33.5\r\n                                            C79.1,46,79.1,53.8,74.4,58.7z M69.1,53.4c1.9-1.9,1.9-5,0-6.7L35.5,13c-2.1-2.1-6-3.2-6,1.1V86c0,4.3,3.9,3.2,6,1.1L69.1,53.4z\"\r\n                                            />\r\n                                    </g>\r\n                                </g>\r\n                            </svg>\r\n                            : \r\n                            <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\r\n                                <g transform=\"translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)\">\r\n                                    <g>\r\n                                        <path d=\"M22.4,0.6c3.4,0,6.8,0,10.3,0c6.5,0,11.8,5.3,11.8,11.8c0,25,0,50.1,0,75.2c0,6.5-5.3,11.8-11.8,11.8\r\n                                            c-3.4,0-6.8,0-10.3,0c-6.5,0-11.8-5.3-11.8-11.8c0-25.1,0-50.2,0-75.2C10.6,5.9,15.9,0.6,22.4,0.6z M22.4,6.5c3.4,0,6.8,0,10.3,0\r\n                                            c3.2,0,5.9,2.6,5.9,5.9c0,25,0,50.1,0,75.2c0,3.2-2.7,5.9-5.9,5.9c-3.4,0-6.8,0-10.3,0c-3.2,0-5.9-2.7-5.9-5.9\r\n                                            c0-25.1,0-50.2,0-75.2C16.5,9.1,19.2,6.5,22.4,6.5z M67.3,6.5c3.4,0,6.8,0,10.2,0s6,2.6,6,5.9c0,25,0,50.1,0,75.2\r\n                                            c0,3.2-2.7,5.9-6,5.9s-6.7,0-10.2,0c-3.3,0-5.9-2.7-5.9-5.9c0-25.1,0-50.2,0-75.2C61.4,9.1,64,6.5,67.3,6.5z M67.3,0.6\r\n                                            c3.4,0,6.8,0,10.2,0c6.5,0,11.8,5.3,11.8,11.8c0,25,0,50.1,0,75.2c0,6.5-5.3,11.8-11.8,11.8c-3.3,0-6.7,0-10.2,0\r\n                                            c-6.5,0-11.8-5.3-11.8-11.8c0-25.1,0-50.2,0-75.2C55.5,5.9,60.8,0.6,67.3,0.6z\"/>\r\n                                    </g>\r\n                                </g>\r\n                            </svg>\r\n\r\n                        }\r\n                    </PlayPauseButton>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                    <LineSlider \r\n                        value={dataParams.nIndex} \r\n                        valueLabelDisplay=\"on\"\r\n                        onChange={handleChange} \r\n                        getAriaValueText={valuetext}\r\n                        valueLabelFormat={valuetext}\r\n                        aria-labelledby=\"aria-valuetext\"\r\n                        min={startDateIndex}\r\n                        step={1}\r\n                        max={dates[currentData].length-1}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2} style={{marginTop:'-120px'}}>\r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        color=\"primary\"\r\n                        aria-label=\"vertical outlined primary button group\"\r\n                        style={{float:'right'}}\r\n                    >\r\n                        <DateButton className={dataParams.nRange === null ? 'active' : ''} onClick={() => handleRangeButton(null)}>Total</DateButton>\r\n                        <DateButton className={dataParams.nRange === 1 ? 'active' : ''} onClick={() => handleRangeButton(1)}>New Daily</DateButton>\r\n                        <DateButton className={dataParams.nRange === 7 ? 'active' : ''} onClick={() => handleRangeButton(7)}>Weekly Average</DateButton>\r\n                        <DateButton className={customRange ? 'active' : ''} onClick={() => handleRangeButton('custom')}>Custom Range</DateButton>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            </SliderContainer>\r\n        );\r\n    } else {\r\n        return <SliderContainer />\r\n    }\r\n}\r\n\r\nexport default DateSlider","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst Legend = ( props ) => {\r\n\r\n    const cleanBins = (bins) => {\r\n        if (bins === undefined) {\r\n            return;\r\n        } else if (bins.slice(-1,)[0] !==`>${bins.slice(-2,-1)[0]}`) {\r\n            return bins\r\n        }\r\n        bins.splice(0, 1, `<${bins[0]}`)\r\n        bins.splice(-2, 1)\r\n        return bins\r\n    }\r\n\r\n    return (\r\n        <div id='legend'>\r\n            <Grid container spacing={2} id='legend-bins-container'>\r\n                <Grid item xs={6}>\r\n                    <h3>\r\n                        {props.title !== undefined && props.title}\r\n                    </h3>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <div id=\"binBars\">\r\n                        {props.colors !== undefined && \r\n                            props.colors.map(color => <div className=\"bin color\" key={`${color[0]}${color[1]}`}style={{backgroundColor:`rgb(${color[0]},${color[1]},${color[2]})`}}></div>)\r\n                        }\r\n                    </div>\r\n                    <div id=\"binLabels\" style={{padding: (`0 ${props.labels !== undefined ? 100/props.labels.length/2-1 : 0}%`) }}>\r\n                        <div className=\"bin label\">0</div>\r\n                        {props.labels !== undefined && \r\n                            cleanBins(props.labels).map(label => <div className=\"bin label\" key={label}>{label}</div>)\r\n                        }\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Legend","import React, {useState} from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst DataPanel = (props) => {\r\n\r\n  const [hidePanel, setHidePanel] = useState(true);\r\n  const sidebarData = useSelector(state => state.sidebarData);\r\n\r\n  // console.log(sidebarData)\r\n\r\n  return (\r\n    <div id=\"data-panel\" style={{transform: (hidePanel ? 'translateX(100%)' : '')}}>\r\n      <h2>Data Sources &amp;<br/> Map Variables</h2>\r\n      \r\n      <button onClick={() => setHidePanel(prev => { return !prev })} id=\"showHideRightPanel\" className={hidePanel ? 'hidden' : 'active'}>\r\n        <svg version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\r\n          <g transform=\"translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)\">\r\n            <path d=\"M38,33.8L23.9,47.9c-1.2,1.2-1.2,3.1,0,4.2L38,66.2l4.2-4.2l-9-9H71v17c0,0.6-0.4,1-1,1H59v6h11\r\n              c3.9,0,7-3.1,7-7V30c0-3.9-3.1-7-7-7H59v6h11c0.6,0,1,0.4,1,1v17H33.2l9-9L38,33.8z\"/>\r\n          </g>\r\n        </svg>\r\n\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataPanel;","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setVariableParams, setVariableName, setMapParams } from '../actions';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport { colLookup } from '../utils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 200,\r\n      color:'white',\r\n      padding:0,\r\n      margin: '0 10px 40px 0',\r\n      fontFamily: \"'Lato', sans-serif\",\r\n      '& > .MuiFormLabel-root': {\r\n        color:'white',\r\n      },\r\n      '& > .MuiInput-underline:before': {\r\n        borderBottom:'1px solid rgba(255,255, 255, 0.42)'\r\n      },\r\n      '& > .MuiInput-underline:after': {\r\n        borderBottom: '2px solid white'\r\n      },\r\n      '& > .MuiInputBase-root': {\r\n        color: 'white',\r\n        '& > .MuiSvgIcon-root': {\r\n          color: 'rgba(255,255,255,0.54)'\r\n        },\r\n        '& > .MuiPopover-paper': {\r\n          color:'white',\r\n          background:'black'\r\n        }\r\n      },\r\n      '& > .MuiFormGroup-root':{\r\n        '& > .MuiFormControlLabel-root': {\r\n          color:'white',\r\n          '& > .MuiRadio-root': {\r\n            color: 'rgba(255,255,255,0.54)'\r\n          },\r\n        }\r\n      }\r\n    },\r\n    twoUp: {\r\n      width:'100%',\r\n      '& > .MuiFormControl-root': {\r\n        width:'45%',\r\n        // display: 'inline',\r\n        minWidth:60\r\n      }\r\n    }\r\n}));\r\n\r\nconst VariablePanel = (props) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();  \r\n  \r\n  const columnNames = useSelector(state => state.cols);\r\n  const currentData = useSelector(state => state.currentData);\r\n  const currentVariable = useSelector(state => state.currentVariable);\r\n  const mapParams = useSelector(state => state.mapParams);\r\n\r\n  const [hidePanel, setHidePanel] = useState(false);\r\n  \r\n  const PresetVariables = {\r\n      \"Confirmed Count\": {\r\n          numerator: 'cases',\r\n          nType: 'time-series',\r\n          nProperty: null,\r\n          nRange: null,\r\n          denominator: 'properties',\r\n          dType: 'none',\r\n          dProperty: null,\r\n          dRange:null,\r\n          dIndex:null,\r\n          scale:1,\r\n      },\r\n      \"Confirmed Count per 100K Population\": {\r\n          numerator: 'cases',\r\n          nType: 'time-series',\r\n          nProperty: null,\r\n          denominator: 'properties',\r\n          dType: 'characteristic',\r\n          dProperty: 'population',\r\n          dRange:null,\r\n          dIndex:null,\r\n          scale:100000,\r\n      },\r\n      \"Confirmed Count per Licensed Bed\": {\r\n          numerator: 'cases',\r\n          nType: 'time-series',\r\n          nProperty: null,\r\n          denominator: 'properties',\r\n          dType: 'characteristic',\r\n          dProperty: 'beds',\r\n          dRange:null,\r\n          dIndex:null,\r\n          scale:1,\r\n      },\r\n      \"Death Count\":{\r\n        numerator: 'deaths',\r\n        nType: 'time-series',\r\n        nProperty: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n          \r\n      }, \r\n      \"Death Count per 100K Population\":{\r\n        numerator: 'deaths',\r\n        nType: 'time-series',\r\n        nProperty: null,\r\n        denominator: 'properties',\r\n        dType: 'characteristic',\r\n        dProperty: 'population',\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:100000,\r\n\r\n      },\r\n      \"Death Count / Confirmed Count\":{\r\n        numerator: 'deaths',\r\n        nType: 'time-series',\r\n        nProperty: null,\r\n        denominator: 'cases',\r\n        dType: 'time-series',\r\n        dProperty: null,\r\n        dIndex:null,\r\n        scale:1,\r\n\r\n      },\r\n      \"Uninsured % (Community Health Factor)\":{\r\n        numerator: 'chr_health_factors',\r\n        nType: 'characteristic',\r\n        nProperty: colLookup(columnNames, currentData, 'chr_health_factors', 'UnInPrc'),\r\n        nRange: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n\r\n      },\r\n      \"Over 65 Years % (Community Health Context)\":{\r\n        numerator: 'chr_health_context',\r\n        nType: 'characteristic',\r\n        nProperty: colLookup(columnNames, currentData, 'chr_health_context', 'Over65YearsPrc'),\r\n        nRange: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n      },\r\n      \"Life expectancy (Length and Quality of Life)\":{\r\n        numerator: 'chr_life',\r\n        nType: 'characteristic',\r\n        nProperty: colLookup(columnNames, currentData, 'chr_life', 'LfExpRt'),\r\n        nRange: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n      }\r\n  }\r\n\r\n  const CountyVariables = {\r\n      \"Forecasting (5-Day Severity Index)\": {\r\n        numerator: 'predictions',\r\n        nType: 'characteristic',\r\n        nProperty: colLookup(columnNames, currentData, 'predictions', 'severity_index'),\r\n        nRange: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n      }\r\n  }\r\n\r\n  const StateVariables = {\r\n      \"7 Day Testing Positivity Rate %\": {\r\n        numerator: 'testing_wk_pos',\r\n        nType: 'time-series',\r\n        nProperty: null,\r\n        nRange: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n      },\r\n      \"7 Day Testing Capacity\": {\r\n        numerator: 'testing_tcap',\r\n        nType: 'time-series',\r\n        nProperty: null,\r\n        nRange: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n      }, \r\n      \"7 Day Confirmed Cases per Testing %\":{\r\n        numerator: 'testing_ccpt',\r\n        nType: 'time-series',\r\n        nProperty: null,\r\n        nRange: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n      }\r\n  }\r\n\r\n  \r\n\r\n  const handleVariable = (event) => {\r\n      let variable = event.target.value;\r\n      // setCurrVariableName(variable);\r\n      dispatch(setVariableName(variable))\r\n\r\n      if (PresetVariables.hasOwnProperty(variable)) {\r\n          dispatch(setVariableParams({...PresetVariables[variable]}))\r\n      } else if (CountyVariables.hasOwnProperty(variable)){\r\n          dispatch(setVariableParams({...CountyVariables[variable]}))\r\n      } else {\r\n          dispatch(setVariableParams({...StateVariables[variable]}))\r\n      }\r\n          \r\n  };\r\n\r\n  const handleMapType = (event, newValue) =>{\r\n    console.log(newValue)\r\n      dispatch(\r\n        setMapParams(\r\n          {\r\n            'mapType': newValue\r\n          }\r\n        )\r\n      )\r\n  }\r\n\r\n  const handleMapOverlay = (event) =>{\r\n    dispatch(\r\n      setMapParams(\r\n        {\r\n          'overlay': event.target.value\r\n        }\r\n      )\r\n    )\r\n  }\r\n\r\n  const handleMapResource = (event) =>{\r\n    dispatch(\r\n      setMapParams(\r\n        {\r\n          'resource': event.target.value\r\n        }\r\n      )\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div id=\"variable-panel\" style={{transform: (hidePanel ? 'translateX(-100%)' : '')}}>\r\n      <h2>Data Sources &amp;<br/> Map Variables</h2>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"data-select\">Data Source</InputLabel>\r\n        <Select  \r\n          id=\"data-select\"\r\n        >\r\n          \r\n        <ListSubheader>County Data</ListSubheader>\r\n          <MenuItem value={'variable1'} key={'variable1'}>USA Facts</MenuItem>\r\n          <MenuItem value={'variable2'} key={'variable2'}>1point3acres</MenuItem>\r\n          <MenuItem value={'variable3'} key={'variable3'}>New York Times</MenuItem>\r\n        <ListSubheader>State Data</ListSubheader>\r\n          <MenuItem value={'variable4'} key={'variable4'}>1point3acres</MenuItem>\r\n          <MenuItem value={'variable5'} key={'variable5'}>New York Times</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <br />\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"numerator-select\">Select Variable</InputLabel>\r\n        <Select \r\n          value={currentVariable} \r\n          id=\"numerator-select\"\r\n          onChange={handleVariable}\r\n        >\r\n          {\r\n            Object.keys(PresetVariables).map((variable) => <MenuItem value={variable} key={variable}>{variable}</MenuItem> )\r\n          }\r\n          \r\n          {\r\n            currentData.includes(\"county\") && Object.keys(CountyVariables).map((variable) => <MenuItem value={variable} key={variable}>{variable}</MenuItem> )\r\n          }\r\n          \r\n          {\r\n            currentData.includes(\"state\") && Object.keys(StateVariables).map((variable) => <MenuItem value={variable} key={variable}>{variable}</MenuItem> )\r\n          }\r\n        </Select>\r\n      </FormControl>\r\n      <br/>\r\n      <FormControl component=\"fieldset\" className={classes.formControl}>\r\n        <FormLabel component=\"legend\">Map Type</FormLabel>\r\n        <RadioGroup \r\n          aria-label=\"maptype\" \r\n          name=\"maptype1\" \r\n          onChange={handleMapType} \r\n          value={mapParams.mapType}\r\n          >\r\n          <FormControlLabel value=\"choropleth\" control={<Radio />} label=\"Choropleth\" />\r\n          <FormControlLabel value=\"hinge15\" control={<Radio />} label=\"Box Map\" />\r\n          <FormControlLabel value=\"lisa\" control={<Radio />} label=\"Local Moran\" />\r\n          <FormControlLabel value=\"cartogram\" control={<Radio />} label=\"Cartogram\" />\r\n        </RadioGroup>\r\n      </FormControl>\r\n      <div className={classes.twoUp}>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"overlay-select\">Overlay</InputLabel>\r\n          <Select  \r\n            id=\"overlay-select\"\r\n            value={mapParams.overlay}\r\n            onChange={handleMapOverlay}\r\n          >\r\n            <MenuItem value=\"\" key={'None'}>None</MenuItem> \r\n            <MenuItem value={'native_american_reservations'} key={'variable1'}>Native American Reservations</MenuItem>\r\n            <MenuItem value={'hypersegregated_cities'} key={'variable2'}>Hypersegregated Cities</MenuItem>\r\n            <MenuItem value={'black_belt_counties'} key={'variable3'}>Black Belt Counties</MenuItem>\r\n            <MenuItem value={'us_congressional_districts'} key={'variable4'}>US Congressional Districts</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"resource-select\">Resource</InputLabel>\r\n          <Select  \r\n            id=\"resource-select\"\r\n            value={mapParams.resource}\r\n            onChange={handleMapResource}\r\n          >\r\n            <MenuItem value=\"\" key='None'>None</MenuItem> \r\n            <MenuItem value={'clinics_hospitals'} key={'variable1'}>Clinics and Hospitals</MenuItem>\r\n            <MenuItem value={'clinics'} key={'variable2'}>Clinics</MenuItem>\r\n            <MenuItem value={'hospitals'} key={'variable3'}>Hospitals</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <p className=\"note\">\r\n        Data is updated with freshest available data at 3pm CST daily, at minimum. \r\n        In case of data discrepancy, local health departments are considered most accurate as per CDC recommendations. \r\n        More information on <a href=\"data.html\">data</a>, <a href=\"methods.html\">methods</a>, \r\n        and <a href=\"FAQ.html\">FAQ</a> at main site.\r\n      </p>\r\n      <div className=\"poweredByGeoda\">\r\n            <a href=\"https://geodacenter.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <img src={`${process.env.PUBLIC_URL}/assets/img/geoda-logo.png`} />\r\n              POWERED BY GEODA\r\n            </a>\r\n        </div>\r\n      <button onClick={() => setHidePanel(prev => { return !prev })} id=\"showHideLeftPanel\" className={hidePanel ? 'hidden' : 'active'}>\r\n        <svg version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\r\n          <g transform=\"translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)\">\r\n            <path d=\"M38,33.8L23.9,47.9c-1.2,1.2-1.2,3.1,0,4.2L38,66.2l4.2-4.2l-9-9H71v17c0,0.6-0.4,1-1,1H59v6h11\r\n              c3.9,0,7-3.1,7-7V30c0-3.9-3.1-7-7-7H59v6h11c0.6,0,1,0.4,1,1v17H33.2l9-9L38,33.8z\"/>\r\n          </g>\r\n        </svg>\r\n\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VariablePanel;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, ReferenceArea, Tooltip, Legend, ResponsiveContainer\r\n} from 'recharts';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst MainLineChart = () => {\r\n    \r\n    const chartData = useSelector(state => state.chartData);\r\n    const dataParams = useSelector(state => state.dataParams);\r\n    \r\n    const getStartDate = (range, index, data) => {\r\n        if (range === null) {\r\n            try {\r\n                return data.slice(0,1)[0].date\r\n            } catch {\r\n                return null\r\n            }\r\n        } else {\r\n            try {\r\n                return data[index-range].date\r\n            } catch {\r\n                return null\r\n            }\r\n        }\r\n    }\r\n\r\n    const getEndDate = (index, data) => {\r\n        try {\r\n            return data[index].date;\r\n        } catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2} id=\"main-chart-container\">\r\n            <Grid item xs={10} style={{height:'20vh'}}>\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                    <LineChart\r\n                        data={chartData}\r\n                        margin={{\r\n                            top: 0, right: 10, left: 45, bottom: 20,\r\n                        }}\r\n                    >\r\n                    {/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis type=\"number\" />\r\n                    {/* <YAxis scale=\"log\" domain={['auto', 'auto']} /> */}\r\n                    <Tooltip />\r\n                    {/* <Legend /> */}\r\n                    {/* <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} /> */}\r\n                    <Line type=\"monotone\" dataKey=\"count\" stroke=\"#ff0000\" dot={false} />\r\n                    <ReferenceArea \r\n                        x1={getStartDate(dataParams.nRange, dataParams.nIndex, chartData)}\r\n                        x2={getEndDate(dataParams.nIndex, chartData)} y1={0} y2={chartData.slice(-1)[0].count}\r\n                        stroke=\"white\" \r\n                        strokeOpacity={1} \r\n                        fill=\"none\" \r\n                        isAnimationActive={true}\r\n                        />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default MainLineChart\r\n\r\n// dataParams.nIndex-(dataParams.nRange||dataParams.nIndex)","import React, { useEffect, useState } from 'react';\r\nimport { setCentroids, storeData, setCurrentData, setDates, setColumnNames, setDate, setDateIndex, setMapParams, setVariableParams, setStartDateIndex, setChartData, storeGeojson, storeLisaValues } from './actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport GeodaProxy from './GeodaProxy.js';\r\nimport { getParseCSV, getJson, mergeData, colIndex, getDataForBins, getDataForCharts, dataFn, getLisaValues, getVarId, getGeoids, getDataForLisa } from './utils';\r\nimport { Map, DateSlider, Legend, VariablePanel, MainLineChart, DataPanel } from './components';\r\n\r\nfunction App() {\r\n  const storedData = useSelector(state => state.storedData);\r\n  const storedGeojson = useSelector(state => state.storedGeojson);\r\n  const storedLisaData = useSelector(state => state.storedLisaData);\r\n  const currentData = useSelector(state => state.currentData);\r\n  const currentVariable = useSelector(state => state.currentVariable);\r\n  const columnNames = useSelector(state => state.cols);\r\n  const dates = useSelector(state => state.dates);\r\n  const mapParams = useSelector(state => state.mapParams);\r\n  const colorScale = useSelector(state => state.colorScale);\r\n  const dataParams = useSelector(state => state.dataParams);\r\n  const chartData = useSelector(state => state.chartData);\r\n  const startDateIndex = useSelector(state => state.startDateIndex);\r\n\r\n  const [gda_proxy, set_gda_proxy] = useState(null);\r\n  \r\n  const dispatch = useDispatch();  \r\n  \r\n  const getCentroids = (geojson, gda_proxy) =>  dispatch(setCentroids(gda_proxy.GetCentroids(geojson), geojson))\r\n  \r\n  const getDates = (data, table, geojson) =>  {\r\n    let dates = findDates(data[table])\r\n    dispatch(setDates(dates[0], geojson))\r\n    dispatch(setDate(dates[0].slice(-1,)[0]))\r\n    dispatch(setVariableParams({nIndex: colIndex(data, table, dates[0].slice(-1,)[0])}))\r\n    dispatch(setStartDateIndex(dates[1]))\r\n  }\r\n\r\n  const findDates = (data) => {\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (Date.parse(data[i])) {\r\n        return [data.slice(i,),i]\r\n      }\r\n    }\r\n    return;\r\n  }\r\n\r\n  const getColumns = (data, names) => {\r\n    let rtn = {};\r\n    for (let i=0; i < data.length; i++) {\r\n      rtn[names[i]] = data[i][1]\r\n    }\r\n  return rtn;\r\n  }\r\n\r\n  async function loadData(geojson, csvs, joinCols, names, gda_proxy) {\r\n    const csvPromises = csvs.map(csv => getParseCSV(`${process.env.PUBLIC_URL}/csv/${csv}.csv`, joinCols[1]).then(result => {return result}))\r\n    Promise.all([\r\n      getJson(`${process.env.PUBLIC_URL}/geojson/${geojson}`, gda_proxy),\r\n      ...csvPromises\r\n    ]).then(values => {\r\n      dispatch(storeGeojson(values[0]['geoidIndex'], geojson));\r\n      let tempData = mergeData(values[0]['data'], joinCols[0], values.slice(1,), names, joinCols[1]);\r\n      dispatch(storeData(tempData, geojson));\r\n      dispatch(setCurrentData(geojson));\r\n      dispatch(setColumnNames(getColumns(values.slice(1,), names), geojson));\r\n    })    \r\n  }\r\n\r\n  // After runtime is initialized, this loads in gda_proxy to the state\r\n  useEffect(() => {\r\n    const waitForWASM = () => {\r\n      setTimeout(() => {\r\n        if (window.Module === undefined) {\r\n          waitForWASM()\r\n        } else {\r\n          if (gda_proxy === null) {\r\n            set_gda_proxy(new GeodaProxy());\r\n          }\r\n        }\r\n      }, 100)\r\n    }\r\n\r\n    waitForWASM()\r\n  },[window.Module])\r\n\r\n  // on initial load and after gda_proxy has been initialized, this loads in the default data sets (USA Facts)\r\n  useEffect(() => {\r\n    if ((gda_proxy !== null) && (currentData === '')) {\r\n      loadData(\r\n        'county_usfacts.geojson', \r\n        ['covid_confirmed_usafacts','covid_deaths_usafacts', 'berkeley_predictions', 'chr_health_context', 'chr_life', 'chr_health_factors'], \r\n        ['GEOID', 'FIPS'], \r\n        ['cases','deaths', 'predictions', 'chr_health_context', 'chr_life', 'chr_health_factors'],\r\n        gda_proxy\r\n      )\r\n    }\r\n  },[gda_proxy])\r\n\r\n  // whenever the current data changes, this \r\n  useEffect(() => {\r\n    if (currentData != '') {\r\n      if (!dates.hasOwnProperty(currentData)){\r\n        getCentroids(currentData, gda_proxy)\r\n        getDates(columnNames[currentData], 'cases', currentData)\r\n      }\r\n    } \r\n  },[columnNames])\r\n\r\n  useEffect(() => {\r\n    if (storedData[currentData]){\r\n      dispatch(\r\n        setChartData(\r\n          getDataForCharts(\r\n            storedData[currentData],\r\n            'cases',\r\n            startDateIndex,\r\n            dates[currentData]\r\n          )\r\n        )\r\n      )\r\n    }\r\n  }, [startDateIndex])\r\n\r\n  // get lisa values on change, if map type set to lisa\r\n  useEffect(() => {\r\n    if (gda_proxy !== null && mapParams.mapType === \"lisa\"){\r\n      let tempId = getVarId(currentData, dataParams)\r\n      if (!(storedLisaData.hasOwnProperty(tempId))) {\r\n        dispatch(\r\n          storeLisaValues(\r\n            getLisaValues(\r\n              gda_proxy, \r\n              currentData, \r\n              getDataForLisa(\r\n                storedData[currentData], \r\n                dataParams.numerator, \r\n                dataParams.nType,\r\n                dataParams.nProperty, \r\n                dataParams.nIndex, \r\n                dataParams.nRange, \r\n                dataParams.denominator, \r\n                dataParams.dType,\r\n                dataParams.dProperty, \r\n                dataParams.dIndex, \r\n                dataParams.dRange, \r\n                dataParams.scale,\r\n                storedGeojson[currentData].indexOrder\r\n              )\r\n            ),\r\n            tempId\r\n          )\r\n        )\r\n      }\r\n    }\r\n  }, [dataParams, mapParams])\r\n\r\n  // trigger on parameter change for metric values\r\n  useEffect(() => {\r\n    if (gda_proxy !== null && currentData !== ''){\r\n      if (mapParams.binMode === 'dynamic') {\r\n        let nb = gda_proxy.custom_breaks(\r\n          currentData, \r\n          \"natural_breaks\", \r\n          8, \r\n          null,  \r\n            getDataForBins(\r\n              storedData[currentData], \r\n              dataParams.numerator, \r\n              dataParams.nType,\r\n              dataParams.nProperty, \r\n              dataParams.nIndex, \r\n              dataParams.nRange, \r\n              dataParams.denominator, \r\n              dataParams.dType,\r\n              dataParams.dProperty, \r\n              dataParams.dIndex, \r\n              dataParams.dRange, \r\n              dataParams.scale\r\n            ), \r\n          )\r\n          dispatch(\r\n            setMapParams({\r\n              bins: {\r\n                bins:nb.bins,\r\n                breaks: [-Math.pow(10, 12), ...nb.breaks.slice(1,-1), Math.pow(10, 12)]\r\n              }\r\n            })\r\n          )\r\n      } else {\r\n        let nb = gda_proxy.custom_breaks(\r\n          currentData, \r\n          \"natural_breaks\", \r\n          8, \r\n          null, \r\n          getDataForBins(\r\n            storedData[currentData], \r\n            dataParams.numerator, \r\n            dataParams.nType,\r\n            dataParams.nProperty, \r\n            null,\r\n            dataParams.nRange, \r\n            dataParams.denominator,\r\n            dataParams.dType,\r\n            dataParams.dProperty, \r\n            dataParams.dIndex, \r\n            dataParams.dRange, \r\n            dataParams.scale\r\n            )\r\n          )\r\n          dispatch(\r\n            setMapParams({\r\n              bins: {\r\n                bins:nb.bins,\r\n                breaks: [-Math.pow(10, 12), ...nb.breaks.slice(1,-1), Math.pow(10, 12)]\r\n              }\r\n            })\r\n          )\r\n      }\r\n    }\r\n  }, [dates, storedData[currentData], dataParams.numerator, dataParams.nProperty, dataParams.nRange, dataParams.denominator, dataParams.dProperty, dataParams.dRange, dataParams.scale])\r\n\r\n  // trigger on date (index) change for dynamic binning\r\n  useEffect(() => {\r\n    if (gda_proxy !== null && mapParams.binMode === 'dynamic' && currentData !== ''){\r\n      let nb = gda_proxy.custom_breaks(\r\n        currentData, \r\n        \"natural_breaks\", \r\n        8, \r\n        null, \r\n        getDataForBins(\r\n          storedData[currentData], \r\n          dataParams.numerator, \r\n          dataParams.nType,\r\n          dataParams.nProperty, \r\n          dataParams.nIndex, \r\n          dataParams.nRange, \r\n          dataParams.denominator, \r\n          dataParams.dType,\r\n          dataParams.dProperty, \r\n          dataParams.dIndex, \r\n          dataParams.dRange, \r\n          dataParams.scale\r\n          ), \r\n        )\r\n      dispatch(\r\n        setMapParams({\r\n          bins: {\r\n            bins:nb.bins,\r\n            breaks: [-Math.pow(10, 12), ...nb.breaks.slice(1,-1), Math.pow(10, 12)]\r\n          }\r\n        })\r\n      )\r\n    }\r\n  }, [dataParams.nIndex, dataParams.dIndex])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\" style={{position:'fixed', left: '20vw', top:'20px', zIndex:10}}>\r\n        <button onClick={() => console.log( \r\n          getDataForLisa(\r\n            storedData[currentData], \r\n            dataParams.numerator, \r\n            dataParams.nType,\r\n            dataParams.nProperty, \r\n            dataParams.nIndex, \r\n            dataParams.nRange, \r\n            dataParams.denominator, \r\n            dataParams.dType,\r\n            dataParams.dProperty, \r\n            dataParams.dIndex, \r\n            dataParams.dRange, \r\n            dataParams.scale,\r\n            storedGeojson[currentData].indexOrder\r\n          )\r\n          )\r\n        }>dummy button for testing</button>\r\n      </header>\r\n      <Map />\r\n      <VariablePanel />\r\n      <DataPanel />\r\n      <div id=\"bottom-drawer\">\r\n        <Legend labels={mapParams.bins.bins} title={currentVariable} colors={colorScale} />\r\n        <hr />\r\n        <MainLineChart />\r\n        <DateSlider />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","export const INITIAL_STATE = {\r\n  geodaProxy: null,\r\n  storedData: {},\r\n  storedGeojson: {},\r\n  storedLisaData: {},\r\n  storedCSV: {},\r\n  cols: {},\r\n  currentData: '',\r\n  chartData: [{}],\r\n  colorScale:  [\r\n    [240,240,240],\r\n    [255,255,204],\r\n    [255,237,160],\r\n    [254,217,118],\r\n    [254,178,76],\r\n    [253,141,60],\r\n    [252,78,42],\r\n    [227,26,28],\r\n    [177,0,38],\r\n  ],\r\n  centroids: {},\r\n  dates: {},\r\n  currDate: '',\r\n  currDateIndex: '',\r\n  startDateIndex: '',\r\n  currentVariable: 'Confirmed Count per 100K Population',\r\n  currentMethod: 'natural_breaks',\r\n  currentOverlay: '',\r\n  currentResource: '',\r\n  dataParams: {\r\n    numerator: 'cases',\r\n    nType: 'time-series',\r\n    nProperty: null,\r\n    nRange: 7,\r\n    nIndex:null,\r\n    denominator: 'properties',\r\n    dType: 'characteristic',\r\n    dProperty: 'population',\r\n    dRange:null,\r\n    dIndex:null,\r\n    scale:100000,\r\n  },\r\n  mapParams: {\r\n    mapType: 'choropleth',\r\n    binType: 'natural_breaks',\r\n    bins: {},\r\n    binMode: '',\r\n    use3d: false,\r\n    activeGeoid: '',\r\n    overlay: '',\r\n    resource: '',\r\n  },\r\n  storedRange: null,\r\n  currentGeoid: '',\r\n  sidebarData: {},\r\n};","import { INITIAL_STATE } from '../constants/defaults';\r\n\r\nvar reducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case 'SET_GEOID': \r\n            return {\r\n                ...state,\r\n                currentGeoid: action.payload.geoid\r\n            };\r\n        case 'SET_STORED_DATA':\r\n            let obj = {\r\n                ...state.storedData,\r\n            }\r\n            obj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                storedData: obj\r\n            };\r\n        case 'SET_STORED_GEOJSON':\r\n            let geojsonObj = {\r\n                ...state.storedGeojson,\r\n            }\r\n            geojsonObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                storedGeojson: geojsonObj\r\n            };\r\n        case 'SET_STORED_LISA_DATA':\r\n            let lisaObj = {\r\n                ...state.storedLisaData,\r\n            }\r\n            lisaObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                storedLisaData: lisaObj\r\n            };\r\n        case 'SET_CENTROIDS':\r\n            let centroidsObj = {\r\n                ...state.centroids,\r\n            }\r\n            centroidsObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                centroids: centroidsObj\r\n            };\r\n        case 'SET_CURRENT_DATA':\r\n            return {\r\n                ...state,\r\n                currentData: action.payload.data\r\n            }\r\n        case 'SET_GEODA_PROXY':\r\n            return {\r\n                ...state,\r\n                geodaProxy: action.payload.proxy\r\n            }\r\n        case 'SET_DATES':\r\n            let datesObj = {\r\n                ...state.dates\r\n            }\r\n            datesObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                dates: datesObj\r\n            }\r\n        case 'SET_DATA_FUNCTION':\r\n            return {\r\n                ...state,\r\n                currentDataFn: action.payload.fn\r\n            }\r\n        case 'SET_COLUMN_NAMES':\r\n            let colObj = {\r\n                ...state.cols\r\n            }\r\n            colObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                cols: colObj\r\n            }\r\n        case 'SET_CURR_DATE':\r\n            return {\r\n                ...state,\r\n                currDate: action.payload.date\r\n            }\r\n        case 'SET_DATE_INDEX':\r\n            return {\r\n                ...state,\r\n                currDateIndex: action.payload.index\r\n            }\r\n        case 'SET_START_DATE_INDEX':\r\n            return {\r\n                ...state,\r\n                startDateIndex: action.payload.index\r\n            }\r\n        case 'SET_BINS':\r\n            let binsObj = {};\r\n            binsObj['bins'] =  action.payload.bins;\r\n            binsObj['breaks'] =  action.payload.breaks;\r\n            return {\r\n                ...state,\r\n                bins: binsObj\r\n            }\r\n        case 'SET_3D':\r\n            return {\r\n                ...state,\r\n                use3D: !state.use3D\r\n            }\r\n        case 'SET_DATA_SIDEBAR':\r\n            return {\r\n                ...state,\r\n                sidebarData: action.payload.data\r\n            }\r\n        case 'INCREMENT_DATE':\r\n            let dateObj = {\r\n                ...state.dataParams\r\n            }\r\n            if (action.payload.index+state.dataParams.nIndex > state.dates[state.currentData].length) {\r\n                dateObj.nIndex = state.startDateIndex;\r\n                dateObj.dIndex = state.startDateIndex;\r\n                return {\r\n                    ...state,\r\n                    dataParams:dateObj\r\n                }\r\n            } else {\r\n                dateObj.nIndex = dateObj.nIndex + action.payload.index;\r\n                dateObj.dIndex = dateObj.dIndex + action.payload.index;\r\n                return {\r\n                    ...state,\r\n                    dataParams:dateObj\r\n                }\r\n            }\r\n        case 'SET_VARIABLE_PARAMS':\r\n            let paramObj = {\r\n                ...state.dataParams,\r\n                ...action.payload.params\r\n            }\r\n\r\n            if (paramObj.nType === 'time-series' && paramObj.nIndex === null) {\r\n                paramObj.nIndex = state.storedIndex;\r\n                paramObj.nRange = state.storedRange;\r\n            }\r\n            if (paramObj.dType === 'time-series' && paramObj.dIndex === null) {\r\n                paramObj.dIndex = state.storedIndex;\r\n                paramObj.dRange = state.storedRange;\r\n            }\r\n            if (paramObj.nType === 'characteristic' && state.dataParams.nType === 'time-series') {\r\n                return {\r\n                    ...state,\r\n                    storedIndex: state.dataParams.nIndex,\r\n                    storedRange: state.dataParams.nRange,\r\n                    dataParams: paramObj,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    dataParams: paramObj \r\n                }\r\n            }\r\n        case 'SET_MAP_PARAMS':\r\n            let mapParamObj = {\r\n                ...state.mapParams,\r\n                ...action.payload.params\r\n            }\r\n            return {\r\n                ...state,\r\n                mapParams: mapParamObj \r\n            }\r\n        case 'SET_VARIABLE_NAME':\r\n            return {\r\n                ...state,\r\n                currentVariable: action.payload.name\r\n            }\r\n        case 'SET_CHART_DATA':\r\n            return {\r\n                ...state,\r\n                chartData: action.payload.data\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { createStore} from 'redux';\r\nimport reducer from './reducers';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport WebFont from 'webfontloader';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\n\r\nWebFont.load({\r\n  google: {\r\n    families: ['Lato:300,400,700,900', 'Montserrat:400,600,800', 'Playfair Display:ital', 'sans-serif']\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}