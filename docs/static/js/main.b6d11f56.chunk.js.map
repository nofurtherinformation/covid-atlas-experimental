{"version":3,"sources":["actions/index.js","GeodaProxy.js","utils/loadGeojsonToGeoda.js","utils/getJson.js","utils/getParseCSV.js","utils/mergeData.js","utils/colIndex.js","utils/dataFunction.js","utils/getDataForBins.js","utils/mapFunction.js","components/map.js","components/slider.js","components/legend.js","App.js","constants/defaults.js","reducers/index.js","index.js"],"names":["storeData","data","name","type","payload","setCurrentData","setColumnNames","setDate","date","setDateIndex","index","setBins","bins","breaks","window","Module","isInt","n","Number","GeodaProxy","this","geojson_maps","map_uid","file_target","uint8_t_arr","Uint8Array","result","uint8_t_ptr","_malloc","length","HEAPU8","set","ccall","_free","map_type","get_map_type","cc","get_centroids","xx","get_x","yy","get_y","centroids","i","size","push","get","get_num_obs","col_name","get_numeric_col","order","include_lower_order","precision","rook_weights","queen_weights","is_arc","is_mile","min_distance_threshold","k","power","is_inverse","knn_weights","dist_thres","dist_weights","kernel","adaptive_bandwidth","use_kernel_diagonals","kernel_weights","kernel_bandwidth_weights","weight_uid","local_moran","values","local_moran1","toVecDouble","local_g","local_gstar","local_geary","local_joincount","idx","nbrs","get_neighbors","parseVecInt","vi","j","vvi","sub","vd","input","vs","VectorString","push_back","VectorDouble","isNaN","Infinity","sel_fields","bound_var","min_bound","method","col_names","toVecString","clusters_vec","redcap","parseVecVecInt","tabu_length","cool_rate","n_iter","maxp","break_name","sel_field","breaks_vec","custom_breaks1","custom_breaks","parseVecDouble","orig_breaks","id_array","txt","toFixed","undefined","unshift","NEGATIVE_INFINITY","POSITIVE_INFINITY","v","min_val","max_val","cart","cartogram","x","y","r","get_radius","min_x","max_x","min_y","max_y","scale_x","scale_y","loadGeojsonToGeoda","url","gda_proxy","a","arrayBuffer","ReadGeojsonMap","split","slice","fetch","then","response","responseFromJson","clone","json","tempData","getJson","joinCol","ok","text","Promise","reject","status","d3","rtn","Object","keys","getParseCSV","mergeData","featureCollection","featureCollectionJoinCol","joinData","joinDataNames","joinDataCol","features","dataDict","baseColumnLength","colNumCheck","parseInt","properties","isInteger","cols","merged","merge","colIndex","table","indexOf","dataFn","numeratorData","range","denominatorData","denominatorProperty","denominatorIndex","denominatorRange","scale","getDataForBins","tableData","denomTable","denomProp","denomIndex","denomRange","t0","performance","now","console","log","mapFn","val","colors","initialViewState","latitude","longitude","zoom","pitch","bearing","DATA_URL","CONTINENTS","process","viewGlobe","GlobeView","id","controller","resolution","view","MapView","repeat","Map","useState","hoverInfo","setHoverInfo","globalMap","storedData","useSelector","state","currentData","currDateIndex","colorScale","use3D","dataParams","dispatch","useDispatch","Layers","GeoJsonLayer","pickable","stroked","filled","wireframe","getFillColor","extruded","opacity","f","hasOwnProperty","numerator","nRange","denominator","dProperty","dIndex","dRange","GetFillColor","getElevation","GetHeight","updateTriggers","onHover","info","onClick","object","autoHighlight","style","position","left","top","width","height","layers","views","reuseMaps","mapStyle","preventStyleDiffing","mapboxApiAccessToken","zIndex","pointerEvents","background","padding","NAME","state_name","cases","deaths","useStyles","makeStyles","root","bottom","transform","boxSizing","border","DateSlider","classes","dates","currDate","timerId","setTimerId","className","rate","interval","setInterval","o","clearInterval","handlePlayPause","textAlign","color","Slider","value","onChange","event","newValue","updateDateIndex","aria-labelledby","min","step","max","Legend","props","title","map","backgroundColor","labels","splice","cleanBins","label","App","columnNames","binMode","set_gda_proxy","findDates","Date","parse","getColumns","names","geojson","csvs","joinCols","csvPromises","csv","all","useEffect","loadData","GetCentroids","getCentroids","setDates","getDates","nb","Math","pow","INITIAL_STATE","geodaProxy","chartData","currentVariable","currentMethod","currentOverlay","currentResource","isCartogram","currentGeoid","sidebarData","reducer","action","geoid","obj","centroidsObj","proxy","datesObj","currentDataFn","fn","colObj","binsObj","paramObj","params","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6d11f56.chunk.js","sourcesContent":["let timer = null;\r\n\r\nexport const setGeoid = (geoid) => {\r\n    return {\r\n        type: 'SET_GEOID',\r\n        payload: {\r\n            geoid\r\n        }\r\n    }\r\n}\r\n\r\nexport const storeData = (data, name) => {\r\n    return {\r\n        type: 'SET_STORED_DATA',\r\n        payload: {\r\n            data,\r\n            name\r\n        }   \r\n    }\r\n}\r\n\r\nexport const setCurrentData = (data) => {\r\n    return {\r\n        type: 'SET_CURRENT_DATA',\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport const setGeodaProxy = (proxy) => {\r\n    return {\r\n        type: 'SET_GEODA_PROXY',\r\n        payload: {\r\n            proxy\r\n        }\r\n    }\r\n}\r\n\r\nexport const setCentroids = (data, name) => {\r\n    return {\r\n        type: 'SET_CENTROIDS',\r\n        payload: {\r\n            data,\r\n            name\r\n        }\r\n    }\r\n}\r\n\r\nexport const setDates = (data, name) => {\r\n    return {\r\n        type: 'SET_DATES',\r\n        payload: {\r\n            data,\r\n            name\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const setDataFunction = (fn) => {\r\n    return {\r\n        type: 'SET_DATA_FUNCTION',\r\n        payload: {\r\n            fn\r\n        }\r\n    }\r\n}\r\n\r\nexport const setColumnNames = (data, name) => {\r\n    return {\r\n        type: 'SET_COLUMN_NAMES',\r\n        payload: {\r\n            data,\r\n            name\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const setDate = (date) => {\r\n    return {\r\n        type: 'SET_CURR_DATE',\r\n        payload: {\r\n            date\r\n        }\r\n    }\r\n}\r\n\r\nexport const setDateIndex = (index) => {\r\n    return {\r\n        type: 'SET_DATE_INDEX',\r\n        payload: {\r\n            index\r\n        }\r\n    }\r\n}\r\n\r\nexport const setBins = (bins, breaks) => {\r\n    return {\r\n        type: 'SET_BINS',\r\n        payload: {\r\n            bins,\r\n            breaks\r\n        }\r\n    }\r\n}\r\n\r\nexport const set3D = () => {\r\n    return {\r\n        type: 'SET_3D'\r\n    }\r\n}\r\n\r\nexport const setDataSidebar = ( data ) => {\r\n    return {\r\n        type: 'SET_DATA_SIDEBAR',\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport const incrementDate = ( index ) => {\r\n    return {\r\n        type: 'INCREMENT_DATE',\r\n        payload: {\r\n            index\r\n        }\r\n    }\r\n}\r\n\r\nexport const setVariableParams = ( params ) => {\r\n    return {\r\n        type: 'SET_VARIALBLE_PARAMS',\r\n        payload: {\r\n            params\r\n        }\r\n    }\r\n}","var Module = window.Module;\r\n\r\nfunction isInt(n) {\r\n  return Number(n) === n && n % 1 === 0;\r\n}\r\n\r\nclass GeodaProxy {\r\n  // file_target is evt.target\r\n  constructor() {\r\n    this.geojson_maps = {};\r\n  }\r\n\r\n  ReadGeojsonMap(map_uid, file_target) {\r\n    //evt.target.result is an ArrayBuffer. In js, \r\n    const uint8_t_arr = new Uint8Array(file_target.result);\r\n    //First we need to allocate the wasm memory. \r\n    const uint8_t_ptr = window.Module._malloc(uint8_t_arr.length);\r\n    //Now that we have a block of memory we can copy the file data into that block\r\n    window.Module.HEAPU8.set(uint8_t_arr, uint8_t_ptr);\r\n    // pass the address of the wasm memory we just allocated to our function\r\n    //window.Module.new_geojsonmap(map_uid, uint8_t_ptr, uint8_t_arr.length);\r\n    window.Module.ccall(\"new_geojsonmap1\", null, [\"string\", \"number\", \"number\"], [map_uid, uint8_t_ptr, uint8_t_arr.length]);\r\n\r\n    //Lastly, according to the docs, we should call ._free here.\r\n    window.Module._free(uint8_t_ptr);\r\n    // store the map and map type\r\n    let map_type = window.Module.get_map_type(map_uid);\r\n    this.geojson_maps[map_uid] = map_type;\r\n    return map_uid;\r\n  }\r\n\r\n  Has(map_uid) {\r\n    return map_uid in this.geojson_maps;\r\n  }\r\n\r\n  List() {\r\n    return this.geojson_maps;\r\n  }\r\n\r\n  GetCentroids(map_uid) {\r\n    let cc = window.Module.get_centroids(map_uid);\r\n    let xx = cc.get_x();\r\n    let yy = cc.get_y();\r\n    var centroids = [];\r\n    for (let i = 0; i < xx.size(); ++i) {\r\n      centroids.push([xx.get(i), yy.get(i)]);\r\n    }\r\n    return centroids;\r\n  }\r\n\r\n  GetNumObs(map_uid) {\r\n    let n = window.Module.get_num_obs(map_uid);\r\n    return n;\r\n  }\r\n\r\n  GetMapType(map_uid) {\r\n    return this.geojson_maps[map_uid];\r\n  }\r\n\r\n  GetNumericCol(map_uid, col_name) {\r\n    // return VectorDouble\r\n    return window.Module.get_numeric_col(map_uid, col_name)\r\n  }\r\n\r\n  CreateRookWeights(map_uid, order, include_lower_order, precision) {\r\n    let w_uid = window.Module.rook_weights(map_uid, order, include_lower_order, precision);\r\n    return w_uid;\r\n  }\r\n\r\n  CreateQueenWeights(map_uid, order, include_lower_order, precision) {\r\n    let w_uid = window.Module.queen_weights(map_uid, order, include_lower_order, precision);\r\n    return w_uid;\r\n  }\r\n\r\n  GetMinDistThreshold(map_uid, is_arc, is_mile) {\r\n    let val = window.Module.min_distance_threshold(map_uid, is_arc, is_mile);\r\n    return val;\r\n  }\r\n\r\n  CreateKnnWeights(map_uid, k, power, is_inverse, is_arc, is_mile) {\r\n    let w = window.Module.knn_weights(map_uid, k, power, is_inverse, is_arc, is_mile);\r\n    return w;\r\n  }\r\n\r\n  CreateDistWeights(map_uid, dist_thres, power, is_inverse, is_arc, is_mile) {\r\n    let w = window.Module.dist_weights(map_uid, dist_thres, power, is_inverse, is_arc, is_mile);\r\n    return w;\r\n  }\r\n\r\n  CreateKernelWeights(map_uid, k, kernel, adaptive_bandwidth, use_kernel_diagonals, is_arc, is_mile) {\r\n    let w = window.Module.kernel_weights(map_uid, k, kernel, adaptive_bandwidth, use_kernel_diagonals, is_arc, is_mile);\r\n    return w;\r\n  }\r\n\r\n  CreateKernelBandwidthWeights(map_uid, dist_thres, kernel, use_kernel_diagonals, is_arc, is_mile) {\r\n    let w = window.Module.kernel_bandwidth_weights(map_uid, dist_thres, kernel, use_kernel_diagonals, is_arc, is_mile);\r\n    return w;\r\n  }\r\n\r\n  local_moran(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_moran(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  local_moran1(map_uid, weight_uid, values) {\r\n    return window.Module.local_moran1(map_uid, weight_uid, this.toVecDouble(values));\r\n  }\r\n\r\n  local_g(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_g(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  local_gstar(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_gstar(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  local_geary(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_geary(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  local_joincount(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_joincount(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  GetNeighbors(map_uid, weight_uid, idx) {\r\n    let nbrs = window.Module.get_neighbors(map_uid, weight_uid, idx);\r\n    return this.parseVecInt(nbrs);\r\n  }\r\n\r\n  parseVecInt(vi) {\r\n    let result = [];\r\n    for (let j = 0; j < vi.size(); ++j) {\r\n      result.push(vi.get(j));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  parseVecVecInt(vvi) {\r\n    let result = [];\r\n    for (let i = 0; i < vvi.size(); ++i) {\r\n      let sub = [];\r\n      let vi = vvi.get(i);\r\n      for (let j = 0; j < vi.size(); ++j) {\r\n        sub.push(vi.get(j));\r\n      }\r\n      result.push(sub);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  parseVecDouble(vd) {\r\n    let result = []\r\n    for (let i = 0; i < vd.size(); ++i) {\r\n      result.push(vd.get(i));\r\n    }\r\n    return result;\r\n  }\r\n\r\n\r\n  toVecString(input) {\r\n    let vs = new window.Module.VectorString();\r\n    for (let i = 0; i < input.length; ++i) {\r\n      vs.push_back(input[i]);\r\n    }\r\n    return vs;\r\n  }\r\n\r\n  toVecDouble(input) {\r\n    let vs = new window.Module.VectorDouble();\r\n    for (let i = 0; i < input.length; ++i) {\r\n      if (isNaN(input[i]) || input[i] == Infinity)\r\n        vs.push_back(0);\r\n      else\r\n        vs.push_back(input[i]);\r\n    }\r\n    return vs;\r\n  }\r\n\r\n  redcap(map_uid, weight_uid, k, sel_fields, bound_var, min_bound, method) {\r\n    let col_names = this.toVecString(sel_fields);\r\n    let clusters_vec = window.Module.redcap(map_uid, weight_uid, k, col_names, bound_var, min_bound, method);\r\n    let clusters = this.parseVecVecInt(clusters_vec);\r\n    return clusters;\r\n  }\r\n\r\n  maxp(map_uid, weight_uid, k, sel_fields, bound_var, min_bound, method, tabu_length, cool_rate, n_iter) {\r\n    let col_names = this.toVecString(sel_fields);\r\n    let clusters_vec = window.Module.maxp(map_uid, weight_uid, col_names, bound_var, min_bound, tabu_length, cool_rate, method, k, n_iter);\r\n    let clusters = this.parseVecVecInt(clusters_vec);\r\n    return clusters;\r\n  }\r\n\r\n  custom_breaks(map_uid, break_name, k, sel_field, values) {\r\n    var breaks_vec;\r\n    if (sel_field == null) {\r\n      breaks_vec = window.Module.custom_breaks1(map_uid, k, break_name, this.toVecDouble(values));\r\n    } else {\r\n      breaks_vec = window.Module.custom_breaks(map_uid, k, sel_field, break_name);\r\n    }\r\n    let breaks = this.parseVecDouble(breaks_vec);\r\n    var orig_breaks = breaks;\r\n\r\n    let bins = [];\r\n    let id_array = [];\r\n    for (let i = 0; i < breaks.length; ++i) {\r\n      id_array.push([]);\r\n      let txt = isInt(breaks[i]) ? breaks[i] : breaks[i].toFixed(2);\r\n      bins.push(\"\" + txt);\r\n    }\r\n    id_array.push([]);\r\n    let txt = breaks[breaks.length - 1];\r\n    if (txt != undefined) {\r\n      txt = isInt(txt) ? txt : txt.toFixed(2);\r\n      bins.push(\">\" + txt);\r\n    }\r\n\r\n    breaks.unshift(Number.NEGATIVE_INFINITY);\r\n    breaks.push(Number.POSITIVE_INFINITY);\r\n\r\n    for (let i = 0; i < values.length; ++i) {\r\n      let v = values[i];\r\n      for (let j = 0; j < breaks.length - 1; ++j) {\r\n        let min_val = breaks[j];\r\n        let max_val = breaks[j + 1];\r\n        if (v >= min_val && v < max_val) {\r\n          id_array[j].push(i);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < bins.length; ++i) {\r\n      //bins[i] += \" (\" + id_array[i].length + ')';\r\n    }\r\n\r\n    return {\r\n      'k': k,\r\n      'bins': bins,\r\n      'breaks': orig_breaks,\r\n      'id_array': id_array\r\n    }\r\n  }\r\n\r\n  cartogram(map_uid, values) {\r\n    let cart = window.Module.cartogram(map_uid, this.toVecDouble(values));\r\n    let x = cart.get_x();\r\n    let y = cart.get_y();\r\n    let r = cart.get_radius();\r\n    // rescale x, y [-100,0], [0, 45]\r\n    let min_x = x.get(0);\r\n    let max_x = x.get(0);\r\n    let min_y = y.get(0);\r\n    let max_y = y.get(0);\r\n    for (let i = 0; i < x.size(); ++i) {\r\n      if (min_x > x.get(i)) min_x = x.get(i);\r\n      if (max_x < x.get(i)) max_x = x.get(i);\r\n      if (min_y > y.get(i)) min_y = y.get(i);\r\n      if (max_y < y.get(i)) max_y = y.get(i);\r\n    }\r\n    let scale_x = 100.0 / (max_x - min_x);\r\n    let scale_y = 45.0 / (max_y - min_y);\r\n\r\n\r\n    var result = [];\r\n    for (let i = 0; i < x.size(); ++i) {\r\n      let xx = (x.get(i) - min_x) * scale_x;\r\n      let yy = (y.get(i) - min_y) * scale_y;\r\n      result.push({\r\n        'properties': {\r\n          'id': i\r\n        },\r\n        'position': [x.get(i) / 10000.0, y.get(i) / 10000.0],\r\n        'radius': r.get(i)\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default GeodaProxy","export const loadGeojsonToGeoda = async (data, url, gda_proxy) => {\r\n  const arrayBuffer = await data.arrayBuffer();\r\n\r\n  gda_proxy.ReadGeojsonMap('/geojson/county_usfacts.geojson'.split('/').slice(-1,)[0], {\r\n    result: arrayBuffer,\r\n  });\r\n\r\n}","import { loadGeojsonToGeoda } from './loadGeojsonToGeoda.js';\r\n\r\nasync function getJson(url, gda_proxy){\r\n    const tempData = await fetch(url)\r\n      .then(response => {\r\n\r\n        const responseFromJson = response.clone();        \r\n\r\n        loadGeojsonToGeoda(responseFromJson, url, gda_proxy);\r\n\r\n        return response.json();\r\n\r\n      }).then(data => {\r\n\r\n        return data\r\n\r\n      });     \r\n      \r\n    return tempData;\r\n}\r\nexport default getJson;","import * as d3 from 'd3-dsv';\r\n\r\nasync function getParseCSV(url, joinCol){\r\n    const tempData = await fetch(url)\r\n      .then(response => {\r\n        return response.ok ? response.text() : Promise.reject(response.status);\r\n      }).then(text => {\r\n        let data = d3.csvParse(text, d3.autoType)\r\n        let rtn = {};\r\n        let n = data.length;\r\n        while (n>0){\r\n          n--;\r\n          rtn[data[n][joinCol]] = Object.values(data[n])\r\n        }\r\n        return [rtn, Object.keys(data[0])]\r\n      });\r\n    return tempData;\r\n}\r\n\r\nexport default getParseCSV","import { merge } from 'lodash';\r\n\r\nconst mergeData = (featureCollection, featureCollectionJoinCol, joinData, joinDataNames, joinDataCol) => {\r\n    // declare parent dictionaries\r\n    let features = {}\r\n    let dataDict = {}\r\n\r\n    let baseColumnLength = Object.keys(featureCollection.features[0]).length;\r\n\r\n    // declare and prep feature collection object\r\n    let i = featureCollection.features.length;\r\n    let colNumCheck = parseInt(featureCollection.features[0].properties[featureCollectionJoinCol])\r\n    if (Number.isInteger(colNumCheck)) {\r\n      while (i>0) {\r\n        i--;\r\n        features[parseInt(featureCollection.features[i].properties[featureCollectionJoinCol])] = featureCollection.features[i];\r\n        dataDict[parseInt(featureCollection.features[i].properties[featureCollectionJoinCol])] = {};\r\n      }\r\n    } else {\r\n      while (i>0) {\r\n        i--;\r\n        features[featureCollection.features[i].properties[featureCollectionJoinCol]] = featureCollection.features[i];\r\n        dataDict[featureCollection.features[i].properties[featureCollectionJoinCol]] = {};\r\n      }\r\n    }\r\n  \r\n    // // declare data objects\r\n    // for (let n=0; n < joinDataNames.length; n++) {\r\n    //   dataDict[`${joinDataNames[n]}`] = {}\r\n    // }\r\n  \r\n    // loop through data and add to dictionaries\r\n    let n = joinData.length;\r\n    while (n>0) {\r\n      n--;\r\n      let cols = Object.keys(joinData[n][0]);\r\n      i = cols.length;\r\n      while (i>0) {\r\n        i--;\r\n        try {\r\n          dataDict[cols[i]][joinDataNames[n]] = joinData[n][0][cols[i]]\r\n        } catch {}\r\n      }\r\n    }\r\n    \r\n    // // use lodash to merge data\r\n    let merged = merge(features, dataDict)\r\n    // for (let n=1; n < joinDataNames.length; n++){\r\n    //   merged = merge(merged, dataDict[joinDataNames[n]])\r\n    // }\r\n    \r\n    // clean data\r\n    let rtn = [];\r\n    let keys = Object.keys(merged)\r\n    \r\n    for (let i = 0; i < keys.length; i++) {\r\n      if (Object.keys(merged[keys[i]]).length == (joinDataNames.length+baseColumnLength)) rtn.push(merged[keys[i]])\r\n    }\r\n\r\n    return rtn;\r\n}\r\n\r\nexport default mergeData;","const colIndex = (data, table, date) => {\r\n    return data[table].indexOf(date);\r\n}\r\n\r\nexport default colIndex","const dataFn = (numeratorData, index, range, denominatorData, denominatorProperty, denominatorIndex, denominatorRange, scale)  => {\r\n    return (\r\n      (\r\n        (\r\n          (numeratorData[index] -\r\n            (\r\n              (range!==null)&&(numeratorData[index-range])\r\n            )\r\n          )\r\n          /\r\n          (range+(range===null))\r\n        )\r\n      /\r\n        (\r\n          (\r\n            (denominatorData[denominatorProperty][denominatorIndex] -\r\n              (\r\n                (denominatorRange!==null)&&(denominatorData[denominatorProperty][denominatorIndex-denominatorRange])\r\n              )\r\n            )\r\n            /\r\n            (denominatorRange+(denominatorRange===null))\r\n          )\r\n          ||\r\n            (denominatorData[denominatorProperty])\r\n          || \r\n          1\r\n        )\r\n      )\r\n      *\r\n      scale\r\n    )\r\n}\r\n\r\nexport default dataFn;","import dataFn from './dataFunction'\r\n\r\nconst getDataForBins = (tableData, table, index, range, denomTable, denomProp, denomIndex, denomRange, scale) => {\r\n    let t0 = performance.now()\r\n    let rtn = [];\r\n    let n = tableData.length;\r\n    while (n>0) {\r\n        n--;\r\n        rtn.push(dataFn(tableData[n][table], index, range, tableData[n][denomTable], denomProp, denomIndex, denomRange, scale))\r\n    }\r\n    console.log(performance.now() - t0)\r\n    return rtn;   \r\n}\r\nexport default getDataForBins","const mapFn = (val, bins, colors) => {\r\n    if (val == 0) return colors[0];\r\n    for (let i=1; i<bins.length; i++) {\r\n      if (val < bins[i]) {\r\n        return colors[i]\r\n      }\r\n    }\r\n    return colors[0];\r\n}\r\n\r\nexport default mapFn","import { useState } from 'react';\r\nimport DeckGL from '@deck.gl/react';\r\nimport {MapView, _GlobeView as GlobeView} from '@deck.gl/core';\r\nimport ReactMapGL from 'react-map-gl';\r\nimport { GeoJsonLayer, PolygonLayer } from '@deck.gl/layers';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setDataSidebar } from '../actions';\r\nimport { mapFn, dataFn } from '../utils';\r\n\r\nconst MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoibGl4dW45MTAiLCJhIjoiY2locXMxcWFqMDAwenQ0bTFhaTZmbnRwaiJ9.VRNeNnyb96Eo-CorkJmIqg';\r\n\r\nconst initialViewState = {\r\n    latitude: 35.850033,\r\n    longitude: -105.6500523,\r\n    zoom: 3.5,\r\n    pitch:0,\r\n    bearing:0\r\n}\r\nconst DATA_URL = {\r\n    CONTINENTS: `${process.env.PUBLIC_URL}/geojson/world50m.json`\r\n}\r\n\r\nconst viewGlobe = new GlobeView({id: 'globe', controller: false, resolution:1});\r\nconst view = new MapView({repeat: true});\r\n\r\nconst Map = () => { \r\n    \r\n    const [hoverInfo, setHoverInfo] = useState(false);\r\n    const [globalMap, setGlobalMap] = useState(false);\r\n\r\n    const storedData = useSelector(state => state.storedData);\r\n    const currentData = useSelector(state => state.currentData);\r\n    const currDateIndex = useSelector(state => state.currDateIndex);\r\n    const bins = useSelector(state => state.bins);\r\n    const colorScale = useSelector(state => state.colorScale);\r\n    const use3D = useSelector(state => state.use3D);\r\n    const dataParams = useSelector(state => state.dataParams);\r\n    const dispatch = useDispatch();\r\n\r\n    const GetFillColor = (f, bins) => bins.hasOwnProperty(\"bins\") ? mapFn(dataFn(f[dataParams.numerator], currDateIndex, dataParams.nRange, f[dataParams.denominator], dataParams.dProperty, dataParams.dIndex, dataParams.dRange, dataParams.scale), bins.breaks, colorScale) : [0,0,0]\r\n    const GetHeight = (f, bins) => bins.hasOwnProperty(\"bins\") ? dataFn(f[dataParams.numerator], currDateIndex, dataParams.nRange, f[dataParams.denominator], dataParams.dProperty, dataParams.dIndex, dataParams.dRange, dataParams.scale)*1000 : 0\r\n    \r\n    const Layers = [\r\n        new GeoJsonLayer({\r\n            id: 'base continents',\r\n            data: DATA_URL.CONTINENTS,\r\n            pickable: false,\r\n            stroked: false,\r\n            filled: true,\r\n            wireframe: false,\r\n            getFillColor: [30,30,30]\r\n        }),\r\n        new GeoJsonLayer({\r\n            id: 'choropleth',\r\n            data: {\r\n                \"type\": \"FeatureCollection\",\r\n                \"name\": currentData,\r\n                \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\r\n                \"features\": storedData[currentData] ? storedData[currentData] : [],\r\n            },\r\n            pickable: true,\r\n            stroked: false,\r\n            filled: true,\r\n            wireframe: false,\r\n            extruded:use3D,\r\n            opacity: use3D ? 1 : 0.5,\r\n            getFillColor: f => GetFillColor(f, bins),\r\n            getElevation: f => GetHeight(f, bins),\r\n            updateTriggers: {\r\n                data: currentData,\r\n                getFillColor: currDateIndex,\r\n                getElevation: currDateIndex,\r\n            },\r\n            onHover: info => setHoverInfo(info),\r\n            onClick: info => dispatch(setDataSidebar(info.object)),\r\n            autoHighlight: true,\r\n        }),\r\n    ]\r\n\r\n    return (\r\n        <div id=\"mapContainer\" style={{position:'fixed',left:0,top:0,width:'100%',height:'100%'}}>\r\n            <DeckGL\r\n            initialViewState={initialViewState}\r\n            controller={true}\r\n            layers={Layers}\r\n            views={globalMap ? viewGlobe : view} //enable this for globe view\r\n            >\r\n                <ReactMapGL\r\n                    reuseMaps\r\n                    mapStyle={'mapbox://styles/lixun910/ckhkoo8ix29s119ruodgwfxec'}\r\n                    preventStyleDiffing={true}\r\n                    mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\r\n                    >\r\n                </ReactMapGL >\r\n                {hoverInfo.object && (\r\n                <div style={{position: 'absolute', zIndex: 1, pointerEvents: 'none', left: hoverInfo.x, top: hoverInfo.y, background: 'white', padding:'0 10px'}}>\r\n                    <h5>{`${hoverInfo.object.properties.NAME},${hoverInfo.object.properties.state_name}`}</h5>\r\n                    {`Cases: ${hoverInfo.object.cases.slice(-1,)[0]}`}<br/>\r\n                    {`Deaths: ${hoverInfo.object.deaths.slice(-1,)[0]}`}<br/>\r\n                    {`New Cases: ${hoverInfo.object.cases.slice(-1,)[0]-hoverInfo.object.cases.slice(-2,-1)[0]}`}<br/>\r\n                    {`New Deaths: ${hoverInfo.object.deaths.slice(-1,)[0]-hoverInfo.object.deaths.slice(-2,-1)[0]}`}<br/>\r\n                    </div>\r\n                )}\r\n            </DeckGL>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default Map","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setDate, setDateIndex, incrementDate } from '../actions';\r\n// import { getParseCSV, getJson, mergeData, colIndex, getDataForBins } from './utils';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      width: '50%',\r\n      position: 'fixed',\r\n      left: '50%',\r\n      bottom: '20px',\r\n      transform: 'translateX(-50%)',\r\n      padding:'5px 20px',\r\n      boxSizing: 'border-box',\r\n      background: 'black',\r\n      border: '1px solid white'\r\n    },\r\n  });\r\n\r\nconst DateSlider = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();  \r\n    \r\n    const currentData = useSelector(state => state.currentData);\r\n    const dates = useSelector(state => state.dates);\r\n    const currDate = useSelector(state => state.currDate);\r\n    const currDateIndex = useSelector(state => state.currDateIndex);\r\n\r\n    const [timerId, setTimerId] = useState(null);\r\n    \r\n    const updateDateIndex = (val) => dispatch(setDateIndex(val));\r\n    const updateDate = (val) => dispatch(setDate(dates[currentData][val]));\r\n\r\n    const handleChange = (event, newValue) => {\r\n        updateDate(newValue)\r\n        updateDateIndex(newValue)\r\n    };\r\n\r\n    const handlePlayPause = (timerId, rate, interval) => {\r\n        if (timerId === null) {\r\n            setTimerId(setInterval(o => dispatch(incrementDate(rate)), interval))\r\n        } else {\r\n            clearInterval(timerId);\r\n            setTimerId(null)\r\n        }\r\n    }\r\n\r\n    if (dates[currentData] !== undefined) {\r\n        return (\r\n            <div className={classes.root}>\r\n                <button id=\"playPause\" onClick={() => handlePlayPause(timerId, 1, 100)}>\r\n                    {timerId === null ? 'play' : 'pause'}\r\n                </button>\r\n                <h4 style={{textAlign:\"center\", color:\"white\"}}>{currDate}</h4>\r\n                <Slider \r\n                    value={currDateIndex} \r\n                    onChange={handleChange} \r\n                    aria-labelledby=\"continuous-slider\"\r\n                    min={0}\r\n                    step={1}\r\n                    max={dates[currentData].length-1}\r\n                />\r\n            </div>\r\n        );\r\n    } else {\r\n        return <div className={classes.root} />\r\n    }\r\n}\r\n\r\nexport default DateSlider","import React from 'react';\r\n\r\nconst Legend = ( props ) => {\r\n\r\n    const cleanBins = (bins) => {\r\n        if (bins === undefined) {\r\n            return;\r\n        } else if (bins.slice(-1,)[0] !==`>${bins.slice(-2,-1)[0]}`) {\r\n            return bins\r\n        }\r\n        bins.splice(0, 1, `<${bins[0]}`)\r\n        bins.splice(-2, 1)\r\n        return bins\r\n    }\r\n\r\n    return (\r\n        <div id='legend'>\r\n            <h4>\r\n                {props.title !== undefined && props.title}\r\n            </h4>\r\n            <div id=\"binBars\">\r\n                {props.colors !== undefined && \r\n                    props.colors.map(color => <div className=\"bin color\" key={`${color[0]}${color[1]}`}style={{backgroundColor:`rgb(${color[0]},${color[1]},${color[2]})`}}></div>)\r\n                }\r\n            </div>\r\n            <div id=\"binLabels\" style={{padding: (`0 ${props.labels !== undefined ? 100/props.labels.length/2-1 : 0}%`) }}>\r\n                <div className=\"bin label\">0</div>\r\n                {props.labels !== undefined && \r\n                    cleanBins(props.labels).map(label => <div className=\"bin label\" key={label}>{label}</div>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Legend","import React, { useEffect, useState } from 'react';\r\nimport { setCentroids, storeData, setCurrentData, setDates, setColumnNames, setDate, setDateIndex, setBins, set3D, setDataFunction } from './actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport GeodaProxy from './GeodaProxy.js';\r\nimport { getParseCSV, getJson, mergeData, colIndex, getDataForBins, dataFn } from './utils';\r\nimport { Map, DateSlider, Legend } from './components';\r\n\r\nfunction App() {\r\n  const storedData = useSelector(state => state.storedData);\r\n  const currentData = useSelector(state => state.currentData);\r\n  const columnNames = useSelector(state => state.cols);\r\n  const currDate = useSelector(state => state.currDate);\r\n  const currDateIndex = useSelector(state => state.currDateIndex);\r\n  const dates = useSelector(state => state.dates);\r\n  const bins = useSelector(state => state.bins);\r\n  const binMode = useSelector(state => state.binMode);\r\n  const colorScale = useSelector(state => state.colorScale);\r\n  const dataParams = useSelector(state => state.dataParams);\r\n\r\n  const [gda_proxy, set_gda_proxy] = useState(null);\r\n  \r\n  const dispatch = useDispatch();  \r\n  \r\n  const getCentroids = (geojson, gda_proxy) =>  dispatch(setCentroids(gda_proxy.GetCentroids(geojson), geojson))\r\n  \r\n  const getDates = (data, table, geojson) =>  {\r\n    let dates = findDates(data[table])\r\n    dispatch(setDates(dates, geojson))\r\n    dispatch(setDate(dates.slice(-1,)[0]))\r\n    dispatch(setDateIndex(colIndex(data, table, dates.slice(-1,)[0])))\r\n  }\r\n\r\n  const findDates = (data) => {\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (Date.parse(data[i])) {\r\n        return data.slice(i,)\r\n      }\r\n    }\r\n    return;\r\n  }\r\n\r\n  const getColumns = (data, names) => {\r\n    let rtn = {};\r\n    for (let i=0; i < data.length; i++) {\r\n      rtn[names[i]] = data[i][1]\r\n    }\r\n  return rtn;\r\n  }\r\n\r\n  async function loadData(geojson, csvs, joinCols, names, gda_proxy) {\r\n    const csvPromises = csvs.map(csv => getParseCSV(`${process.env.PUBLIC_URL}/csv/${csv}.csv`, joinCols[1]).then(result => {return result}))\r\n    Promise.all([\r\n      getJson(`${process.env.PUBLIC_URL}/geojson/${geojson}`, gda_proxy),\r\n      ...csvPromises\r\n    ]).then(values => {\r\n      // console.log(values.slice(1,))\r\n      dispatch(storeData(mergeData(values[0], joinCols[0], values.slice(1,), names, joinCols[1]),geojson));\r\n      dispatch(setCurrentData(geojson))\r\n      dispatch(setColumnNames(getColumns(values.slice(1,), names), geojson))\r\n    })    \r\n  }\r\n\r\n  // After runtime is initialized, this loads in gda_proxy to the state\r\n  useEffect(() => {\r\n    if (gda_proxy === null) {\r\n      set_gda_proxy(new GeodaProxy());\r\n    }\r\n  },[window.Module])\r\n\r\n  // on initial load and after gda_proxy has been initialized, this loads in the default data sets (USA Facts)\r\n  useEffect(() => {\r\n    if ((gda_proxy != null) && (currentData == '')) {\r\n      loadData(\r\n        'county_usfacts.geojson', \r\n        ['covid_confirmed_usafacts','covid_deaths_usafacts', 'berkeley_predictions', 'chr_health_context', 'chr_life', 'chr_health_factors'], \r\n        ['GEOID', 'FIPS'], \r\n        ['cases','deaths', 'predictions', 'chr_health_context', 'chr_life', 'chr_health_factors'],\r\n        gda_proxy\r\n      )\r\n    }\r\n  },[gda_proxy])\r\n\r\n  // whenever the current data changes, this \r\n  useEffect(() => {\r\n    if (currentData != '') {\r\n      if (!dates.hasOwnProperty(currentData)){\r\n        getCentroids(currentData, gda_proxy)\r\n        getDates(columnNames[currentData], 'cases', currentData)\r\n      }\r\n    } \r\n  },[columnNames])\r\n\r\n  // whenever the current date index changes, this \r\n  useEffect(() => {\r\n    if (currDateIndex != '') {\r\n      if (binMode == 'dynamic') {\r\n        let nb = gda_proxy.custom_breaks(currentData, \"natural_breaks\", 8, null, getDataForBins(storedData[currentData], dataParams.numerator, currDateIndex, dataParams.nRange, dataParams.denominator, dataParams.dProperty, dataParams.dIndex, dataParams.dRange, dataParams.scale))\r\n        dispatch(setBins(nb.bins, [-Math.pow(10, 12), ...nb.breaks.slice(1,-1), Math.pow(10, 12)]))\r\n      } else if (!bins.hasOwnProperty('bins')) {\r\n        let nb = gda_proxy.custom_breaks(currentData, \"natural_breaks\", 8, null, getDataForBins(storedData[currentData], dataParams.numerator, currDateIndex, dataParams.nRange, dataParams.denominator, dataParams.dProperty, dataParams.dIndex, dataParams.dRange, dataParams.scale))\r\n        dispatch(setBins(nb.bins, [-Math.pow(10, 12), ...nb.breaks.slice(1,-1), Math.pow(10, 12)]))\r\n        \r\n        // let t0 = performance.now()\r\n        // let n = 1000;\r\n        // while (n--) {\r\n        //   getDataForBins(storedData[currentData], dataParams.numerator, currDateIndex, dataParams.nRange, dataParams.denominator, dataParams.dProperty, dataParams.dIndex, dataParams.dRange, dataParams.scale)\r\n        // }\r\n        // console.log(performance.now()-t0)\r\n      } else {}\r\n    } \r\n  },[currDateIndex])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\" style={{position:'fixed', left: '20px', top:'20px', zIndex:10}}>\r\n        <h1 style={{color:\"white\"}}>Tech Demo</h1>\r\n        <button onClick={() => dispatch(set3D())}>3D</button>\r\n      </header>\r\n      <Map />\r\n      <Legend labels={bins.bins} title={currentData} colors={colorScale} />\r\n      <DateSlider />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const INITIAL_STATE = {\r\n  geodaProxy: null,\r\n  storedData: {},\r\n  cols: {},\r\n  currentData: '',\r\n  chartData: {},\r\n  bins: {},\r\n  binMode: '',\r\n  colorScale:  [\r\n    [240,240,240],\r\n    [255,255,204],\r\n    [255,237,160],\r\n    [254,217,118],\r\n    [254,178,76],\r\n    [253,141,60],\r\n    [252,78,42],\r\n    [227,26,28],\r\n    [177,0,38],\r\n  ],\r\n  centroids: {},\r\n  dates: {},\r\n  currDate: '',\r\n  currDateIndex: '',\r\n  currentVariable: '7-Day Average Daily New Confirmed Count per 100K Pop',\r\n  currentMethod: 'natural_breaks',\r\n  currentOverlay: '',\r\n  currentResource: '',\r\n  dataParams: {\r\n    numerator: 'cases',\r\n    nRange: 7,\r\n    denominator: 'properties',\r\n    dProperty: 'population',\r\n    dRange:null,\r\n    dIndex:null,\r\n    scale:100000,\r\n  },\r\n  isCartogram: false,\r\n  currentGeoid: '',\r\n  use3D: false,\r\n  sidebarData: {}\r\n};","import { INITIAL_STATE } from '../constants/defaults';\r\n\r\nvar reducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case 'SET_GEOID': \r\n            return {\r\n                ...state,\r\n                currentGeoid: action.payload.geoid\r\n            };\r\n        case 'SET_STORED_DATA':\r\n            let obj = {\r\n                ...state.storedData,\r\n            }\r\n            obj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                storedData: obj\r\n            };\r\n        case 'SET_CENTROIDS':\r\n            let centroidsObj = {\r\n                ...state.centroids,\r\n            }\r\n            centroidsObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                centroids: centroidsObj\r\n            };\r\n        case 'SET_CURRENT_DATA':\r\n            return {\r\n                ...state,\r\n                currentData: action.payload.data\r\n            }\r\n        case 'SET_GEODA_PROXY':\r\n            return {\r\n                ...state,\r\n                geodaProxy: action.payload.proxy\r\n            }\r\n        case 'SET_DATES':\r\n            let datesObj = {\r\n                ...state.dates\r\n            }\r\n            datesObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                dates: datesObj\r\n            }\r\n        case 'SET_DATA_FUNCTION':\r\n            return {\r\n                ...state,\r\n                currentDataFn: action.payload.fn\r\n            }\r\n        case 'SET_COLUMN_NAMES':\r\n            let colObj = {\r\n                ...state.cols\r\n            }\r\n            colObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                cols: colObj\r\n            }\r\n        case 'SET_CURR_DATE':\r\n            return {\r\n                ...state,\r\n                currDate: action.payload.date\r\n            }\r\n        case 'SET_DATE_INDEX':\r\n            return {\r\n                ...state,\r\n                currDateIndex: action.payload.index\r\n            }\r\n        case 'SET_BINS':\r\n            let binsObj = {};\r\n            binsObj['bins'] =  action.payload.bins;\r\n            binsObj['breaks'] =  action.payload.breaks;\r\n            return {\r\n                ...state,\r\n                bins: binsObj\r\n            }\r\n        case 'SET_3D':\r\n            return {\r\n                ...state,\r\n                use3D: !state.use3D\r\n            }\r\n        case 'SET_DATA_SIDEBAR':\r\n            return {\r\n                ...state,\r\n                sidebarData: action.payload.data\r\n            }\r\n        case 'INCREMENT_DATE':\r\n            if (action.payload.index+state.currDateIndex > state.dates[state.currentData].length) {\r\n                return {\r\n                    ...state,\r\n                    currDateIndex:0\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    currDateIndex: state.currDateIndex + action.payload.index,\r\n                    currDate: state.dates[state.currentData][state.currDateIndex + action.payload.index]\r\n                }\r\n            }\r\n        case 'SET_VARIALBLE_PARAMS':\r\n            let paramObj = {\r\n                ...state.dataParams,\r\n                ...action.payload.params\r\n            }\r\n            return {\r\n                ...state,\r\n                dataParams: paramObj\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { createStore} from 'redux';\r\nimport reducer from './reducers';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}