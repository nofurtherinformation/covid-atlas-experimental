{"version":3,"sources":["actions/index.js","GeodaProxy.js","utils/loadGeojsonToGeoda.js","utils/getJson.js","utils/getParseCSV.js","utils/mergeData.js","utils/colIndex.js","utils/colLookup.js","utils/dataFunction.js","utils/getDataForBins.js","utils/mapFunction.js","utils/getDataForCharts.js","components/map.js","components/slider.js","components/legend.js","components/dataPanel.js","components/variablePanel.js","components/mainLineChart.js","App.js","constants/defaults.js","reducers/index.js","index.js"],"names":["storeData","data","name","type","payload","setCurrentData","setColumnNames","setDate","date","setBins","bins","breaks","setVariableParams","params","window","Module","isInt","n","Number","GeodaProxy","this","geojson_maps","map_uid","file_target","uint8_t_arr","Uint8Array","result","uint8_t_ptr","_malloc","length","HEAPU8","set","ccall","_free","map_type","get_map_type","cc","get_centroids","xx","get_x","yy","get_y","centroids","i","size","push","get","get_num_obs","col_name","get_numeric_col","order","include_lower_order","precision","rook_weights","queen_weights","is_arc","is_mile","min_distance_threshold","k","power","is_inverse","knn_weights","dist_thres","dist_weights","kernel","adaptive_bandwidth","use_kernel_diagonals","kernel_weights","kernel_bandwidth_weights","weight_uid","local_moran","values","local_moran1","toVecDouble","local_g","local_gstar","local_geary","local_joincount","idx","nbrs","get_neighbors","parseVecInt","vi","j","vvi","sub","vd","input","vs","VectorString","push_back","VectorDouble","isNaN","Infinity","sel_fields","bound_var","min_bound","method","col_names","toVecString","clusters_vec","redcap","parseVecVecInt","tabu_length","cool_rate","n_iter","maxp","break_name","sel_field","breaks_vec","custom_breaks1","custom_breaks","parseVecDouble","orig_breaks","id_array","txt","toFixed","undefined","unshift","NEGATIVE_INFINITY","POSITIVE_INFINITY","v","min_val","max_val","cart","cartogram","x","y","r","get_radius","min_x","max_x","min_y","max_y","scale_x","scale_y","loadGeojsonToGeoda","url","gda_proxy","a","arrayBuffer","ReadGeojsonMap","split","slice","fetch","then","response","responseFromJson","clone","json","tempData","getJson","joinCol","ok","text","Promise","reject","status","d3","rtn","Object","keys","getParseCSV","mergeData","featureCollection","featureCollectionJoinCol","joinData","joinDataNames","joinDataCol","features","dataDict","baseColumnLength","colNumCheck","parseInt","properties","isInteger","cols","merged","merge","colIndex","table","indexOf","colLookup","columns","dataset","property","dataFn","numeratorData","numeratorProperty","index","range","denominatorData","denominatorProperty","denominatorIndex","denominatorRange","scale","getDataForBins","tableData","nType","numerProp","numerIndex","numerRange","denomTable","dType","denomProp","denomIndex","denomRange","t0","performance","now","tempIndex","tempDenomIndex","console","log","mapFn","val","colors","getDataForCharts","startIndex","dates","tempObj","sum","count","initialViewState","latitude","longitude","zoom","pitch","bearing","DATA_URL","CONTINENTS","process","viewGlobe","GlobeView","id","controller","resolution","view","MapView","repeat","Map","useState","hoverInfo","setHoverInfo","globalMap","storedData","useSelector","state","currentData","colorScale","use3D","dataParams","dispatch","useDispatch","Layers","GeoJsonLayer","pickable","stroked","filled","wireframe","getFillColor","extruded","opacity","f","hasOwnProperty","numerator","nProperty","nIndex","nRange","denominator","dProperty","dIndex","dRange","GetFillColor","getElevation","GetHeight","updateTriggers","onHover","info","onClick","object","autoHighlight","style","position","left","top","width","height","layers","views","reuseMaps","mapStyle","preventStyleDiffing","mapboxApiAccessToken","zIndex","pointerEvents","background","padding","NAME","state_name","cases","deaths","useStyles","makeStyles","root","margin","color","button","transition","borderColor","fontSize","buttonActive","cursor","slider","display","boxShadow","playPauseButton","transform","fill","DateSlider","classes","startDateIndex","timerId","setTimerId","customRange","setCustomRange","handleRangeButton","Grid","container","spacing","className","visibility","item","xs","Button","rate","interval","setInterval","o","clearInterval","handlePlayPause","viewBox","d","Slider","value","onChange","event","newValue","getAriaValueText","aria-labelledby","min","step","max","ButtonGroup","orientation","aria-label","float","valueLabelDisplay","Legend","props","title","map","backgroundColor","labels","splice","cleanBins","label","DataPanel","hidePanel","setHidePanel","sidebarData","prev","version","theme","formControl","minWidth","borderBottom","twoUp","VariablePanel","columnNames","currentVariable","PresetVariables","CountyVariables","StateVariables","FormControl","InputLabel","htmlFor","Select","ListSubheader","MenuItem","defaultValue","variable","target","includes","component","FormLabel","RadioGroup","FormControlLabel","control","Radio","class","href","rel","src","MainLineChart","chartData","right","bottom","dataKey","stroke","dot","App","binMode","set_gda_proxy","findDates","Date","parse","getColumns","names","geojson","csvs","joinCols","csvPromises","csv","all","useEffect","waitForWASM","setTimeout","loadData","GetCentroids","getCentroids","setDates","getDates","nb","Math","pow","INITIAL_STATE","geodaProxy","currDate","currDateIndex","currentMethod","currentOverlay","currentResource","storedRange","isCartogram","currentGeoid","reducer","action","geoid","obj","centroidsObj","proxy","datesObj","currentDataFn","fn","colObj","binsObj","dateObj","paramObj","storedIndex","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","WebFont","load","google","families","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1a91771.chunk.js","sourcesContent":["let timer = null;\r\n\r\nexport const setGeoid = (geoid) => {\r\n    return {\r\n        type: 'SET_GEOID',\r\n        payload: {\r\n            geoid\r\n        }\r\n    }\r\n}\r\n\r\nexport const storeData = (data, name) => {\r\n    return {\r\n        type: 'SET_STORED_DATA',\r\n        payload: {\r\n            data,\r\n            name\r\n        }   \r\n    }\r\n}\r\n\r\nexport const setCurrentData = (data) => {\r\n    return {\r\n        type: 'SET_CURRENT_DATA',\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport const setGeodaProxy = (proxy) => {\r\n    return {\r\n        type: 'SET_GEODA_PROXY',\r\n        payload: {\r\n            proxy\r\n        }\r\n    }\r\n}\r\n\r\nexport const setCentroids = (data, name) => {\r\n    return {\r\n        type: 'SET_CENTROIDS',\r\n        payload: {\r\n            data,\r\n            name\r\n        }\r\n    }\r\n}\r\n\r\nexport const setDates = (data, name) => {\r\n    return {\r\n        type: 'SET_DATES',\r\n        payload: {\r\n            data,\r\n            name\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const setDataFunction = (fn) => {\r\n    return {\r\n        type: 'SET_DATA_FUNCTION',\r\n        payload: {\r\n            fn\r\n        }\r\n    }\r\n}\r\n\r\nexport const setColumnNames = (data, name) => {\r\n    return {\r\n        type: 'SET_COLUMN_NAMES',\r\n        payload: {\r\n            data,\r\n            name\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const setDate = (date) => {\r\n    return {\r\n        type: 'SET_CURR_DATE',\r\n        payload: {\r\n            date\r\n        }\r\n    }\r\n}\r\n\r\nexport const setDateIndex = (index) => {\r\n    return {\r\n        type: 'SET_DATE_INDEX',\r\n        payload: {\r\n            index\r\n        }\r\n    }\r\n}\r\n\r\nexport const setStartDateIndex = (index) => {\r\n    return {\r\n        type: 'SET_START_DATE_INDEX',\r\n        payload: {\r\n            index\r\n        }\r\n    }\r\n}\r\n\r\nexport const setBins = (bins, breaks) => {\r\n    return {\r\n        type: 'SET_BINS',\r\n        payload: {\r\n            bins,\r\n            breaks\r\n        }\r\n    }\r\n}\r\n\r\nexport const set3D = () => {\r\n    return {\r\n        type: 'SET_3D'\r\n    }\r\n}\r\n\r\nexport const setDataSidebar = ( data ) => {\r\n    return {\r\n        type: 'SET_DATA_SIDEBAR',\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport const incrementDate = ( index ) => {\r\n    return {\r\n        type: 'INCREMENT_DATE',\r\n        payload: {\r\n            index\r\n        }\r\n    }\r\n}\r\n\r\nexport const setVariableParams = ( params ) => {\r\n    return {\r\n        type: 'SET_VARIABLE_PARAMS',\r\n        payload: {\r\n            params\r\n        }\r\n    }\r\n}\r\n\r\nexport const setChartData = ( data ) => {\r\n    return {\r\n        type: 'SET_CHART_DATA',\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport const setVariableName = ( name ) => {\r\n    return {\r\n        type: 'SET_VARIABLE_NAME',\r\n        payload: {\r\n            name\r\n        }\r\n    }\r\n}","var Module = window.Module;\r\n\r\nfunction isInt(n) {\r\n  return Number(n) === n && n % 1 === 0;\r\n}\r\n\r\nclass GeodaProxy {\r\n  // file_target is evt.target\r\n  constructor() {\r\n    this.geojson_maps = {};\r\n  }\r\n\r\n  ReadGeojsonMap(map_uid, file_target) {\r\n    //evt.target.result is an ArrayBuffer. In js, \r\n    const uint8_t_arr = new Uint8Array(file_target.result);\r\n    //First we need to allocate the wasm memory. \r\n    const uint8_t_ptr = window.Module._malloc(uint8_t_arr.length);\r\n    //Now that we have a block of memory we can copy the file data into that block\r\n    window.Module.HEAPU8.set(uint8_t_arr, uint8_t_ptr);\r\n    // pass the address of the wasm memory we just allocated to our function\r\n    //window.Module.new_geojsonmap(map_uid, uint8_t_ptr, uint8_t_arr.length);\r\n    window.Module.ccall(\"new_geojsonmap1\", null, [\"string\", \"number\", \"number\"], [map_uid, uint8_t_ptr, uint8_t_arr.length]);\r\n\r\n    //Lastly, according to the docs, we should call ._free here.\r\n    window.Module._free(uint8_t_ptr);\r\n    // store the map and map type\r\n    let map_type = window.Module.get_map_type(map_uid);\r\n    this.geojson_maps[map_uid] = map_type;\r\n    return map_uid;\r\n  }\r\n\r\n  Has(map_uid) {\r\n    return map_uid in this.geojson_maps;\r\n  }\r\n\r\n  List() {\r\n    return this.geojson_maps;\r\n  }\r\n\r\n  GetCentroids(map_uid) {\r\n    let cc = window.Module.get_centroids(map_uid);\r\n    let xx = cc.get_x();\r\n    let yy = cc.get_y();\r\n    var centroids = [];\r\n    for (let i = 0; i < xx.size(); ++i) {\r\n      centroids.push([xx.get(i), yy.get(i)]);\r\n    }\r\n    return centroids;\r\n  }\r\n\r\n  GetNumObs(map_uid) {\r\n    let n = window.Module.get_num_obs(map_uid);\r\n    return n;\r\n  }\r\n\r\n  GetMapType(map_uid) {\r\n    return this.geojson_maps[map_uid];\r\n  }\r\n\r\n  GetNumericCol(map_uid, col_name) {\r\n    // return VectorDouble\r\n    return window.Module.get_numeric_col(map_uid, col_name)\r\n  }\r\n\r\n  CreateRookWeights(map_uid, order, include_lower_order, precision) {\r\n    let w_uid = window.Module.rook_weights(map_uid, order, include_lower_order, precision);\r\n    return w_uid;\r\n  }\r\n\r\n  CreateQueenWeights(map_uid, order, include_lower_order, precision) {\r\n    let w_uid = window.Module.queen_weights(map_uid, order, include_lower_order, precision);\r\n    return w_uid;\r\n  }\r\n\r\n  GetMinDistThreshold(map_uid, is_arc, is_mile) {\r\n    let val = window.Module.min_distance_threshold(map_uid, is_arc, is_mile);\r\n    return val;\r\n  }\r\n\r\n  CreateKnnWeights(map_uid, k, power, is_inverse, is_arc, is_mile) {\r\n    let w = window.Module.knn_weights(map_uid, k, power, is_inverse, is_arc, is_mile);\r\n    return w;\r\n  }\r\n\r\n  CreateDistWeights(map_uid, dist_thres, power, is_inverse, is_arc, is_mile) {\r\n    let w = window.Module.dist_weights(map_uid, dist_thres, power, is_inverse, is_arc, is_mile);\r\n    return w;\r\n  }\r\n\r\n  CreateKernelWeights(map_uid, k, kernel, adaptive_bandwidth, use_kernel_diagonals, is_arc, is_mile) {\r\n    let w = window.Module.kernel_weights(map_uid, k, kernel, adaptive_bandwidth, use_kernel_diagonals, is_arc, is_mile);\r\n    return w;\r\n  }\r\n\r\n  CreateKernelBandwidthWeights(map_uid, dist_thres, kernel, use_kernel_diagonals, is_arc, is_mile) {\r\n    let w = window.Module.kernel_bandwidth_weights(map_uid, dist_thres, kernel, use_kernel_diagonals, is_arc, is_mile);\r\n    return w;\r\n  }\r\n\r\n  local_moran(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_moran(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  local_moran1(map_uid, weight_uid, values) {\r\n    return window.Module.local_moran1(map_uid, weight_uid, this.toVecDouble(values));\r\n  }\r\n\r\n  local_g(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_g(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  local_gstar(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_gstar(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  local_geary(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_geary(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  local_joincount(map_uid, weight_uid, col_name) {\r\n    return window.Module.local_joincount(map_uid, weight_uid, col_name);\r\n  }\r\n\r\n  GetNeighbors(map_uid, weight_uid, idx) {\r\n    let nbrs = window.Module.get_neighbors(map_uid, weight_uid, idx);\r\n    return this.parseVecInt(nbrs);\r\n  }\r\n\r\n  parseVecInt(vi) {\r\n    let result = [];\r\n    for (let j = 0; j < vi.size(); ++j) {\r\n      result.push(vi.get(j));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  parseVecVecInt(vvi) {\r\n    let result = [];\r\n    for (let i = 0; i < vvi.size(); ++i) {\r\n      let sub = [];\r\n      let vi = vvi.get(i);\r\n      for (let j = 0; j < vi.size(); ++j) {\r\n        sub.push(vi.get(j));\r\n      }\r\n      result.push(sub);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  parseVecDouble(vd) {\r\n    let result = []\r\n    for (let i = 0; i < vd.size(); ++i) {\r\n      result.push(vd.get(i));\r\n    }\r\n    return result;\r\n  }\r\n\r\n\r\n  toVecString(input) {\r\n    let vs = new window.Module.VectorString();\r\n    for (let i = 0; i < input.length; ++i) {\r\n      vs.push_back(input[i]);\r\n    }\r\n    return vs;\r\n  }\r\n\r\n  toVecDouble(input) {\r\n    let vs = new window.Module.VectorDouble();\r\n    for (let i = 0; i < input.length; ++i) {\r\n      if (isNaN(input[i]) || input[i] == Infinity)\r\n        vs.push_back(0);\r\n      else\r\n        vs.push_back(input[i]);\r\n    }\r\n    return vs;\r\n  }\r\n\r\n  redcap(map_uid, weight_uid, k, sel_fields, bound_var, min_bound, method) {\r\n    let col_names = this.toVecString(sel_fields);\r\n    let clusters_vec = window.Module.redcap(map_uid, weight_uid, k, col_names, bound_var, min_bound, method);\r\n    let clusters = this.parseVecVecInt(clusters_vec);\r\n    return clusters;\r\n  }\r\n\r\n  maxp(map_uid, weight_uid, k, sel_fields, bound_var, min_bound, method, tabu_length, cool_rate, n_iter) {\r\n    let col_names = this.toVecString(sel_fields);\r\n    let clusters_vec = window.Module.maxp(map_uid, weight_uid, col_names, bound_var, min_bound, tabu_length, cool_rate, method, k, n_iter);\r\n    let clusters = this.parseVecVecInt(clusters_vec);\r\n    return clusters;\r\n  }\r\n\r\n  custom_breaks(map_uid, break_name, k, sel_field, values) {\r\n    var breaks_vec;\r\n    if (sel_field == null) {\r\n      breaks_vec = window.Module.custom_breaks1(map_uid, k, break_name, this.toVecDouble(values));\r\n    } else {\r\n      breaks_vec = window.Module.custom_breaks(map_uid, k, sel_field, break_name);\r\n    }\r\n    let breaks = this.parseVecDouble(breaks_vec);\r\n    var orig_breaks = breaks;\r\n\r\n    let bins = [];\r\n    let id_array = [];\r\n    for (let i = 0; i < breaks.length; ++i) {\r\n      id_array.push([]);\r\n      let txt = isInt(breaks[i]) ? breaks[i] : breaks[i].toFixed(2);\r\n      bins.push(\"\" + txt);\r\n    }\r\n    id_array.push([]);\r\n    let txt = breaks[breaks.length - 1];\r\n    if (txt != undefined) {\r\n      txt = isInt(txt) ? txt : txt.toFixed(2);\r\n      bins.push(\">\" + txt);\r\n    }\r\n\r\n    breaks.unshift(Number.NEGATIVE_INFINITY);\r\n    breaks.push(Number.POSITIVE_INFINITY);\r\n\r\n    for (let i = 0; i < values.length; ++i) {\r\n      let v = values[i];\r\n      for (let j = 0; j < breaks.length - 1; ++j) {\r\n        let min_val = breaks[j];\r\n        let max_val = breaks[j + 1];\r\n        if (v >= min_val && v < max_val) {\r\n          id_array[j].push(i);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < bins.length; ++i) {\r\n      //bins[i] += \" (\" + id_array[i].length + ')';\r\n    }\r\n\r\n    return {\r\n      'k': k,\r\n      'bins': bins,\r\n      'breaks': orig_breaks,\r\n      'id_array': id_array\r\n    }\r\n  }\r\n\r\n  cartogram(map_uid, values) {\r\n    let cart = window.Module.cartogram(map_uid, this.toVecDouble(values));\r\n    let x = cart.get_x();\r\n    let y = cart.get_y();\r\n    let r = cart.get_radius();\r\n    // rescale x, y [-100,0], [0, 45]\r\n    let min_x = x.get(0);\r\n    let max_x = x.get(0);\r\n    let min_y = y.get(0);\r\n    let max_y = y.get(0);\r\n    for (let i = 0; i < x.size(); ++i) {\r\n      if (min_x > x.get(i)) min_x = x.get(i);\r\n      if (max_x < x.get(i)) max_x = x.get(i);\r\n      if (min_y > y.get(i)) min_y = y.get(i);\r\n      if (max_y < y.get(i)) max_y = y.get(i);\r\n    }\r\n    let scale_x = 100.0 / (max_x - min_x);\r\n    let scale_y = 45.0 / (max_y - min_y);\r\n\r\n\r\n    var result = [];\r\n    for (let i = 0; i < x.size(); ++i) {\r\n      let xx = (x.get(i) - min_x) * scale_x;\r\n      let yy = (y.get(i) - min_y) * scale_y;\r\n      result.push({\r\n        'properties': {\r\n          'id': i\r\n        },\r\n        'position': [x.get(i) / 10000.0, y.get(i) / 10000.0],\r\n        'radius': r.get(i)\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default GeodaProxy","export const loadGeojsonToGeoda = async (data, url, gda_proxy) => {\r\n  const arrayBuffer = await data.arrayBuffer();\r\n\r\n  gda_proxy.ReadGeojsonMap('/geojson/county_usfacts.geojson'.split('/').slice(-1,)[0], {\r\n      result: arrayBuffer,\r\n  });\r\n}","import { loadGeojsonToGeoda } from './loadGeojsonToGeoda.js';\r\n\r\nasync function getJson(url, gda_proxy){\r\n    const tempData = await fetch(url)\r\n      .then(response => {\r\n\r\n        const responseFromJson = response.clone();        \r\n\r\n        loadGeojsonToGeoda(responseFromJson, url, gda_proxy);\r\n\r\n        return response.json();\r\n\r\n      }).then(data => {\r\n\r\n        return data\r\n\r\n      });     \r\n      \r\n    return tempData;\r\n}\r\nexport default getJson;","import * as d3 from 'd3-dsv';\r\n\r\nasync function getParseCSV(url, joinCol){\r\n    const tempData = await fetch(url)\r\n      .then(response => {\r\n        return response.ok ? response.text() : Promise.reject(response.status);\r\n      }).then(text => {\r\n        let data = d3.csvParse(text, d3.autoType)\r\n        let rtn = {};\r\n        let n = data.length;\r\n        while (n>0){\r\n          n--;\r\n          rtn[data[n][joinCol]] = Object.values(data[n])\r\n        }\r\n        return [rtn, Object.keys(data[0])]\r\n      });\r\n    return tempData;\r\n}\r\n\r\nexport default getParseCSV","import { merge } from 'lodash';\r\n\r\nconst mergeData = (featureCollection, featureCollectionJoinCol, joinData, joinDataNames, joinDataCol) => {\r\n    // declare parent dictionaries\r\n    let features = {}\r\n    let dataDict = {}\r\n\r\n    let baseColumnLength = Object.keys(featureCollection.features[0]).length;\r\n\r\n    // declare and prep feature collection object\r\n    let i = featureCollection.features.length;\r\n    let colNumCheck = parseInt(featureCollection.features[0].properties[featureCollectionJoinCol])\r\n    if (Number.isInteger(colNumCheck)) {\r\n      while (i>0) {\r\n        i--;\r\n        features[parseInt(featureCollection.features[i].properties[featureCollectionJoinCol])] = featureCollection.features[i];\r\n        dataDict[parseInt(featureCollection.features[i].properties[featureCollectionJoinCol])] = {};\r\n      }\r\n    } else {\r\n      while (i>0) {\r\n        i--;\r\n        features[featureCollection.features[i].properties[featureCollectionJoinCol]] = featureCollection.features[i];\r\n        dataDict[featureCollection.features[i].properties[featureCollectionJoinCol]] = {};\r\n      }\r\n    }\r\n  \r\n    // // declare data objects\r\n    // for (let n=0; n < joinDataNames.length; n++) {\r\n    //   dataDict[`${joinDataNames[n]}`] = {}\r\n    // }\r\n  \r\n    // loop through data and add to dictionaries\r\n    let n = joinData.length;\r\n    while (n>0) {\r\n      n--;\r\n      let cols = Object.keys(joinData[n][0]);\r\n      i = cols.length;\r\n      while (i>0) {\r\n        i--;\r\n        try {\r\n          dataDict[cols[i]][joinDataNames[n]] = joinData[n][0][cols[i]]\r\n        } catch {}\r\n      }\r\n    }\r\n    \r\n    // // use lodash to merge data\r\n    let merged = merge(features, dataDict)\r\n    // for (let n=1; n < joinDataNames.length; n++){\r\n    //   merged = merge(merged, dataDict[joinDataNames[n]])\r\n    // }\r\n    \r\n    // clean data\r\n    let rtn = [];\r\n    let keys = Object.keys(merged)\r\n    \r\n    for (let i = 0; i < keys.length; i++) {\r\n      if (Object.keys(merged[keys[i]]).length == (joinDataNames.length+baseColumnLength)) rtn.push(merged[keys[i]])\r\n    }\r\n\r\n    return rtn;\r\n}\r\n\r\nexport default mergeData;","const colIndex = (data, table, date) => {\r\n    return data[table].indexOf(date);\r\n}\r\n\r\nexport default colIndex","const colLookup = (columns, dataset, table, property) => {\r\n    try {\r\n        return columns[dataset][table].indexOf(property); \r\n    } catch {\r\n        return null;\r\n    }\r\n}\r\nexport default colLookup;","// branchless variant\r\n// const dataFn = (numeratorData, numeratorProperty, index, range, denominatorData, denominatorProperty, denominatorIndex, denominatorRange, scale)  => {\r\n\r\n//     return (\r\n//       (\r\n//         (\r\n//           (\r\n//             (numeratorData[index]||numeratorData[numeratorProperty])\r\n//             -\r\n//             ((range!==null)&&(numeratorData[index-range]))\r\n//           )\r\n          \r\n//           /\r\n//           (range+(range===null))\r\n//         )\r\n//       /\r\n//         (\r\n//           (\r\n//             (\r\n//               (denominatorData[denominatorIndex]||denominatorData[denominatorProperty])\r\n//               -\r\n//               ((denominatorRange!==null)&&(denominatorData[denominatorIndex-denominatorRange]))\r\n//             )\r\n//             /\r\n//             (denominatorRange+(denominatorRange===null))\r\n//           )\r\n//           ||\r\n//             (denominatorData[denominatorProperty])\r\n//           || \r\n//           1\r\n//         )\r\n//       )\r\n//       *\r\n//       scale\r\n//     )\r\n// }\r\n\r\n// export default dataFn;\r\n\r\nconst dataFn = (numeratorData, numeratorProperty, index, range, denominatorData, denominatorProperty, denominatorIndex, denominatorRange, scale)  => {\r\n  if (denominatorProperty===null&&range===null){ // whole count or number -- no range, no normalization\r\n    return (numeratorData[numeratorProperty]||numeratorData[index])*scale\r\n  } else if (denominatorProperty===null&&range!==null){ // range number, daily or weekly count -- no normalization\r\n    return (numeratorData[index]-numeratorData[index-range])/range*scale\r\n  } else if (denominatorProperty!==null&&range===null){ // whole count or number normalized -- no range\r\n    return (numeratorData[numeratorProperty]||numeratorData[index])/(denominatorData[denominatorProperty]||denominatorData[denominatorIndex])*scale\r\n  } else if (denominatorProperty!==null&&range!==null&&denominatorRange===null){ // range number, daily or weekly count, normalized to a single value\r\n    return ((numeratorData[index]-numeratorData[index-range])/range)/(denominatorData[denominatorProperty]||denominatorData[denominatorIndex])*scale\r\n  } else if (denominatorProperty!==null&&range!==null&&denominatorRange!==null){ // range number, daily or weekly count, normalized to a range number, daily or weekly count\r\n    return ((numeratorData[index]-numeratorData[index-range])/range)/((denominatorData[denominatorIndex]-denominatorData[denominatorIndex-denominatorRange])/denominatorRange)*scale\r\n  } else {      \r\n    return 0;\r\n  }\r\n}\r\n\r\nexport default dataFn;","import dataFn from './dataFunction';\r\n\r\n// this function loops through the current data set and provides data for GeodaJS to create custom breaks \r\nconst getDataForBins = (tableData, table, nType, numerProp, numerIndex, numerRange, denomTable, dType, denomProp, denomIndex, denomRange, scale) => {\r\n    let t0 = performance.now() // logging performance\r\n\r\n    // declare empty array for return variables\r\n    let rtn = [];\r\n\r\n    // length of data table to loop through\r\n    let n = tableData.length;\r\n\r\n    // this checks if the bins generated should be dynamic (generating for each date) or fixed (to the most recent date)\r\n    if (numerIndex === null && numerProp === null) {\r\n        // if fixed, get the most recent date\r\n        let tempIndex = tableData[0][table].length-1;\r\n        \r\n        // if the denominator is time series data (eg. deaths / cases this week), make the indices the same (most recent)\r\n        let tempDenomIndex = dType === 'time-series' ? tableData[0][denomTable].length-1 : denomIndex;\r\n\r\n        // loop through, do appropriate calculation. push returned value to rtn array\r\n        while (n>0) {\r\n            n--;\r\n            rtn.push(dataFn(tableData[n][table], numerProp, tempIndex, numerRange, tableData[n][denomTable], denomProp, tempDenomIndex, denomRange, scale))\r\n        }\r\n    } else {\r\n       while (n>0) {\r\n            n--;\r\n            rtn.push(dataFn(tableData[n][table], numerProp, numerIndex, numerRange, tableData[n][denomTable], denomProp, denomIndex, denomRange, scale))\r\n        }\r\n    }\r\n\r\n    console.log(performance.now() - t0);\r\n\r\n    return rtn;   \r\n}\r\nexport default getDataForBins","const mapFn = (val, bins, colors) => {\r\n    if (val == 0) return colors[0];\r\n    for (let i=1; i<bins.length; i++) {\r\n      if (val < bins[i]) {\r\n        return colors[i]\r\n      }\r\n    }\r\n    return colors[0];\r\n}\r\n\r\nexport default mapFn","import dataFn from './dataFunction';\r\n\r\nconst getDataForCharts = (data, table, startIndex, dates) => {\r\n    let t0 = performance.now()\r\n    let features = Object.keys(data);\r\n    let n = startIndex;\r\n    let rtn = []\r\n\r\n    while (n<data[features[0]][table].length) {\r\n        let tempObj = {};\r\n        let sum = 0;\r\n        let i = 0;\r\n\r\n        while (i<features.length) {\r\n            sum += data[features[i]][table][n]\r\n            // tempObj[`n${i}`] = data[features[i]][table][n]\r\n            i++;\r\n        }\r\n        tempObj.count = sum\r\n        tempObj.date = dates[n-startIndex]\r\n        rtn.push(tempObj);\r\n        n++;\r\n    }\r\n    \r\n    console.log(performance.now() - t0);\r\n    return rtn;\r\n\r\n}\r\n\r\nexport default getDataForCharts","import { useState } from 'react';\r\nimport DeckGL from '@deck.gl/react';\r\nimport {MapView, _GlobeView as GlobeView} from '@deck.gl/core';\r\nimport ReactMapGL from 'react-map-gl';\r\nimport { GeoJsonLayer, PolygonLayer } from '@deck.gl/layers';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setDataSidebar } from '../actions';\r\nimport { mapFn, dataFn } from '../utils';\r\n\r\nconst MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoibGl4dW45MTAiLCJhIjoiY2locXMxcWFqMDAwenQ0bTFhaTZmbnRwaiJ9.VRNeNnyb96Eo-CorkJmIqg';\r\n\r\nconst initialViewState = {\r\n    latitude: 35.850033,\r\n    longitude: -105.6500523,\r\n    zoom: 3.5,\r\n    pitch:0,\r\n    bearing:0\r\n}\r\nconst DATA_URL = {\r\n    CONTINENTS: `${process.env.PUBLIC_URL}/geojson/world50m.json`\r\n}\r\n\r\nconst viewGlobe = new GlobeView({id: 'globe', controller: false, resolution:1});\r\nconst view = new MapView({repeat: true});\r\n\r\nconst Map = () => { \r\n    \r\n    const [hoverInfo, setHoverInfo] = useState(false);\r\n    const [globalMap, setGlobalMap] = useState(false);\r\n\r\n    const storedData = useSelector(state => state.storedData);\r\n    const currentData = useSelector(state => state.currentData);\r\n    const bins = useSelector(state => state.bins);\r\n    const colorScale = useSelector(state => state.colorScale);\r\n    const use3D = useSelector(state => state.use3D);\r\n    const dataParams = useSelector(state => state.dataParams);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const GetFillColor = (f, bins) => bins.hasOwnProperty(\"bins\") ? mapFn(dataFn(f[dataParams.numerator], dataParams.nProperty, dataParams.nIndex, dataParams.nRange, f[dataParams.denominator], dataParams.dProperty, dataParams.dIndex, dataParams.dRange, dataParams.scale), bins.breaks, colorScale) : [0,0,0]\r\n    const GetHeight = (f, bins) => bins.hasOwnProperty(\"bins\") ? dataFn(f[dataParams.numerator], dataParams.nProperty, dataParams.nIndex, dataParams.nRange, f[dataParams.denominator], dataParams.dProperty, dataParams.dIndex, dataParams.dRange, dataParams.scale)*1000 : 0\r\n    \r\n    const Layers = [\r\n        new GeoJsonLayer({\r\n            id: 'base continents',\r\n            data: DATA_URL.CONTINENTS,\r\n            pickable: false,\r\n            stroked: false,\r\n            filled: true,\r\n            wireframe: false,\r\n            getFillColor: [30,30,30]\r\n        }),\r\n        new GeoJsonLayer({\r\n            id: 'choropleth',\r\n            data: {\r\n                \"type\": \"FeatureCollection\",\r\n                \"name\": currentData,\r\n                \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\r\n                \"features\": storedData[currentData] ? storedData[currentData] : [],\r\n            },\r\n            pickable: true,\r\n            stroked: false,\r\n            filled: true,\r\n            wireframe: false,\r\n            extruded:use3D,\r\n            opacity: use3D ? 1 : 0.5,\r\n            getFillColor: f => GetFillColor(f, bins),\r\n            getElevation: f => GetHeight(f, bins),\r\n            updateTriggers: {\r\n                data: currentData,\r\n                getFillColor: [dataParams],\r\n                getElevation: [dataParams],\r\n            },\r\n            onHover: info => setHoverInfo(info),\r\n            onClick: info => dispatch(setDataSidebar(info.object)),\r\n            autoHighlight: true,\r\n        }),\r\n    ]\r\n\r\n    return (\r\n        <div id=\"mapContainer\" style={{position:'fixed',left:0,top:0,width:'100%',height:'100%'}}>\r\n            <DeckGL\r\n            initialViewState={initialViewState}\r\n            controller={true}\r\n            layers={Layers}\r\n            views={globalMap ? viewGlobe : view} //enable this for globe view\r\n            >\r\n                <ReactMapGL\r\n                    reuseMaps\r\n                    mapStyle={'mapbox://styles/lixun910/ckhkoo8ix29s119ruodgwfxec'}\r\n                    preventStyleDiffing={true}\r\n                    mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\r\n                    >\r\n                </ReactMapGL >\r\n                {hoverInfo.object && (\r\n                <div style={{position: 'absolute', zIndex: 1, pointerEvents: 'none', left: hoverInfo.x, top: hoverInfo.y, background: 'white', padding:'0 10px'}}>\r\n                    <h5>{`${hoverInfo.object.properties.NAME},${hoverInfo.object.properties.state_name}`}</h5>\r\n                    {`Cases: ${hoverInfo.object.cases.slice(-1,)[0]}`}<br/>\r\n                    {`Deaths: ${hoverInfo.object.deaths.slice(-1,)[0]}`}<br/>\r\n                    {`New Cases: ${hoverInfo.object.cases.slice(-1,)[0]-hoverInfo.object.cases.slice(-2,-1)[0]}`}<br/>\r\n                    {`New Deaths: ${hoverInfo.object.deaths.slice(-1,)[0]-hoverInfo.object.deaths.slice(-2,-1)[0]}`}<br/>\r\n                    </div>\r\n                )}\r\n            </DeckGL>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default Map","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport { setDate, setVariableParams, incrementDate } from '../actions';\r\n// import { getParseCSV, getJson, mergeData, colIndex, getDataForBins } from './utils';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width:'100%',\r\n        margin:0,\r\n        padding:'5px 20px',\r\n        color: 'white'\r\n    },\r\n    button: {\r\n        color:'rgb(200,200,200)',\r\n        background: 'none',\r\n        transition: '250ms all',\r\n        borderColor: 'white !important',\r\n        fontSize: '75% !important',\r\n        '& :hover': {\r\n            color:'white'\r\n        },\r\n    },\r\n    buttonActive: {\r\n        cursor: 'initial',\r\n        fontSize: '75%',\r\n        color:'black !important',\r\n        background: 'white !important',\r\n        transition: '250ms all',\r\n        borderColor: 'white'\r\n    },\r\n    slider: {\r\n        color:'white',\r\n        height:'58%',\r\n        '& > span.MuiSlider-rail': {\r\n            display: 'none'\r\n        },\r\n        '& > span.MuiSlider-track': {\r\n            display: 'none'\r\n        },\r\n        '& > span.MuiSlider-thumb': {\r\n            width:'1px',\r\n            height:'100%'\r\n        },\r\n        '& > span.MuiSlider-thumb.MuiSlider-active': {\r\n            boxShadow: '0px 0px 10px rgba(200,200,200,0.5)'\r\n        }\r\n    },\r\n    playPauseButton: {\r\n        background:'none',\r\n        transform:'translateY(-100%)',\r\n        '& svg  > g': {\r\n            fill: \"white\"\r\n        }\r\n    }\r\n  });\r\n\r\nconst DateSlider = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();  \r\n    \r\n    const currentData = useSelector(state => state.currentData);\r\n    const dates = useSelector(state => state.dates);\r\n    const dataParams = useSelector(state => state.dataParams);\r\n    const startDateIndex = useSelector(state => state.startDateIndex);\r\n    \r\n    const [timerId, setTimerId] = useState(null);\r\n    const [customRange, setCustomRange] = useState(false);\r\n    \r\n    const handleChange = (event, newValue) => {\r\n        if (dataParams.nType === \"time-series\" && dataParams.dType === \"time-series\") {\r\n            dispatch(setVariableParams({nIndex: newValue, dIndex: newValue}))\r\n        } else if (dataParams.nType === \"time-series\") {\r\n            dispatch(setVariableParams({nIndex: newValue}))\r\n        } else if (dataParams.dType === \"time-series\") {\r\n            dispatch(setVariableParams({dIndex: newValue}))\r\n        } \r\n        dispatch(setDate(dates[currentData][newValue]));\r\n    };\r\n\r\n    const handlePlayPause = (timerId, rate, interval) => {\r\n        if (timerId === null) {\r\n            setTimerId(setInterval(o => dispatch(incrementDate(rate)), interval))\r\n        } else {\r\n            clearInterval(timerId);\r\n            setTimerId(null)\r\n        }\r\n    }\r\n\r\n    const handleRangeButton = (val) => {\r\n        if (val === 'custom') { // if swapping over to a custom range, which will use a 2-part slider to scrub the range\r\n            setCustomRange(true)\r\n            if (dataParams.nType === \"time-series\" && dataParams.dType === \"time-series\") {\r\n                dispatch(setVariableParams({nRange: 14, dRange: 14}))\r\n            } else if (dataParams.nType === \"time-series\") {\r\n                dispatch(setVariableParams({nRange: 14}))\r\n            } else if (dataParams.dType === \"time-series\") {\r\n                dispatch(setVariableParams({dRange: 14}))\r\n            } \r\n        } else { // use the new value -- null for cumulative, 1 for daily, 7 for weekly\r\n            setCustomRange(false)\r\n            if (dataParams.nType === \"time-series\" && dataParams.dType === \"time-series\") {\r\n                dispatch(setVariableParams({nRange: val, dRange: val}))\r\n            } else if (dataParams.nType === \"time-series\") {\r\n                dispatch(setVariableParams({nRange: val}))\r\n            } else if (dataParams.dType === \"time-series\") {\r\n                dispatch(setVariableParams({dRange: val}))\r\n            }    \r\n        }\r\n    }\r\n    function valuetext(value) {\r\n        return `${dates[currentData][value]}`;\r\n    }\r\n\r\n    if (dates[currentData] !== undefined) {\r\n        return (\r\n            <Grid container spacing={2} className={classes.root} id=\"slider-container\" style={{visibility: (dataParams.nType === 'time-series' ? 'visible' : 'hidden')}}>\r\n                {/* <Grid item xs={12}>\r\n                    <h4 style={{textAlign:\"center\", color:\"white\"}}>{dates[currentData][dataParams.nIndex]||dates[currentData].slice(-1,)[0]}</h4>\r\n                </Grid> */}\r\n                <Grid item xs={1}>\r\n                    <Button id=\"playPause\" className={classes.playPauseButton} onClick={() => handlePlayPause(timerId, 1, 100)}>\r\n                        {timerId === null ? \r\n                            <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\r\n                                <g transform=\"translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)\">\r\n                                    <g>\r\n                                        <path d=\"M74.4,58.7L40.7,92.2c-7.1,7.2-18.7,4.4-18.7-6.3V14c0-10.7,11.6-13.5,18.7-6.3l33.6,33.5\r\n                                            C79.1,46,79.1,53.8,74.4,58.7z M69.1,53.4c1.9-1.9,1.9-5,0-6.7L35.5,13c-2.1-2.1-6-3.2-6,1.1V86c0,4.3,3.9,3.2,6,1.1L69.1,53.4z\"\r\n                                            />\r\n                                    </g>\r\n                                </g>\r\n                            </svg>\r\n                            : \r\n                            <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\r\n                                <g transform=\"translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)\">\r\n                                    <g>\r\n                                        <path d=\"M22.4,0.6c3.4,0,6.8,0,10.3,0c6.5,0,11.8,5.3,11.8,11.8c0,25,0,50.1,0,75.2c0,6.5-5.3,11.8-11.8,11.8\r\n                                            c-3.4,0-6.8,0-10.3,0c-6.5,0-11.8-5.3-11.8-11.8c0-25.1,0-50.2,0-75.2C10.6,5.9,15.9,0.6,22.4,0.6z M22.4,6.5c3.4,0,6.8,0,10.3,0\r\n                                            c3.2,0,5.9,2.6,5.9,5.9c0,25,0,50.1,0,75.2c0,3.2-2.7,5.9-5.9,5.9c-3.4,0-6.8,0-10.3,0c-3.2,0-5.9-2.7-5.9-5.9\r\n                                            c0-25.1,0-50.2,0-75.2C16.5,9.1,19.2,6.5,22.4,6.5z M67.3,6.5c3.4,0,6.8,0,10.2,0s6,2.6,6,5.9c0,25,0,50.1,0,75.2\r\n                                            c0,3.2-2.7,5.9-6,5.9s-6.7,0-10.2,0c-3.3,0-5.9-2.7-5.9-5.9c0-25.1,0-50.2,0-75.2C61.4,9.1,64,6.5,67.3,6.5z M67.3,0.6\r\n                                            c3.4,0,6.8,0,10.2,0c6.5,0,11.8,5.3,11.8,11.8c0,25,0,50.1,0,75.2c0,6.5-5.3,11.8-11.8,11.8c-3.3,0-6.7,0-10.2,0\r\n                                            c-6.5,0-11.8-5.3-11.8-11.8c0-25.1,0-50.2,0-75.2C55.5,5.9,60.8,0.6,67.3,0.6z\"/>\r\n                                    </g>\r\n                                </g>\r\n                            </svg>\r\n\r\n                        }\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                    <Slider \r\n                        value={dataParams.nIndex} \r\n                        onChange={handleChange} \r\n                        getAriaValueText={valuetext}\r\n                        aria-labelledby=\"discrete-slider-always\"\r\n                        className={classes.slider}\r\n                        min={startDateIndex}\r\n                        step={1}\r\n                        max={dates[currentData].length-1}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <ButtonGroup\r\n                        orientation=\"vertical\"\r\n                        color=\"primary\"\r\n                        aria-label=\"vertical outlined primary button group\"\r\n                        style={{float:'right'}}\r\n                        valueLabelDisplay=\"on\"\r\n                    >\r\n                        <Button className={dataParams.nRange === null ? classes.buttonActive : classes.button} onClick={() => handleRangeButton(null)}>Total</Button>\r\n                        <Button className={dataParams.nRange === 1 ?classes.buttonActive : classes.button} onClick={() => handleRangeButton(1)}>New Daily</Button>\r\n                        <Button className={dataParams.nRange === 7 ? classes.buttonActive : classes.button} onClick={() => handleRangeButton(7)}>Weekly Average</Button>\r\n                        <Button className={customRange ? classes.buttonActive : classes.button} onClick={() => handleRangeButton('custom')}>Custom Range</Button>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    } else {\r\n        return <div className={classes.root} />\r\n    }\r\n}\r\n\r\nexport default DateSlider","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst Legend = ( props ) => {\r\n\r\n    const cleanBins = (bins) => {\r\n        if (bins === undefined) {\r\n            return;\r\n        } else if (bins.slice(-1,)[0] !==`>${bins.slice(-2,-1)[0]}`) {\r\n            return bins\r\n        }\r\n        bins.splice(0, 1, `<${bins[0]}`)\r\n        bins.splice(-2, 1)\r\n        return bins\r\n    }\r\n\r\n    return (\r\n        <div id='legend'>\r\n            <Grid container spacing={2} id='legend-bins-container'>\r\n                <Grid item xs={6}>\r\n                    <h3>\r\n                        {props.title !== undefined && props.title}\r\n                    </h3>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <div id=\"binBars\">\r\n                        {props.colors !== undefined && \r\n                            props.colors.map(color => <div className=\"bin color\" key={`${color[0]}${color[1]}`}style={{backgroundColor:`rgb(${color[0]},${color[1]},${color[2]})`}}></div>)\r\n                        }\r\n                    </div>\r\n                    <div id=\"binLabels\" style={{padding: (`0 ${props.labels !== undefined ? 100/props.labels.length/2-1 : 0}%`) }}>\r\n                        <div className=\"bin label\">0</div>\r\n                        {props.labels !== undefined && \r\n                            cleanBins(props.labels).map(label => <div className=\"bin label\" key={label}>{label}</div>)\r\n                        }\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Legend","import React, {useState} from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst DataPanel = (props) => {\r\n\r\n  const [hidePanel, setHidePanel] = useState(true);\r\n  const sidebarData = useSelector(state => state.sidebarData);\r\n\r\n  console.log(sidebarData)\r\n\r\n  return (\r\n    <div id=\"data-panel\" style={{transform: (hidePanel ? 'translateX(100%)' : '')}}>\r\n      <h2>Data Sources &amp;<br/> Map Variables</h2>\r\n      \r\n      <button onClick={() => setHidePanel(prev => { return !prev })} id=\"showHideRightPanel\" className={hidePanel ? 'hidden' : 'active'}>\r\n        <svg version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\r\n          <g transform=\"translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)\">\r\n            <path d=\"M38,33.8L23.9,47.9c-1.2,1.2-1.2,3.1,0,4.2L38,66.2l4.2-4.2l-9-9H71v17c0,0.6-0.4,1-1,1H59v6h11\r\n              c3.9,0,7-3.1,7-7V30c0-3.9-3.1-7-7-7H59v6h11c0.6,0,1,0.4,1,1v17H33.2l9-9L38,33.8z\"/>\r\n          </g>\r\n        </svg>\r\n\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataPanel;","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setVariableParams, setVariableName } from '../actions';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport { colLookup } from '../utils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 200,\r\n      color:'white',\r\n      padding:0,\r\n      margin: '0 10px 40px 0',\r\n      fontFamily: \"'Lato', sans-serif\",\r\n      '& > .MuiFormLabel-root': {\r\n        color:'white',\r\n      },\r\n      '& > .MuiInput-underline:before': {\r\n        borderBottom:'1px solid rgba(255,255, 255, 0.42)'\r\n      },\r\n      '& > .MuiInput-underline:after': {\r\n        borderBottom: '2px solid white'\r\n      },\r\n      '& > .MuiInputBase-root': {\r\n        color: 'white',\r\n        '& > .MuiSvgIcon-root': {\r\n          color: 'rgba(255,255,255,0.54)'\r\n        },\r\n        '& > .MuiPopover-paper': {\r\n          color:'white',\r\n          background:'black'\r\n        }\r\n      },\r\n      '& > .MuiFormGroup-root':{\r\n        '& > .MuiFormControlLabel-root': {\r\n          color:'white',\r\n          '& > .MuiRadio-root': {\r\n            color: 'rgba(255,255,255,0.54)'\r\n          },\r\n        }\r\n      }\r\n    },\r\n    twoUp: {\r\n      width:'100%',\r\n      '& > .MuiFormControl-root': {\r\n        width:'45%',\r\n        // display: 'inline',\r\n        minWidth:60\r\n      }\r\n    }\r\n}));\r\n\r\nconst VariablePanel = (props) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();  \r\n  \r\n  const columnNames = useSelector(state => state.cols);\r\n  const currentData = useSelector(state => state.currentData);\r\n  const currentVariable = useSelector(state => state.currentVariable);\r\n\r\n  const [hidePanel, setHidePanel] = useState(false);\r\n  \r\n  const PresetVariables = {\r\n      \"Confirmed Count\": {\r\n          numerator: 'cases',\r\n          nType: 'time-series',\r\n          nProperty: null,\r\n          nRange: null,\r\n          denominator: 'properties',\r\n          dType: 'none',\r\n          dProperty: null,\r\n          dRange:null,\r\n          dIndex:null,\r\n          scale:1,\r\n      },\r\n      \"Confirmed Count per 100K Population\": {\r\n          numerator: 'cases',\r\n          nType: 'time-series',\r\n          nProperty: null,\r\n          denominator: 'properties',\r\n          dType: 'characteristic',\r\n          dProperty: 'population',\r\n          dRange:null,\r\n          dIndex:null,\r\n          scale:100000,\r\n      },\r\n      \"Confirmed Count per Licensed Bed\": {\r\n          numerator: 'cases',\r\n          nType: 'time-series',\r\n          nProperty: null,\r\n          denominator: 'properties',\r\n          dType: 'characteristic',\r\n          dProperty: 'beds',\r\n          dRange:null,\r\n          dIndex:null,\r\n          scale:1,\r\n      },\r\n      \"Death Count\":{\r\n        numerator: 'deaths',\r\n        nType: 'time-series',\r\n        nProperty: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n          \r\n      }, \r\n      \"Death Count per 100K Population\":{\r\n        numerator: 'deaths',\r\n        nType: 'time-series',\r\n        nProperty: null,\r\n        denominator: 'properties',\r\n        dType: 'characteristic',\r\n        dProperty: 'population',\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:100000,\r\n\r\n      },\r\n      \"Death Count / Confirmed Count\":{\r\n        numerator: 'deaths',\r\n        nType: 'time-series',\r\n        nProperty: null,\r\n        denominator: 'cases',\r\n        dType: 'time-series',\r\n        dProperty: null,\r\n        dIndex:null,\r\n        scale:1,\r\n\r\n      },\r\n      \"Uninsured % (Community Health Factor)\":{\r\n        numerator: 'chr_health_factors',\r\n        nType: 'characteristic',\r\n        nProperty: colLookup(columnNames, currentData, 'chr_health_factors', 'UnInPrc'),\r\n        nRange: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n\r\n      },\r\n      \"Over 65 Years % (Community Health Context)\":{\r\n        numerator: 'chr_health_context',\r\n        nType: 'characteristic',\r\n        nProperty: colLookup(columnNames, currentData, 'chr_health_context', 'Over65YearsPrc'),\r\n        nRange: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n      },\r\n      \"Life expectancy (Length and Quality of Life)\":{\r\n        numerator: 'chr_life',\r\n        nType: 'characteristic',\r\n        nProperty: colLookup(columnNames, currentData, 'chr_life', 'LfExpRt'),\r\n        nRange: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n      }\r\n  }\r\n\r\n  const CountyVariables = {\r\n      \"Forecasting (5-Day Severity Index)\": {\r\n        numerator: 'predictions',\r\n        nType: 'characteristic',\r\n        nProperty: colLookup(columnNames, currentData, 'predictions', 'severity_index'),\r\n        nRange: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n      }\r\n  }\r\n\r\n  const StateVariables = {\r\n      \"7 Day Testing Positivity Rate %\": {\r\n        numerator: 'testing_wk_pos',\r\n        nType: 'time-series',\r\n        nProperty: null,\r\n        nRange: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n      },\r\n      \"7 Day Testing Capacity\": {\r\n        numerator: 'testing_tcap',\r\n        nType: 'time-series',\r\n        nProperty: null,\r\n        nRange: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n      }, \r\n      \"7 Day Confirmed Cases per Testing %\":{\r\n        numerator: 'testing_ccpt',\r\n        nType: 'time-series',\r\n        nProperty: null,\r\n        nRange: null,\r\n        denominator: 'properties',\r\n        dType: 'none',\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n      }\r\n  }\r\n\r\n  const handleVariable = (event) => {\r\n      let variable = event.target.value;\r\n      // setCurrVariableName(variable);\r\n      dispatch(setVariableName(variable))\r\n\r\n      if (PresetVariables.hasOwnProperty(variable)) {\r\n          dispatch(setVariableParams({...PresetVariables[variable]}))\r\n      } else if (CountyVariables.hasOwnProperty(variable)){\r\n          dispatch(setVariableParams({...CountyVariables[variable]}))\r\n      } else {\r\n          dispatch(setVariableParams({...StateVariables[variable]}))\r\n      }\r\n          \r\n  };\r\n\r\n  return (\r\n    <div id=\"variable-panel\" style={{transform: (hidePanel ? 'translateX(-100%)' : '')}}>\r\n      <h2>Data Sources &amp;<br/> Map Variables</h2>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"data-select\">Data Source</InputLabel>\r\n        <Select  \r\n          id=\"data-select\"\r\n        >\r\n          \r\n        <ListSubheader>County Data</ListSubheader>\r\n          <MenuItem value={'variable1'} key={'variable1'}>USA Facts</MenuItem>\r\n          <MenuItem value={'variable2'} key={'variable2'}>1point3acres</MenuItem>\r\n          <MenuItem value={'variable3'} key={'variable3'}>New York Times</MenuItem>\r\n        <ListSubheader>State Data</ListSubheader>\r\n          <MenuItem value={'variable4'} key={'variable4'}>1point3acres</MenuItem>\r\n          <MenuItem value={'variable5'} key={'variable5'}>New York Times</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <br />\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"numerator-select\">Select Variable</InputLabel>\r\n        <Select \r\n          defaultValue={currentVariable} \r\n          id=\"numerator-select\"\r\n          onChange={handleVariable}\r\n        >\r\n          {\r\n            Object.keys(PresetVariables).map((variable) => <MenuItem value={variable} key={variable}>{variable}</MenuItem> )\r\n          }\r\n          \r\n          {\r\n            currentData.includes(\"county\") && Object.keys(CountyVariables).map((variable) => <MenuItem value={variable} key={variable}>{variable}</MenuItem> )\r\n          }\r\n          \r\n          {\r\n            currentData.includes(\"state\") && Object.keys(StateVariables).map((variable) => <MenuItem value={variable} key={variable}>{variable}</MenuItem> )\r\n          }\r\n        </Select>\r\n      </FormControl>\r\n      <br/>\r\n      <FormControl component=\"fieldset\" className={classes.formControl}>\r\n        <FormLabel component=\"legend\">Map Type</FormLabel>\r\n        <RadioGroup aria-label=\"maptype\" name=\"maptype1\">\r\n          <FormControlLabel value=\"natural_breaks\" control={<Radio />} label=\"Choropleth\" />\r\n          <FormControlLabel value=\"hinge15\" control={<Radio />} label=\"Box Map\" />\r\n          <FormControlLabel value=\"lisa\" control={<Radio />} label=\"Local Moran\" />\r\n          <FormControlLabel value=\"cartogram\" control={<Radio />} label=\"Cartogram\" />\r\n        </RadioGroup>\r\n      </FormControl>\r\n      <div className={classes.twoUp}>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"overlay-select\">Overlay</InputLabel>\r\n          <Select  \r\n            id=\"overlay-select\"\r\n            defaultValue={\"Choose Overlay\"} \r\n          >\r\n            <MenuItem value={''} key={'na'}>None</MenuItem> \r\n            <MenuItem value={'variable1'} key={'variable1'}>Native American Reservations</MenuItem>\r\n            <MenuItem value={'variable2'} key={'variable2'}>Hypersegregated Cities</MenuItem>\r\n            <MenuItem value={'variable3'} key={'variable3'}>Black Belt Counties</MenuItem>\r\n            <MenuItem value={'variable4'} key={'variable4'}>US Congressional Districts</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"resource-select\">Resource</InputLabel>\r\n          <Select  \r\n            id=\"resource-select\"\r\n            defaultValue={\"Choose Resource\"} \r\n          >\r\n            <MenuItem value={''} key={'na'}>None</MenuItem> \r\n            <MenuItem value={'variable1'} key={'variable1'}>Clinics and Hospitals</MenuItem>\r\n            <MenuItem value={'variable2'} key={'variable2'}>Clinics</MenuItem>\r\n            <MenuItem value={'variable3'} key={'variable3'}>Hospitals</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <p class=\"note\">\r\n        Data is updated with freshest available data at 3pm CST daily, at minimum. \r\n        In case of data discrepancy, local health departments are considered most accurate as per CDC recommendations. \r\n        More information on <a href=\"data.html\">data</a>, <a href=\"methods.html\">methods</a>, \r\n        and <a href=\"FAQ.html\">FAQ</a> at main site.\r\n      </p>\r\n      <div class=\"poweredByGeoda\">\r\n            <a href=\"https://geodacenter.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <img src={`${process.env.PUBLIC_URL}/assets/img/geoda-logo.png`} />\r\n              POWERED BY GEODA\r\n            </a>\r\n        </div>\r\n      <button onClick={() => setHidePanel(prev => { return !prev })} id=\"showHideLeftPanel\" className={hidePanel ? 'hidden' : 'active'}>\r\n        <svg version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\r\n          <g transform=\"translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)\">\r\n            <path d=\"M38,33.8L23.9,47.9c-1.2,1.2-1.2,3.1,0,4.2L38,66.2l4.2-4.2l-9-9H71v17c0,0.6-0.4,1-1,1H59v6h11\r\n              c3.9,0,7-3.1,7-7V30c0-3.9-3.1-7-7-7H59v6h11c0.6,0,1,0.4,1,1v17H33.2l9-9L38,33.8z\"/>\r\n          </g>\r\n        </svg>\r\n\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VariablePanel;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\r\n} from 'recharts';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst MainLineChart = () => {\r\n    \r\n    const chartData = useSelector(state => state.chartData);\r\n    return (\r\n        <Grid container spacing={2} id=\"main-chart-container\">\r\n            <Grid item xs={10} style={{height:'100%'}}>\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                    <LineChart\r\n                        data={chartData}\r\n                        margin={{\r\n                            top: 0, right: 10, left: 45, bottom: 20,\r\n                        }}\r\n                    >\r\n                    {/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\r\n                    <XAxis \r\n                        dataKey=\"date\"\r\n                        // scale=\"time\"\r\n                    />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    {/* <Legend /> */}\r\n                    {/* <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} /> */}\r\n                    <Line type=\"monotone\" dataKey=\"count\" stroke=\"#82ca9d\" dot={false} />\r\n                    {/* {\r\n                        Object.keys(chartData[0]).map(key => {\r\n                            if(key!==\"count\") {\r\n                                return <Line type=\"monotone\" dataKey={`${key}`} key={`${key}`} stroke=\"#82ca9d\" dot={false} />\r\n                            }\r\n                        })\r\n                    } */}\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default MainLineChart","import React, { useEffect, useState } from 'react';\r\nimport { setCentroids, storeData, setCurrentData, setDates, setColumnNames, setDate, setDateIndex, setBins, set3D, setVariableParams, setStartDateIndex, setChartData } from './actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport GeodaProxy from './GeodaProxy.js';\r\nimport { getParseCSV, getJson, mergeData, colIndex, getDataForBins, getDataForCharts, colLookup } from './utils';\r\nimport { Map, DateSlider, Legend, VariablePanel, MainLineChart, DataPanel } from './components';\r\n\r\nfunction App() {\r\n  const storedData = useSelector(state => state.storedData);\r\n  const currentData = useSelector(state => state.currentData);\r\n  const currentVariable = useSelector(state => state.currentVariable);\r\n  const columnNames = useSelector(state => state.cols);\r\n  const dates = useSelector(state => state.dates);\r\n  const bins = useSelector(state => state.bins);\r\n  const binMode = useSelector(state => state.binMode);\r\n  const colorScale = useSelector(state => state.colorScale);\r\n  const dataParams = useSelector(state => state.dataParams);\r\n  const startDateIndex = useSelector(state => state.startDateIndex);\r\n\r\n  const [gda_proxy, set_gda_proxy] = useState(null);\r\n  \r\n  const dispatch = useDispatch();  \r\n  \r\n  const getCentroids = (geojson, gda_proxy) =>  dispatch(setCentroids(gda_proxy.GetCentroids(geojson), geojson))\r\n  \r\n  const getDates = (data, table, geojson) =>  {\r\n    let dates = findDates(data[table])\r\n    dispatch(setDates(dates[0], geojson))\r\n    dispatch(setDate(dates[0].slice(-1,)[0]))\r\n    dispatch(setVariableParams({nIndex: colIndex(data, table, dates[0].slice(-1,)[0])}))\r\n    dispatch(setStartDateIndex(dates[1]))\r\n  }\r\n\r\n  const findDates = (data) => {\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (Date.parse(data[i])) {\r\n        return [data.slice(i,),i]\r\n      }\r\n    }\r\n    return;\r\n  }\r\n\r\n  const getColumns = (data, names) => {\r\n    let rtn = {};\r\n    for (let i=0; i < data.length; i++) {\r\n      rtn[names[i]] = data[i][1]\r\n    }\r\n  return rtn;\r\n  }\r\n\r\n  async function loadData(geojson, csvs, joinCols, names, gda_proxy) {\r\n    const csvPromises = csvs.map(csv => getParseCSV(`${process.env.PUBLIC_URL}/csv/${csv}.csv`, joinCols[1]).then(result => {return result}))\r\n    Promise.all([\r\n      getJson(`${process.env.PUBLIC_URL}/geojson/${geojson}`, gda_proxy),\r\n      ...csvPromises\r\n    ]).then(values => {\r\n      // console.log(values.slice(1,))\r\n      dispatch(storeData(mergeData(values[0], joinCols[0], values.slice(1,), names, joinCols[1]),geojson));\r\n      dispatch(setCurrentData(geojson))\r\n      dispatch(setColumnNames(getColumns(values.slice(1,), names), geojson))\r\n    })    \r\n  }\r\n\r\n  // After runtime is initialized, this loads in gda_proxy to the state\r\n  useEffect(() => {\r\n    const waitForWASM = () => {\r\n      setTimeout(() => {\r\n        console.log(window.Module)\r\n        if (window.Module === undefined) {\r\n          waitForWASM()\r\n        } else {\r\n          if (gda_proxy === null) {\r\n            set_gda_proxy(new GeodaProxy());\r\n          }\r\n        }\r\n      }, 100)\r\n    }\r\n\r\n    waitForWASM()\r\n  },[window.Module])\r\n\r\n  // on initial load and after gda_proxy has been initialized, this loads in the default data sets (USA Facts)\r\n  useEffect(() => {\r\n    console.log(gda_proxy)\r\n    if ((gda_proxy !== null) && (currentData === '')) {\r\n      loadData(\r\n        'county_usfacts.geojson', \r\n        ['covid_confirmed_usafacts','covid_deaths_usafacts', 'berkeley_predictions', 'chr_health_context', 'chr_life', 'chr_health_factors'], \r\n        ['GEOID', 'FIPS'], \r\n        ['cases','deaths', 'predictions', 'chr_health_context', 'chr_life', 'chr_health_factors'],\r\n        gda_proxy\r\n      )\r\n    }\r\n  },[gda_proxy])\r\n\r\n  // whenever the current data changes, this \r\n  useEffect(() => {\r\n    if (currentData != '') {\r\n      if (!dates.hasOwnProperty(currentData)){\r\n        getCentroids(currentData, gda_proxy)\r\n        getDates(columnNames[currentData], 'cases', currentData)\r\n      }\r\n    } \r\n  },[columnNames])\r\n\r\n  useEffect(() => {\r\n    if (storedData[currentData]){\r\n      dispatch(\r\n        setChartData(\r\n          getDataForCharts(\r\n            storedData[currentData],\r\n            'cases',\r\n            startDateIndex,\r\n            dates[currentData]\r\n          )\r\n        )\r\n      )\r\n    }\r\n  }, [startDateIndex])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (gda_proxy !== null && currentData !== ''){\r\n      if (binMode === 'dynamic') {\r\n        let nb = gda_proxy.custom_breaks(\r\n          currentData, \r\n          \"natural_breaks\", \r\n          8, \r\n          null, \r\n          getDataForBins(\r\n            storedData[currentData], \r\n            dataParams.numerator, \r\n            dataParams.nProperty, \r\n            dataParams.nIndex, \r\n            dataParams.nRange, \r\n            dataParams.denominator, \r\n            dataParams.dProperty, \r\n            dataParams.dIndex, \r\n            dataParams.dRange, \r\n            dataParams.scale\r\n            )\r\n          )\r\n        dispatch(setBins(nb.bins, [-Math.pow(10, 12), ...nb.breaks.slice(1,-1), Math.pow(10, 12)]))\r\n      } else {\r\n        let nb = gda_proxy.custom_breaks(\r\n          currentData, \r\n          \"natural_breaks\", \r\n          8, \r\n          null, \r\n          getDataForBins(\r\n            storedData[currentData], \r\n            dataParams.numerator, \r\n            dataParams.nType,\r\n            dataParams.nProperty, \r\n            null,\r\n            dataParams.nRange, \r\n            dataParams.denominator,\r\n            dataParams.dType,\r\n            dataParams.dProperty, \r\n            dataParams.dIndex, \r\n            dataParams.dRange, \r\n            dataParams.scale\r\n            )\r\n          )\r\n        dispatch(setBins(nb.bins, [-Math.pow(10, 12), ...nb.breaks.slice(1,-1), Math.pow(10, 12)]))\r\n      }\r\n    }\r\n  }, [dates, storedData[currentData], dataParams.numerator, dataParams.nProperty, dataParams.nRange, dataParams.denominator, dataParams.dProperty, dataParams.dRange, dataParams.scale])\r\n\r\n  useEffect(() => {\r\n    if (gda_proxy !== null && binMode === 'dynamic' && currentData !== ''){\r\n      let nb = gda_proxy.custom_breaks(\r\n        currentData, \r\n        \"natural_breaks\", \r\n        8, \r\n        null, \r\n        getDataForBins(\r\n          storedData[currentData], \r\n          dataParams.numerator, \r\n          dataParams.nProperty, \r\n          dataParams.nIndex, \r\n          dataParams.nRange, \r\n          dataParams.denominator, \r\n          dataParams.dProperty, \r\n          dataParams.dIndex, \r\n          dataParams.dRange, \r\n          dataParams.scale\r\n          )\r\n        )\r\n      dispatch(setBins(nb.bins, [-Math.pow(10, 12), ...nb.breaks.slice(1,-1), Math.pow(10, 12)]))\r\n    }\r\n  }, [dataParams.nIndex, dataParams.dIndex])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <header className=\"App-header\" style={{position:'fixed', left: '30vw', top:'20px', zIndex:10}}>\r\n        <h1 style={{color:\"white\"}}>Tech Demo</h1>\r\n        <button onClick={() => console.log(         getDataForCharts(\r\n            storedData[currentData],\r\n            'cases',\r\n            startDateIndex,\r\n            dates[currentData]\r\n          ))}>total count</button>\r\n      </header> */}\r\n      <Map />\r\n      <VariablePanel />\r\n      <DataPanel />\r\n      <div id=\"bottom-drawer\">\r\n        <Legend labels={bins.bins} title={currentVariable} colors={colorScale} />\r\n        <hr />\r\n        <MainLineChart />\r\n        <DateSlider />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const INITIAL_STATE = {\r\n  geodaProxy: null,\r\n  storedData: {},\r\n  cols: {},\r\n  currentData: '',\r\n  chartData: {},\r\n  bins: {},\r\n  binMode: '',\r\n  colorScale:  [\r\n    [240,240,240],\r\n    [255,255,204],\r\n    [255,237,160],\r\n    [254,217,118],\r\n    [254,178,76],\r\n    [253,141,60],\r\n    [252,78,42],\r\n    [227,26,28],\r\n    [177,0,38],\r\n  ],\r\n  centroids: {},\r\n  dates: {},\r\n  currDate: '',\r\n  currDateIndex: '',\r\n  startDateIndex: '',\r\n  currentVariable: 'Confirmed Count per 100K Population',\r\n  currentMethod: 'natural_breaks',\r\n  currentOverlay: '',\r\n  currentResource: '',\r\n  dataParams: {\r\n    numerator: 'cases',\r\n    nType: 'time-series',\r\n    nProperty: null,\r\n    nRange: 7,\r\n    nIndex:null,\r\n    denominator: 'properties',\r\n    dType: 'characteristic',\r\n    dProperty: 'population',\r\n    dRange:null,\r\n    dIndex:null,\r\n    scale:100000,\r\n  },\r\n  storedRange: null,\r\n  isCartogram: false,\r\n  currentGeoid: '',\r\n  use3D: false,\r\n  sidebarData: {},\r\n  chartData: [{}]\r\n};","import { INITIAL_STATE } from '../constants/defaults';\r\n\r\nvar reducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case 'SET_GEOID': \r\n            return {\r\n                ...state,\r\n                currentGeoid: action.payload.geoid\r\n            };\r\n        case 'SET_STORED_DATA':\r\n            let obj = {\r\n                ...state.storedData,\r\n            }\r\n            obj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                storedData: obj\r\n            };\r\n        case 'SET_CENTROIDS':\r\n            let centroidsObj = {\r\n                ...state.centroids,\r\n            }\r\n            centroidsObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                centroids: centroidsObj\r\n            };\r\n        case 'SET_CURRENT_DATA':\r\n            return {\r\n                ...state,\r\n                currentData: action.payload.data\r\n            }\r\n        case 'SET_GEODA_PROXY':\r\n            return {\r\n                ...state,\r\n                geodaProxy: action.payload.proxy\r\n            }\r\n        case 'SET_DATES':\r\n            let datesObj = {\r\n                ...state.dates\r\n            }\r\n            datesObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                dates: datesObj\r\n            }\r\n        case 'SET_DATA_FUNCTION':\r\n            return {\r\n                ...state,\r\n                currentDataFn: action.payload.fn\r\n            }\r\n        case 'SET_COLUMN_NAMES':\r\n            let colObj = {\r\n                ...state.cols\r\n            }\r\n            colObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                cols: colObj\r\n            }\r\n        case 'SET_CURR_DATE':\r\n            return {\r\n                ...state,\r\n                currDate: action.payload.date\r\n            }\r\n        case 'SET_DATE_INDEX':\r\n            return {\r\n                ...state,\r\n                currDateIndex: action.payload.index\r\n            }\r\n        case 'SET_START_DATE_INDEX':\r\n            return {\r\n                ...state,\r\n                startDateIndex: action.payload.index\r\n            }\r\n        case 'SET_BINS':\r\n            let binsObj = {};\r\n            binsObj['bins'] =  action.payload.bins;\r\n            binsObj['breaks'] =  action.payload.breaks;\r\n            return {\r\n                ...state,\r\n                bins: binsObj\r\n            }\r\n        case 'SET_3D':\r\n            return {\r\n                ...state,\r\n                use3D: !state.use3D\r\n            }\r\n        case 'SET_DATA_SIDEBAR':\r\n            return {\r\n                ...state,\r\n                sidebarData: action.payload.data\r\n            }\r\n        case 'INCREMENT_DATE':\r\n            let dateObj = {\r\n                ...state.dataParams\r\n            }\r\n            if (action.payload.index+state.dataParams.nIndex > state.dates[state.currentData].length) {\r\n                dateObj.nIndex = state.startDateIndex;\r\n                dateObj.dIndex = state.startDateIndex;\r\n                return {\r\n                    ...state,\r\n                    dataParams:dateObj\r\n                }\r\n            } else {\r\n                dateObj.nIndex = dateObj.nIndex + action.payload.index;\r\n                dateObj.dIndex = dateObj.dIndex + action.payload.index;\r\n                return {\r\n                    ...state,\r\n                    dataParams:dateObj\r\n                }\r\n            }\r\n        case 'SET_VARIABLE_PARAMS':\r\n            let paramObj = {\r\n                ...state.dataParams,\r\n                ...action.payload.params\r\n            }\r\n\r\n            if (paramObj.nType === 'time-series' && paramObj.nIndex === null) {\r\n                paramObj.nIndex = state.storedIndex;\r\n                paramObj.nRange = state.storedRange;\r\n            }\r\n            if (paramObj.dType === 'time-series' && paramObj.dIndex === null) {\r\n                paramObj.dIndex = state.storedIndex;\r\n                paramObj.dRange = state.storedRange;\r\n            }\r\n            if (paramObj.nType === 'characteristic' && state.dataParams.nType === 'time-series') {\r\n                return {\r\n                    ...state,\r\n                    storedIndex: state.dataParams.nIndex,\r\n                    storedRange: state.dataParams.nRange,\r\n                    dataParams: paramObj,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    dataParams: paramObj \r\n                }\r\n            }\r\n        case 'SET_VARIABLE_NAME':\r\n            return {\r\n                ...state,\r\n                currentVariable: action.payload.name\r\n            }\r\n        case 'SET_CHART_DATA':\r\n            return {\r\n                ...state,\r\n                chartData: action.payload.data\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { createStore} from 'redux';\r\nimport reducer from './reducers';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport WebFont from 'webfontloader';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\n\r\nWebFont.load({\r\n  google: {\r\n    families: ['Lato:300,400,700,900', 'Montserrat:400,600,800', 'Playfair Display:ital', 'sans-serif']\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}